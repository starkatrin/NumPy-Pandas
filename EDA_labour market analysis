{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/starkatrin/NumPy-Pandas/blob/main/EDA_labour%20market%20analysis\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UlSqr7-_xJnK"
      },
      "source": [
        "###EDA"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "w9uX_JZ2e771"
      },
      "source": [
        "Импорт библиотеки Pandas. Загрузка датасета"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "zoqMjb-YveJe"
      },
      "outputs": [],
      "source": [
        "!pip install -q xlrd\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import ast\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import scipy\n",
        "import scipy.stats as stats\n",
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "QiMMbV0Fxx3P"
      },
      "outputs": [],
      "source": [
        "df = pd.read_excel('region roles (26.05.22).xlsx')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DCYqWZmrlASP"
      },
      "source": [
        "Изучим структуру датасета"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RXsJDlA_v7ws",
        "outputId": "9259c475-fa9c-4e81-956e-0aae5df62a69"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 69656 entries, 0 to 69655\n",
            "Data columns (total 34 columns):\n",
            " #   Column                    Non-Null Count  Dtype  \n",
            "---  ------                    --------------  -----  \n",
            " 0   Unnamed: 0                69656 non-null  int64  \n",
            " 1   id                        69656 non-null  int64  \n",
            " 2   premium                   69656 non-null  bool   \n",
            " 3   name                      69656 non-null  object \n",
            " 4   department                5263 non-null   object \n",
            " 5   has_test                  69656 non-null  bool   \n",
            " 6   response_letter_required  69656 non-null  bool   \n",
            " 7   area                      69656 non-null  object \n",
            " 8   salary                    37590 non-null  object \n",
            " 9   type                      69656 non-null  object \n",
            " 10  address                   40318 non-null  object \n",
            " 11  response_url              1 non-null      object \n",
            " 12  sort_point_distance       0 non-null      float64\n",
            " 13  published_at              69656 non-null  object \n",
            " 14  created_at                69656 non-null  object \n",
            " 15  archived                  69656 non-null  bool   \n",
            " 16  insider_interview         522 non-null    object \n",
            " 17  url                       69656 non-null  object \n",
            " 18  alternate_url             69656 non-null  object \n",
            " 19  relations                 69656 non-null  object \n",
            " 20  employer                  69656 non-null  object \n",
            " 21  snippet                   69656 non-null  object \n",
            " 22  contacts                  35114 non-null  object \n",
            " 23  schedule                  69656 non-null  object \n",
            " 24  working_days              69656 non-null  object \n",
            " 25  working_time_intervals    69656 non-null  object \n",
            " 26  working_time_modes        69656 non-null  object \n",
            " 27  accept_temporary          69656 non-null  bool   \n",
            " 28  description               69656 non-null  object \n",
            " 29  experience                69656 non-null  object \n",
            " 30  key_skills                69656 non-null  object \n",
            " 31  specializations           69656 non-null  object \n",
            " 32  region                    69656 non-null  object \n",
            " 33  immediate_redirect_url    1 non-null      object \n",
            "dtypes: bool(5), float64(1), int64(2), object(26)\n",
            "memory usage: 15.7+ MB\n"
          ]
        }
      ],
      "source": [
        "df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "2mAI15oohDTI",
        "outputId": "24b85b4d-aefe-4230-c57b-39a9f6d3773d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                                          0  \\\n",
              "Unnamed: 0                                                                0   \n",
              "id                                                                 49059633   \n",
              "premium                                                               False   \n",
              "name                                Младший специалист ручного тестирования   \n",
              "department                                                              NaN   \n",
              "has_test                                                              False   \n",
              "response_letter_required                                              False   \n",
              "area                      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "salary                                                                  NaN   \n",
              "type                                     {'id': 'open', 'name': 'Открытая'}   \n",
              "address                                                                 NaN   \n",
              "response_url                                                            NaN   \n",
              "sort_point_distance                                                     NaN   \n",
              "published_at                                       2022-05-23T09:11:18+0300   \n",
              "created_at                                         2022-05-23T09:11:18+0300   \n",
              "archived                                                              False   \n",
              "insider_interview                                                       NaN   \n",
              "url                         https://api.hh.ru/vacancies/49059633?host=hh.ru   \n",
              "alternate_url                                https://hh.ru/vacancy/49059633   \n",
              "relations                                                                []   \n",
              "employer                  {'id': '1740', 'name': 'Яндекс', 'url': 'https...   \n",
              "snippet                   {'requirement': 'Внимательны и наблюдательны. ...   \n",
              "contacts                                                                NaN   \n",
              "schedule                       {'id': 'remote', 'name': 'Удаленная работа'}   \n",
              "working_days                                                             []   \n",
              "working_time_intervals                                                   []   \n",
              "working_time_modes                                                       []   \n",
              "accept_temporary                                                      False   \n",
              "description               <p>В некоторых проектах Яндексу помогают компа...   \n",
              "experience                      {'id': 'noExperience', 'name': 'Нет опыта'}   \n",
              "key_skills                                                               []   \n",
              "specializations           [{'id': '1.172', 'name': 'Начальный уровень, М...   \n",
              "region                                                 Астраханская область   \n",
              "immediate_redirect_url                                                  NaN   \n",
              "\n",
              "                                                                          1  \\\n",
              "Unnamed: 0                                                                1   \n",
              "id                                                                 54653519   \n",
              "premium                                                               False   \n",
              "name                                                        Тестировщик.Net   \n",
              "department                                                              NaN   \n",
              "has_test                                                              False   \n",
              "response_letter_required                                              False   \n",
              "area                      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "salary                    {'from': 25000, 'to': 50000, 'currency': 'RUR'...   \n",
              "type                                     {'id': 'open', 'name': 'Открытая'}   \n",
              "address                                                                 NaN   \n",
              "response_url                                                            NaN   \n",
              "sort_point_distance                                                     NaN   \n",
              "published_at                                       2022-04-28T17:36:03+0300   \n",
              "created_at                                         2022-04-28T17:36:03+0300   \n",
              "archived                                                              False   \n",
              "insider_interview                                                       NaN   \n",
              "url                         https://api.hh.ru/vacancies/54653519?host=hh.ru   \n",
              "alternate_url                                https://hh.ru/vacancy/54653519   \n",
              "relations                                                                []   \n",
              "employer                  {'id': '1245158', 'name': 'МФК Саммит', 'url':...   \n",
              "snippet                   {'requirement': 'Мы ищем талантливого и амбици...   \n",
              "contacts                  {'name': 'Синанова Мария', 'email': 'sinanova....   \n",
              "schedule                           {'id': 'fullDay', 'name': 'Полный день'}   \n",
              "working_days                                                             []   \n",
              "working_time_intervals                                                   []   \n",
              "working_time_modes                                                       []   \n",
              "accept_temporary                                                      False   \n",
              "description               <p><em><strong>Мы ищем талантливого и амбициоз...   \n",
              "experience                {'id': 'between1And3', 'name': 'От 1 года до 3...   \n",
              "key_skills                [{'name': 'Git'}, {'name': 'SQL'}, {'name': 'Т...   \n",
              "specializations           [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "region                                                 Астраханская область   \n",
              "immediate_redirect_url                                                  NaN   \n",
              "\n",
              "                                                                          2  \\\n",
              "Unnamed: 0                                                                2   \n",
              "id                                                                 55116066   \n",
              "premium                                                               False   \n",
              "name                                                              Пентестер   \n",
              "department                                                              NaN   \n",
              "has_test                                                              False   \n",
              "response_letter_required                                              False   \n",
              "area                      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "salary                                                                  NaN   \n",
              "type                                     {'id': 'open', 'name': 'Открытая'}   \n",
              "address                                                                 NaN   \n",
              "response_url                                                            NaN   \n",
              "sort_point_distance                                                     NaN   \n",
              "published_at                                       2022-05-20T10:07:33+0300   \n",
              "created_at                                         2022-05-20T10:07:33+0300   \n",
              "archived                                                              False   \n",
              "insider_interview                                                       NaN   \n",
              "url                         https://api.hh.ru/vacancies/55116066?host=hh.ru   \n",
              "alternate_url                                https://hh.ru/vacancy/55116066   \n",
              "relations                                                                []   \n",
              "employer                  {'id': '719820', 'name': 'SearchInform', 'url'...   \n",
              "snippet                   {'requirement': 'Глубокие знания клиентских и ...   \n",
              "contacts                                                                NaN   \n",
              "schedule                           {'id': 'fullDay', 'name': 'Полный день'}   \n",
              "working_days                                                             []   \n",
              "working_time_intervals                                                   []   \n",
              "working_time_modes                                                       []   \n",
              "accept_temporary                                                      False   \n",
              "description               <p>Лидер на рынке систем информационной безопа...   \n",
              "experience                  {'id': 'between3And6', 'name': 'От 3 до 6 лет'}   \n",
              "key_skills                [{'name': 'SQL'}, {'name': 'Linux'}, {'name': ...   \n",
              "specializations           [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "region                                                 Астраханская область   \n",
              "immediate_redirect_url                                                  NaN   \n",
              "\n",
              "                                                                          3  \\\n",
              "Unnamed: 0                                                                3   \n",
              "id                                                                 54031261   \n",
              "premium                                                               False   \n",
              "name                       Ведущий Специалист по информационным технологиям   \n",
              "department                {'id': 'pochta-4352-office', 'name': '«Почта Р...   \n",
              "has_test                                                              False   \n",
              "response_letter_required                                              False   \n",
              "area                      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "salary                    {'from': 26000, 'to': None, 'currency': 'RUR',...   \n",
              "type                                     {'id': 'open', 'name': 'Открытая'}   \n",
              "address                   {'city': 'Астрахань', 'street': 'улица Черныше...   \n",
              "response_url                                                            NaN   \n",
              "sort_point_distance                                                     NaN   \n",
              "published_at                                       2022-05-23T07:46:16+0300   \n",
              "created_at                                         2022-05-23T07:46:16+0300   \n",
              "archived                                                              False   \n",
              "insider_interview                                                       NaN   \n",
              "url                         https://api.hh.ru/vacancies/54031261?host=hh.ru   \n",
              "alternate_url                                https://hh.ru/vacancy/54031261   \n",
              "relations                                                                []   \n",
              "employer                  {'id': '4352', 'name': 'Почта России', 'url': ...   \n",
              "snippet                   {'requirement': 'Средне-профессиональное или в...   \n",
              "contacts                  {'name': 'Данилова Екатерина Александровна', '...   \n",
              "schedule                           {'id': 'fullDay', 'name': 'Полный день'}   \n",
              "working_days                                                             []   \n",
              "working_time_intervals                                                   []   \n",
              "working_time_modes                                                       []   \n",
              "accept_temporary                                                      False   \n",
              "description               <ul> <li>Администрирование компьютерной сети</...   \n",
              "experience                      {'id': 'noExperience', 'name': 'Нет опыта'}   \n",
              "key_skills                [{'name': 'Пользователь ПК'}, {'name': 'Работа...   \n",
              "specializations           [{'id': '1.110', 'name': 'Компьютерная безопас...   \n",
              "region                                                 Астраханская область   \n",
              "immediate_redirect_url                                                  NaN   \n",
              "\n",
              "                                                                          4  \n",
              "Unnamed: 0                                                                4  \n",
              "id                                                                 55243040  \n",
              "premium                                                               False  \n",
              "name                                        Специалист по защите информации  \n",
              "department                                                              NaN  \n",
              "has_test                                                              False  \n",
              "response_letter_required                                              False  \n",
              "area                      {'id': '15', 'name': 'Астрахань', 'url': 'http...  \n",
              "salary                    {'from': 20000, 'to': 20000, 'currency': 'RUR'...  \n",
              "type                                     {'id': 'open', 'name': 'Открытая'}  \n",
              "address                   {'city': 'Астрахань', 'street': 'улица Молодой...  \n",
              "response_url                                                            NaN  \n",
              "sort_point_distance                                                     NaN  \n",
              "published_at                                       2022-05-06T10:18:54+0300  \n",
              "created_at                                         2022-05-06T10:18:54+0300  \n",
              "archived                                                              False  \n",
              "insider_interview                                                       NaN  \n",
              "url                         https://api.hh.ru/vacancies/55243040?host=hh.ru  \n",
              "alternate_url                                https://hh.ru/vacancy/55243040  \n",
              "relations                                                                []  \n",
              "employer                  {'id': '6694236', 'name': 'ГБПОУ АО Астраханск...  \n",
              "snippet                   {'requirement': 'Медицинская комиссия, справка...  \n",
              "contacts                  {'name': 'Трубицына Елена', 'email': 'info@ast...  \n",
              "schedule                           {'id': 'fullDay', 'name': 'Полный день'}  \n",
              "working_days                                                             []  \n",
              "working_time_intervals                                                   []  \n",
              "working_time_modes                                                       []  \n",
              "accept_temporary                                                      False  \n",
              "description               <strong>Обязанности:</strong> <ul> <li>Обеспеч...  \n",
              "experience                      {'id': 'noExperience', 'name': 'Нет опыта'}  \n",
              "key_skills                [{'name': 'MS Dos'}, {'name': 'Диагностика ПК'...  \n",
              "specializations           [{'id': '1.110', 'name': 'Компьютерная безопас...  \n",
              "region                                                 Астраханская область  \n",
              "immediate_redirect_url                                                  NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-40c56a9d-13d7-4541-924a-4be776a3f97d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>id</th>\n",
              "      <td>49059633</td>\n",
              "      <td>54653519</td>\n",
              "      <td>55116066</td>\n",
              "      <td>54031261</td>\n",
              "      <td>55243040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>premium</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>name</th>\n",
              "      <td>Младший специалист ручного тестирования</td>\n",
              "      <td>Тестировщик.Net</td>\n",
              "      <td>Пентестер</td>\n",
              "      <td>Ведущий Специалист по информационным технологиям</td>\n",
              "      <td>Специалист по защите информации</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>department</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>{'id': 'pochta-4352-office', 'name': '«Почта Р...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>has_test</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>response_letter_required</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>area</th>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>salary</th>\n",
              "      <td>NaN</td>\n",
              "      <td>{'from': 25000, 'to': 50000, 'currency': 'RUR'...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>{'from': 26000, 'to': None, 'currency': 'RUR',...</td>\n",
              "      <td>{'from': 20000, 'to': 20000, 'currency': 'RUR'...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>type</th>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>address</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>{'city': 'Астрахань', 'street': 'улица Черныше...</td>\n",
              "      <td>{'city': 'Астрахань', 'street': 'улица Молодой...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>response_url</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sort_point_distance</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>published_at</th>\n",
              "      <td>2022-05-23T09:11:18+0300</td>\n",
              "      <td>2022-04-28T17:36:03+0300</td>\n",
              "      <td>2022-05-20T10:07:33+0300</td>\n",
              "      <td>2022-05-23T07:46:16+0300</td>\n",
              "      <td>2022-05-06T10:18:54+0300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>created_at</th>\n",
              "      <td>2022-05-23T09:11:18+0300</td>\n",
              "      <td>2022-04-28T17:36:03+0300</td>\n",
              "      <td>2022-05-20T10:07:33+0300</td>\n",
              "      <td>2022-05-23T07:46:16+0300</td>\n",
              "      <td>2022-05-06T10:18:54+0300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>archived</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>insider_interview</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>url</th>\n",
              "      <td>https://api.hh.ru/vacancies/49059633?host=hh.ru</td>\n",
              "      <td>https://api.hh.ru/vacancies/54653519?host=hh.ru</td>\n",
              "      <td>https://api.hh.ru/vacancies/55116066?host=hh.ru</td>\n",
              "      <td>https://api.hh.ru/vacancies/54031261?host=hh.ru</td>\n",
              "      <td>https://api.hh.ru/vacancies/55243040?host=hh.ru</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>alternate_url</th>\n",
              "      <td>https://hh.ru/vacancy/49059633</td>\n",
              "      <td>https://hh.ru/vacancy/54653519</td>\n",
              "      <td>https://hh.ru/vacancy/55116066</td>\n",
              "      <td>https://hh.ru/vacancy/54031261</td>\n",
              "      <td>https://hh.ru/vacancy/55243040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>relations</th>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>employer</th>\n",
              "      <td>{'id': '1740', 'name': 'Яндекс', 'url': 'https...</td>\n",
              "      <td>{'id': '1245158', 'name': 'МФК Саммит', 'url':...</td>\n",
              "      <td>{'id': '719820', 'name': 'SearchInform', 'url'...</td>\n",
              "      <td>{'id': '4352', 'name': 'Почта России', 'url': ...</td>\n",
              "      <td>{'id': '6694236', 'name': 'ГБПОУ АО Астраханск...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>snippet</th>\n",
              "      <td>{'requirement': 'Внимательны и наблюдательны. ...</td>\n",
              "      <td>{'requirement': 'Мы ищем талантливого и амбици...</td>\n",
              "      <td>{'requirement': 'Глубокие знания клиентских и ...</td>\n",
              "      <td>{'requirement': 'Средне-профессиональное или в...</td>\n",
              "      <td>{'requirement': 'Медицинская комиссия, справка...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>contacts</th>\n",
              "      <td>NaN</td>\n",
              "      <td>{'name': 'Синанова Мария', 'email': 'sinanova....</td>\n",
              "      <td>NaN</td>\n",
              "      <td>{'name': 'Данилова Екатерина Александровна', '...</td>\n",
              "      <td>{'name': 'Трубицына Елена', 'email': 'info@ast...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>schedule</th>\n",
              "      <td>{'id': 'remote', 'name': 'Удаленная работа'}</td>\n",
              "      <td>{'id': 'fullDay', 'name': 'Полный день'}</td>\n",
              "      <td>{'id': 'fullDay', 'name': 'Полный день'}</td>\n",
              "      <td>{'id': 'fullDay', 'name': 'Полный день'}</td>\n",
              "      <td>{'id': 'fullDay', 'name': 'Полный день'}</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>working_days</th>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>working_time_intervals</th>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>working_time_modes</th>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>accept_temporary</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>description</th>\n",
              "      <td>&lt;p&gt;В некоторых проектах Яндексу помогают компа...</td>\n",
              "      <td>&lt;p&gt;&lt;em&gt;&lt;strong&gt;Мы ищем талантливого и амбициоз...</td>\n",
              "      <td>&lt;p&gt;Лидер на рынке систем информационной безопа...</td>\n",
              "      <td>&lt;ul&gt; &lt;li&gt;Администрирование компьютерной сети&lt;/...</td>\n",
              "      <td>&lt;strong&gt;Обязанности:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;Обеспеч...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>experience</th>\n",
              "      <td>{'id': 'noExperience', 'name': 'Нет опыта'}</td>\n",
              "      <td>{'id': 'between1And3', 'name': 'От 1 года до 3...</td>\n",
              "      <td>{'id': 'between3And6', 'name': 'От 3 до 6 лет'}</td>\n",
              "      <td>{'id': 'noExperience', 'name': 'Нет опыта'}</td>\n",
              "      <td>{'id': 'noExperience', 'name': 'Нет опыта'}</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>key_skills</th>\n",
              "      <td>[]</td>\n",
              "      <td>[{'name': 'Git'}, {'name': 'SQL'}, {'name': 'Т...</td>\n",
              "      <td>[{'name': 'SQL'}, {'name': 'Linux'}, {'name': ...</td>\n",
              "      <td>[{'name': 'Пользователь ПК'}, {'name': 'Работа...</td>\n",
              "      <td>[{'name': 'MS Dos'}, {'name': 'Диагностика ПК'...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>specializations</th>\n",
              "      <td>[{'id': '1.172', 'name': 'Начальный уровень, М...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>[{'id': '1.110', 'name': 'Компьютерная безопас...</td>\n",
              "      <td>[{'id': '1.110', 'name': 'Компьютерная безопас...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>region</th>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>Астраханская область</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>immediate_redirect_url</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40c56a9d-13d7-4541-924a-4be776a3f97d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-40c56a9d-13d7-4541-924a-4be776a3f97d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-40c56a9d-13d7-4541-924a-4be776a3f97d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "df.head().T"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NLFARycW5Uzk",
        "outputId": "6c73dd64-3397-4b6e-ef42-997543dfd7dd"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        {'id': '15', 'name': 'Астрахань', 'url': 'http...\n",
              "1        {'id': '15', 'name': 'Астрахань', 'url': 'http...\n",
              "2        {'id': '15', 'name': 'Астрахань', 'url': 'http...\n",
              "3        {'id': '15', 'name': 'Астрахань', 'url': 'http...\n",
              "4        {'id': '15', 'name': 'Астрахань', 'url': 'http...\n",
              "                               ...                        \n",
              "69651    {'id': '92', 'name': 'Тула', 'url': 'https://a...\n",
              "69652    {'id': '92', 'name': 'Тула', 'url': 'https://a...\n",
              "69653    {'id': '92', 'name': 'Тула', 'url': 'https://a...\n",
              "69654    {'id': '92', 'name': 'Тула', 'url': 'https://a...\n",
              "69655    {'id': '92', 'name': 'Тула', 'url': 'https://a...\n",
              "Name: area, Length: 69656, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ],
      "source": [
        "df['area']"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ElGL6Ow8l-Ni"
      },
      "source": [
        "Изучим столбец area"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "t3K5YvWoTqne",
        "outputId": "3a9470b8-7b85-4fb1-96c0-9ef25cc5bcca"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "\"{'id': '15', 'name': 'Астрахань', 'url': 'https://api.hh.ru/areas/15'}\""
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ],
      "source": [
        "df['area'].values[1]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AbRxJQio3SEY",
        "outputId": "2ab0bf43-fe32-49c2-8c3d-29995df2d141"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False    69656\n",
              "Name: area, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "df['area'].isna().value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jQKni4pU4xSw",
        "outputId": "b3c98047-2dea-426e-fd99-d22b47b529fc"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'id': '1', 'name': 'Москва', 'url': 'https://api.hh.ru/areas/1'}                                20066\n",
              "{'id': '2', 'name': 'Санкт-Петербург', 'url': 'https://api.hh.ru/areas/2'}                        8251\n",
              "{'id': '3', 'name': 'Екатеринбург', 'url': 'https://api.hh.ru/areas/3'}                           2427\n",
              "{'id': '4', 'name': 'Новосибирск', 'url': 'https://api.hh.ru/areas/4'}                            2412\n",
              "{'id': '88', 'name': 'Казань', 'url': 'https://api.hh.ru/areas/88'}                               1927\n",
              "                                                                                                 ...  \n",
              "{'id': '3664', 'name': 'Балахта (Красноярский край)', 'url': 'https://api.hh.ru/areas/3664'}         1\n",
              "{'id': '4757', 'name': 'Кедровый (Красноярский край)', 'url': 'https://api.hh.ru/areas/4757'}        1\n",
              "{'id': '4754', 'name': 'Казачинское', 'url': 'https://api.hh.ru/areas/4754'}                         1\n",
              "{'id': '215', 'name': 'Тура (Красноярский край)', 'url': 'https://api.hh.ru/areas/215'}              1\n",
              "{'id': '1920', 'name': 'Ефремов', 'url': 'https://api.hh.ru/areas/1920'}                             1\n",
              "Name: area, Length: 1032, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "df['area'].value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DwVAKIIj4cIk"
      },
      "source": [
        "Извлекаем id и name региона в отдельные столбцы, ловим ошибки:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "id": "wQ-LZ-fPM1pG"
      },
      "outputs": [],
      "source": [
        "for i in range(0, 69656):\n",
        "  try:\n",
        "    str = df['area'].values[i].replace(\"'\", \"\").replace(\",\", \"\")\n",
        "    str = str.split()\n",
        "    df.at[i, 'region_id'] = str[1]\n",
        "    df.at[i, 'region_name'] = str[3]\n",
        "  except:\n",
        "    df.at[i, 'region_id'] = 0\n",
        "    df.at[i, 'region_name'] = 0"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OMp9Ct-k05mu",
        "outputId": "026cc6dc-64cd-4022-ea08-64a09838c7dd"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        Астрахань\n",
              "1        Астрахань\n",
              "2        Астрахань\n",
              "3        Астрахань\n",
              "4        Астрахань\n",
              "           ...    \n",
              "69651         Тула\n",
              "69652         Тула\n",
              "69653         Тула\n",
              "69654         Тула\n",
              "69655         Тула\n",
              "Name: region_name, Length: 69656, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ],
      "source": [
        "df['region_name']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "XQ_3c-Gp409h",
        "outputId": "2d6fef4e-0849-4748-a726-19a6da0b0ec5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [Unnamed: 0, id, premium, name, department, has_test, response_letter_required, area, salary, type, address, response_url, sort_point_distance, published_at, created_at, archived, insider_interview, url, alternate_url, relations, employer, snippet, contacts, schedule, working_days, working_time_intervals, working_time_modes, accept_temporary, description, experience, key_skills, specializations, region, immediate_redirect_url, region_id, region_name]\n",
              "Index: []\n",
              "\n",
              "[0 rows x 36 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-23b75bd1-c0f9-47c3-84dc-c11d749b9752\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>id</th>\n",
              "      <th>premium</th>\n",
              "      <th>name</th>\n",
              "      <th>department</th>\n",
              "      <th>has_test</th>\n",
              "      <th>response_letter_required</th>\n",
              "      <th>area</th>\n",
              "      <th>salary</th>\n",
              "      <th>type</th>\n",
              "      <th>...</th>\n",
              "      <th>working_time_modes</th>\n",
              "      <th>accept_temporary</th>\n",
              "      <th>description</th>\n",
              "      <th>experience</th>\n",
              "      <th>key_skills</th>\n",
              "      <th>specializations</th>\n",
              "      <th>region</th>\n",
              "      <th>immediate_redirect_url</th>\n",
              "      <th>region_id</th>\n",
              "      <th>region_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>0 rows × 36 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23b75bd1-c0f9-47c3-84dc-c11d749b9752')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-23b75bd1-c0f9-47c3-84dc-c11d749b9752 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-23b75bd1-c0f9-47c3-84dc-c11d749b9752');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ],
      "source": [
        "df[df['region_name'] == 0.0]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "69ecrVabDM9D",
        "outputId": "37ca94c7-412d-4f8e-ed95-679ae7eff22d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "\"{'from': 25000, 'to': 50000, 'currency': 'RUR', 'gross': True}\""
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "df['salary'].values[1]"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5DoBQv3oDyDt"
      },
      "source": [
        "Извлечем значения заработной платы из столбца 'salary'"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "id": "QVoYyYm3_gMy"
      },
      "outputs": [],
      "source": [
        "df['salary'] = df['salary'].fillna(0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9mMglSpnsXch",
        "outputId": "d5c1b590-5a38-4aca-f6ec-0441ef4730a1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    32066\n",
              "Name: salary, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ],
      "source": [
        "n = df[df['salary'] == 0]\n",
        "n['salary'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "id": "Wtfi-UuVDvdW"
      },
      "outputs": [],
      "source": [
        "for i in range(0, 69656):\n",
        "  str = df['salary'].values[i]\n",
        "  if str != 0:\n",
        "    try:\n",
        "        str = str.replace(\"'\", \"\").replace(\",\", \"\").split()\n",
        "        df.at[i, 'salary_min'] = str[1]\n",
        "        df.at[i, 'salary_max'] = str[3]\n",
        "        df.at[i, 'currency'] = str[5]\n",
        "        df.at[i, 'gross'] = str[7].replace(\"}\", \"\")     \n",
        "    except:\n",
        "        a = []\n",
        "        if str[1] == None:\n",
        "          df.at[i, 'salary_min'] == 0\n",
        "        elif str[3] == None:\n",
        "          df.at[i, 'salary_max'] == 0\n",
        "        elif str[5] == None:\n",
        "          df.at[i, 'currency'] == 0\n",
        "        elif str[7] == None:\n",
        "          df.at[i, 'gross'] == 0  \n",
        "        else: a = a.append(i)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JqNTlTISHQ74",
        "outputId": "19bb14d1-14d6-4d8b-cc4d-5dc5f8d7ce84"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "None      3516\n",
              "50000     3040\n",
              "40000     2720\n",
              "60000     2181\n",
              "100000    2155\n",
              "          ... \n",
              "156600       1\n",
              "304000       1\n",
              "6500         1\n",
              "310000       1\n",
              "50400        1\n",
              "Name: salary_min, Length: 898, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ],
      "source": [
        "df['salary_min'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0bNP3a8cfqYl",
        "outputId": "2b95e694-75c1-4511-f230-763b5e2a31f1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "None      17634\n",
              "150000     1375\n",
              "50000      1300\n",
              "100000     1249\n",
              "200000     1140\n",
              "          ...  \n",
              "46400         1\n",
              "42195         1\n",
              "51145         1\n",
              "32700         1\n",
              "40600         1\n",
              "Name: salary_max, Length: 793, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ],
      "source": [
        "df['salary_max'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bO1-FybvsNiF",
        "outputId": "683d803c-0a02-4e45-f5ce-9a0363e967e3"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "472 88 2\n"
          ]
        }
      ],
      "source": [
        "usd = df[df['currency'] == 'USD'].index.to_list()\n",
        "eur = df[df['currency'] == 'EUR'].index.to_list()\n",
        "kzt = df[df['currency'] == 'KZT'].index.to_list()\n",
        "print(len(usd), len(eur), len(kzt))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2VJABJ84fyAG"
      },
      "source": [
        "В связи с тем, что колонка salary_max имеет большое количество пропусков в виде None, Nan значений, будем обрабатывать и анализировать данные из колонки salary_min.\n",
        "Переведем все значения в рубли, зарплату пересчитаем с учетом налога 13 %"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QwrRDVdRejm_",
        "outputId": "ec2e4e24-929c-416c-8665-1b5aaf74a101"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "12044"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ],
      "source": [
        "gross = df[df['gross'] == 'True'].index.to_list()\n",
        "len(gross)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "id": "aqSCtck5a9SW"
      },
      "outputs": [],
      "source": [
        "df['salary_min'].replace('None', np.nan, inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "id": "Lh5s44tISIjY"
      },
      "outputs": [],
      "source": [
        "ind = df[df['salary_min'].notna()].index.to_list()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QstWTVFBVlTM",
        "outputId": "e17d95a7-5467-47bc-8293-46bedbf0fbcf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "34074"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ],
      "source": [
        "len(ind)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "id": "hBVwhtPXa7Wz"
      },
      "outputs": [],
      "source": [
        "df['salary_min'] = df['salary_min'].fillna(0).astype(int)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "id": "mq2Pv9oQnO7f"
      },
      "outputs": [],
      "source": [
        "df.loc[df['salary_min'].index.isin(usd), 'salary_min'] *= 60.9\n",
        "df.loc[df['salary_min'].index.isin(eur), 'salary_min'] *= 62.54\n",
        "df.loc[df['salary_min'].index.isin(kzt), 'salary_min'] *= 0.1275"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "AedUsZVJns3O",
        "outputId": "8ea752c8-9b70-49c0-f549-b69b41c943fe"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Unnamed: 0        id  premium  \\\n",
              "18275        8127  55431433    False   \n",
              "66253        2189  55168780    False   \n",
              "\n",
              "                                                    name department  has_test  \\\n",
              "18275        3D художник (скульпт - животные и анатомия)        NaN     False   \n",
              "66253  Разработчик бизнес-процессов/Разработчик Atlas...        NaN     False   \n",
              "\n",
              "       response_letter_required  \\\n",
              "18275                     False   \n",
              "66253                      True   \n",
              "\n",
              "                                                    area  \\\n",
              "18275  {'id': '1', 'name': 'Москва', 'url': 'https://...   \n",
              "66253  {'id': '4', 'name': 'Новосибирск', 'url': 'htt...   \n",
              "\n",
              "                                                  salary  \\\n",
              "18275  {'from': 200000, 'to': 250000, 'currency': 'KZ...   \n",
              "66253  {'from': 400000, 'to': 700000, 'currency': 'KZ...   \n",
              "\n",
              "                                     type  ...  \\\n",
              "18275  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "66253  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "\n",
              "                                              key_skills  \\\n",
              "18275  [{'name': 'Blender 3D'}, {'name': 'ZBrush'}, {...   \n",
              "66253  [{'name': 'Java'}, {'name': 'Linux'}, {'name':...   \n",
              "\n",
              "                                         specializations  \\\n",
              "18275  [{'id': '1.475', 'name': 'Игровое ПО', 'profar...   \n",
              "66253  [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "\n",
              "                      region immediate_redirect_url region_id  region_name  \\\n",
              "18275                 Москва                    NaN         1       Москва   \n",
              "66253  Новосибирская область                    NaN         4  Новосибирск   \n",
              "\n",
              "      salary_min salary_max currency  gross  \n",
              "18275    25500.0     250000      KZT   True  \n",
              "66253    51000.0     700000      KZT  False  \n",
              "\n",
              "[2 rows x 40 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f09a7071-efce-4882-a4cd-f89f74064c02\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>id</th>\n",
              "      <th>premium</th>\n",
              "      <th>name</th>\n",
              "      <th>department</th>\n",
              "      <th>has_test</th>\n",
              "      <th>response_letter_required</th>\n",
              "      <th>area</th>\n",
              "      <th>salary</th>\n",
              "      <th>type</th>\n",
              "      <th>...</th>\n",
              "      <th>key_skills</th>\n",
              "      <th>specializations</th>\n",
              "      <th>region</th>\n",
              "      <th>immediate_redirect_url</th>\n",
              "      <th>region_id</th>\n",
              "      <th>region_name</th>\n",
              "      <th>salary_min</th>\n",
              "      <th>salary_max</th>\n",
              "      <th>currency</th>\n",
              "      <th>gross</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>18275</th>\n",
              "      <td>8127</td>\n",
              "      <td>55431433</td>\n",
              "      <td>False</td>\n",
              "      <td>3D художник (скульпт - животные и анатомия)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '1', 'name': 'Москва', 'url': 'https://...</td>\n",
              "      <td>{'from': 200000, 'to': 250000, 'currency': 'KZ...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Blender 3D'}, {'name': 'ZBrush'}, {...</td>\n",
              "      <td>[{'id': '1.475', 'name': 'Игровое ПО', 'profar...</td>\n",
              "      <td>Москва</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>Москва</td>\n",
              "      <td>25500.0</td>\n",
              "      <td>250000</td>\n",
              "      <td>KZT</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66253</th>\n",
              "      <td>2189</td>\n",
              "      <td>55168780</td>\n",
              "      <td>False</td>\n",
              "      <td>Разработчик бизнес-процессов/Разработчик Atlas...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>{'id': '4', 'name': 'Новосибирск', 'url': 'htt...</td>\n",
              "      <td>{'from': 400000, 'to': 700000, 'currency': 'KZ...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Java'}, {'name': 'Linux'}, {'name':...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Новосибирская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4</td>\n",
              "      <td>Новосибирск</td>\n",
              "      <td>51000.0</td>\n",
              "      <td>700000</td>\n",
              "      <td>KZT</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2 rows × 40 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f09a7071-efce-4882-a4cd-f89f74064c02')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f09a7071-efce-4882-a4cd-f89f74064c02 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f09a7071-efce-4882-a4cd-f89f74064c02');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ],
      "source": [
        "df[df['salary_min'].index.isin(kzt)]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "metadata": {
        "id": "Ydu-yScDo-Ar"
      },
      "outputs": [],
      "source": [
        "df.loc[df['salary_min'].index.isin(gross), 'salary_min'] *= 0.87"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "1ozzAP33pJZJ",
        "outputId": "2ab031b6-4426-4bb2-f5f1-106ebc21783a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Unnamed: 0        id  premium  \\\n",
              "1               1  54653519    False   \n",
              "3               3  54031261    False   \n",
              "7               7  55356367    False   \n",
              "10             10  55901539    False   \n",
              "12             12  55503708    False   \n",
              "...           ...       ...      ...   \n",
              "69643         455  55895723    False   \n",
              "69644         456  55895724    False   \n",
              "69646         458  55904184    False   \n",
              "69647         459  55904191    False   \n",
              "69648         460  55907132    False   \n",
              "\n",
              "                                                   name  \\\n",
              "1                                       Тестировщик.Net   \n",
              "3      Ведущий Специалист по информационным технологиям   \n",
              "7                       Специалист по защите информации   \n",
              "10                                Менеджер по персоналу   \n",
              "12               Начальник отдела управления персоналом   \n",
              "...                                                 ...   \n",
              "69643                               Инженер-программист   \n",
              "69644                               Инженер-программист   \n",
              "69646                    Веб-программист (PHP, Битрикс)   \n",
              "69647            Ведущий веб-программист (PHP, Битрикс)   \n",
              "69648                            Программист (удаленно)   \n",
              "\n",
              "                                              department  has_test  \\\n",
              "1                                                    NaN     False   \n",
              "3      {'id': 'pochta-4352-office', 'name': '«Почта Р...     False   \n",
              "7                                                    NaN     False   \n",
              "10                                                   NaN     False   \n",
              "12                                                   NaN     False   \n",
              "...                                                  ...       ...   \n",
              "69643                                                NaN     False   \n",
              "69644                                                NaN     False   \n",
              "69646                                                NaN     False   \n",
              "69647                                                NaN     False   \n",
              "69648                                                NaN     False   \n",
              "\n",
              "       response_letter_required  \\\n",
              "1                         False   \n",
              "3                         False   \n",
              "7                         False   \n",
              "10                        False   \n",
              "12                        False   \n",
              "...                         ...   \n",
              "69643                     False   \n",
              "69644                     False   \n",
              "69646                     False   \n",
              "69647                     False   \n",
              "69648                     False   \n",
              "\n",
              "                                                    area  \\\n",
              "1      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "3      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "7      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "10     {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "12     {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "...                                                  ...   \n",
              "69643  {'id': '92', 'name': 'Тула', 'url': 'https://a...   \n",
              "69644  {'id': '1931', 'name': 'Ясногорск', 'url': 'ht...   \n",
              "69646  {'id': '92', 'name': 'Тула', 'url': 'https://a...   \n",
              "69647  {'id': '92', 'name': 'Тула', 'url': 'https://a...   \n",
              "69648  {'id': '92', 'name': 'Тула', 'url': 'https://a...   \n",
              "\n",
              "                                                  salary  \\\n",
              "1      {'from': 25000, 'to': 50000, 'currency': 'RUR'...   \n",
              "3      {'from': 26000, 'to': None, 'currency': 'RUR',...   \n",
              "7      {'from': 27000, 'to': 27000, 'currency': 'RUR'...   \n",
              "10     {'from': 40000, 'to': None, 'currency': 'RUR',...   \n",
              "12     {'from': 40000, 'to': None, 'currency': 'RUR',...   \n",
              "...                                                  ...   \n",
              "69643  {'from': 48000, 'to': 53000, 'currency': 'RUR'...   \n",
              "69644  {'from': 48000, 'to': 53000, 'currency': 'RUR'...   \n",
              "69646  {'from': 70000, 'to': 130000, 'currency': 'RUR...   \n",
              "69647  {'from': 130000, 'to': 200000, 'currency': 'RU...   \n",
              "69648  {'from': 20000, 'to': 300000, 'currency': 'RUR...   \n",
              "\n",
              "                                     type  ...  \\\n",
              "1      {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "3      {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "7      {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "10     {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "12     {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "...                                   ...  ...   \n",
              "69643  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "69644  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "69646  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "69647  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "69648  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "\n",
              "                                              key_skills  \\\n",
              "1      [{'name': 'Git'}, {'name': 'SQL'}, {'name': 'Т...   \n",
              "3      [{'name': 'Пользователь ПК'}, {'name': 'Работа...   \n",
              "7      [{'name': 'Пользователь ПК'}, {'name': 'Работа...   \n",
              "10     [{'name': 'Подбор персонала'}, {'name': 'Адапт...   \n",
              "12                                                    []   \n",
              "...                                                  ...   \n",
              "69643  [{'name': 'оформление документации'}, {'name':...   \n",
              "69644  [{'name': 'оформление документации'}, {'name':...   \n",
              "69646  [{'name': 'PHP'}, {'name': 'HTML'}, {'name': '...   \n",
              "69647  [{'name': 'Веб-программирование'}, {'name': 'У...   \n",
              "69648  [{'name': 'JavaScript'}, {'name': 'Git'}, {'na...   \n",
              "\n",
              "                                         specializations  \\\n",
              "1      [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "3      [{'id': '1.110', 'name': 'Компьютерная безопас...   \n",
              "7      [{'id': '1.110', 'name': 'Компьютерная безопас...   \n",
              "10     [{'id': '6.254', 'name': 'Рекрутмент', 'profar...   \n",
              "12     [{'id': '6.254', 'name': 'Рекрутмент', 'profar...   \n",
              "...                                                  ...   \n",
              "69643  [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "69644  [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "69646  [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "69647  [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "69648  [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "\n",
              "                     region immediate_redirect_url region_id  region_name  \\\n",
              "1      Астраханская область                    NaN        15    Астрахань   \n",
              "3      Астраханская область                    NaN        15    Астрахань   \n",
              "7      Астраханская область                    NaN        15    Астрахань   \n",
              "10     Астраханская область                    NaN        15    Астрахань   \n",
              "12     Астраханская область                    NaN        15    Астрахань   \n",
              "...                     ...                    ...       ...          ...   \n",
              "69643      Тульская область                    NaN        92         Тула   \n",
              "69644      Тульская область                    NaN      1931    Ясногорск   \n",
              "69646      Тульская область                    NaN        92         Тула   \n",
              "69647      Тульская область                    NaN        92         Тула   \n",
              "69648      Тульская область                    NaN        92         Тула   \n",
              "\n",
              "      salary_min salary_max currency gross  \n",
              "1        21750.0      50000      RUR  True  \n",
              "3        22620.0       None      RUR  True  \n",
              "7        23490.0      27000      RUR  True  \n",
              "10       34800.0       None      RUR  True  \n",
              "12       34800.0       None      RUR  True  \n",
              "...          ...        ...      ...   ...  \n",
              "69643    41760.0      53000      RUR  True  \n",
              "69644    41760.0      53000      RUR  True  \n",
              "69646    60900.0     130000      RUR  True  \n",
              "69647   113100.0     200000      RUR  True  \n",
              "69648    17400.0     300000      RUR  True  \n",
              "\n",
              "[12044 rows x 40 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8dadba52-8303-496b-a255-a1f2494d2bbc\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>id</th>\n",
              "      <th>premium</th>\n",
              "      <th>name</th>\n",
              "      <th>department</th>\n",
              "      <th>has_test</th>\n",
              "      <th>response_letter_required</th>\n",
              "      <th>area</th>\n",
              "      <th>salary</th>\n",
              "      <th>type</th>\n",
              "      <th>...</th>\n",
              "      <th>key_skills</th>\n",
              "      <th>specializations</th>\n",
              "      <th>region</th>\n",
              "      <th>immediate_redirect_url</th>\n",
              "      <th>region_id</th>\n",
              "      <th>region_name</th>\n",
              "      <th>salary_min</th>\n",
              "      <th>salary_max</th>\n",
              "      <th>currency</th>\n",
              "      <th>gross</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>54653519</td>\n",
              "      <td>False</td>\n",
              "      <td>Тестировщик.Net</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'from': 25000, 'to': 50000, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Git'}, {'name': 'SQL'}, {'name': 'Т...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>21750.0</td>\n",
              "      <td>50000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>54031261</td>\n",
              "      <td>False</td>\n",
              "      <td>Ведущий Специалист по информационным технологиям</td>\n",
              "      <td>{'id': 'pochta-4352-office', 'name': '«Почта Р...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'from': 26000, 'to': None, 'currency': 'RUR',...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Пользователь ПК'}, {'name': 'Работа...</td>\n",
              "      <td>[{'id': '1.110', 'name': 'Компьютерная безопас...</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>22620.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>7</td>\n",
              "      <td>55356367</td>\n",
              "      <td>False</td>\n",
              "      <td>Специалист по защите информации</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'from': 27000, 'to': 27000, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Пользователь ПК'}, {'name': 'Работа...</td>\n",
              "      <td>[{'id': '1.110', 'name': 'Компьютерная безопас...</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>23490.0</td>\n",
              "      <td>27000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>10</td>\n",
              "      <td>55901539</td>\n",
              "      <td>False</td>\n",
              "      <td>Менеджер по персоналу</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'from': 40000, 'to': None, 'currency': 'RUR',...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Подбор персонала'}, {'name': 'Адапт...</td>\n",
              "      <td>[{'id': '6.254', 'name': 'Рекрутмент', 'profar...</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>34800.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>12</td>\n",
              "      <td>55503708</td>\n",
              "      <td>False</td>\n",
              "      <td>Начальник отдела управления персоналом</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'from': 40000, 'to': None, 'currency': 'RUR',...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[]</td>\n",
              "      <td>[{'id': '6.254', 'name': 'Рекрутмент', 'profar...</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>34800.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69643</th>\n",
              "      <td>455</td>\n",
              "      <td>55895723</td>\n",
              "      <td>False</td>\n",
              "      <td>Инженер-программист</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '92', 'name': 'Тула', 'url': 'https://a...</td>\n",
              "      <td>{'from': 48000, 'to': 53000, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'оформление документации'}, {'name':...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>41760.0</td>\n",
              "      <td>53000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69644</th>\n",
              "      <td>456</td>\n",
              "      <td>55895724</td>\n",
              "      <td>False</td>\n",
              "      <td>Инженер-программист</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '1931', 'name': 'Ясногорск', 'url': 'ht...</td>\n",
              "      <td>{'from': 48000, 'to': 53000, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'оформление документации'}, {'name':...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1931</td>\n",
              "      <td>Ясногорск</td>\n",
              "      <td>41760.0</td>\n",
              "      <td>53000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69646</th>\n",
              "      <td>458</td>\n",
              "      <td>55904184</td>\n",
              "      <td>False</td>\n",
              "      <td>Веб-программист (PHP, Битрикс)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '92', 'name': 'Тула', 'url': 'https://a...</td>\n",
              "      <td>{'from': 70000, 'to': 130000, 'currency': 'RUR...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'PHP'}, {'name': 'HTML'}, {'name': '...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>60900.0</td>\n",
              "      <td>130000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69647</th>\n",
              "      <td>459</td>\n",
              "      <td>55904191</td>\n",
              "      <td>False</td>\n",
              "      <td>Ведущий веб-программист (PHP, Битрикс)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '92', 'name': 'Тула', 'url': 'https://a...</td>\n",
              "      <td>{'from': 130000, 'to': 200000, 'currency': 'RU...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Веб-программирование'}, {'name': 'У...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>113100.0</td>\n",
              "      <td>200000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69648</th>\n",
              "      <td>460</td>\n",
              "      <td>55907132</td>\n",
              "      <td>False</td>\n",
              "      <td>Программист (удаленно)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '92', 'name': 'Тула', 'url': 'https://a...</td>\n",
              "      <td>{'from': 20000, 'to': 300000, 'currency': 'RUR...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'JavaScript'}, {'name': 'Git'}, {'na...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>17400.0</td>\n",
              "      <td>300000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>12044 rows × 40 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8dadba52-8303-496b-a255-a1f2494d2bbc')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8dadba52-8303-496b-a255-a1f2494d2bbc button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8dadba52-8303-496b-a255-a1f2494d2bbc');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ],
      "source": [
        "df[df['salary_min'].index.isin(gross)]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "metadata": {
        "id": "tSOqQhfX6rAx"
      },
      "outputs": [],
      "source": [
        "df['salary_min'].replace(0, np.nan, inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 33,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-bd9l7aPSMgO",
        "outputId": "ccd0a63f-4af9-45a7-a289-057b98e9e6b1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 69656 entries, 0 to 69655\n",
            "Data columns (total 40 columns):\n",
            " #   Column                    Non-Null Count  Dtype  \n",
            "---  ------                    --------------  -----  \n",
            " 0   Unnamed: 0                69656 non-null  int64  \n",
            " 1   id                        69656 non-null  int64  \n",
            " 2   premium                   69656 non-null  bool   \n",
            " 3   name                      69656 non-null  object \n",
            " 4   department                5263 non-null   object \n",
            " 5   has_test                  69656 non-null  bool   \n",
            " 6   response_letter_required  69656 non-null  bool   \n",
            " 7   area                      69656 non-null  object \n",
            " 8   salary                    69656 non-null  object \n",
            " 9   type                      69656 non-null  object \n",
            " 10  address                   40318 non-null  object \n",
            " 11  response_url              1 non-null      object \n",
            " 12  sort_point_distance       0 non-null      float64\n",
            " 13  published_at              69656 non-null  object \n",
            " 14  created_at                69656 non-null  object \n",
            " 15  archived                  69656 non-null  bool   \n",
            " 16  insider_interview         522 non-null    object \n",
            " 17  url                       69656 non-null  object \n",
            " 18  alternate_url             69656 non-null  object \n",
            " 19  relations                 69656 non-null  object \n",
            " 20  employer                  69656 non-null  object \n",
            " 21  snippet                   69656 non-null  object \n",
            " 22  contacts                  35114 non-null  object \n",
            " 23  schedule                  69656 non-null  object \n",
            " 24  working_days              69656 non-null  object \n",
            " 25  working_time_intervals    69656 non-null  object \n",
            " 26  working_time_modes        69656 non-null  object \n",
            " 27  accept_temporary          69656 non-null  bool   \n",
            " 28  description               69656 non-null  object \n",
            " 29  experience                69656 non-null  object \n",
            " 30  key_skills                69656 non-null  object \n",
            " 31  specializations           69656 non-null  object \n",
            " 32  region                    69656 non-null  object \n",
            " 33  immediate_redirect_url    1 non-null      object \n",
            " 34  region_id                 69656 non-null  object \n",
            " 35  region_name               69656 non-null  object \n",
            " 36  salary_min                34074 non-null  float64\n",
            " 37  salary_max                37590 non-null  object \n",
            " 38  currency                  37590 non-null  object \n",
            " 39  gross                     37590 non-null  object \n",
            "dtypes: bool(5), float64(2), int64(2), object(31)\n",
            "memory usage: 18.9+ MB\n"
          ]
        }
      ],
      "source": [
        "df.info()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "T51_iV3ZBJvi"
      },
      "source": [
        "Удалим строки, где salary_min меньше 10000, посмотрим, есть ли строки с очень высокой зарплатой >500000"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 34,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oz5oUG2a8dmg",
        "outputId": "ee17604a-a444-4d41-fb07-b09518506972"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8700.00    32\n",
              "20.00      12\n",
              "5000.00     9\n",
              "30.00       5\n",
              "8000.00     4\n",
              "50.00       3\n",
              "6000.00     3\n",
              "9000.00     3\n",
              "1000.00     3\n",
              "69.60       1\n",
              "1500.00     1\n",
              "55.00       1\n",
              "39.15       1\n",
              "182.70      1\n",
              "750.00      1\n",
              "4132.50     1\n",
              "3915.00     1\n",
              "60.00       1\n",
              "91.35       1\n",
              "8699.13     1\n",
              "40.00       1\n",
              "700.00      1\n",
              "1305.00     1\n",
              "70.00       1\n",
              "42.00       1\n",
              "7500.00     1\n",
              "180.00      1\n",
              "800.00      1\n",
              "10.44       1\n",
              "65.25       1\n",
              "120.00      1\n",
              "156.60      1\n",
              "26.10       1\n",
              "2000.00     1\n",
              "25.00       1\n",
              "Name: salary_min, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ],
      "source": [
        "df.loc[df['salary_min']<10000, 'salary_min'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "metadata": {
        "id": "AifOc4uU_sVd"
      },
      "outputs": [],
      "source": [
        "df.drop(df[df['salary_min']<10000].index, inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "w8U5WFlaA4do",
        "outputId": "8b4ccfeb-c98c-44ac-f1f3-c4b2d2a17a21"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Unnamed: 0        id  premium  \\\n",
              "0               0  49059633    False   \n",
              "1               1  54653519    False   \n",
              "2               2  55116066    False   \n",
              "3               3  54031261    False   \n",
              "4               4  55243040    False   \n",
              "...           ...       ...      ...   \n",
              "69551         463  66113834    False   \n",
              "69552         464  66113885    False   \n",
              "69553         465  54749225    False   \n",
              "69554         466  55498724    False   \n",
              "69555         467  55544352    False   \n",
              "\n",
              "                                                    name  \\\n",
              "0                Младший специалист ручного тестирования   \n",
              "1                                        Тестировщик.Net   \n",
              "2                                              Пентестер   \n",
              "3       Ведущий Специалист по информационным технологиям   \n",
              "4                        Специалист по защите информации   \n",
              "...                                                  ...   \n",
              "69551                                   Программист Java   \n",
              "69552                                     Программист 1C   \n",
              "69553         Начальник отдела информационных технологий   \n",
              "69554            Технический директор (DevOps, технолог)   \n",
              "69555  Начальник отдела по защите информации и информ...   \n",
              "\n",
              "                                              department  has_test  \\\n",
              "0                                                    NaN     False   \n",
              "1                                                    NaN     False   \n",
              "2                                                    NaN     False   \n",
              "3      {'id': 'pochta-4352-office', 'name': '«Почта Р...     False   \n",
              "4                                                    NaN     False   \n",
              "...                                                  ...       ...   \n",
              "69551                                                NaN     False   \n",
              "69552                                                NaN     False   \n",
              "69553                                                NaN     False   \n",
              "69554                                                NaN     False   \n",
              "69555                                                NaN     False   \n",
              "\n",
              "       response_letter_required  \\\n",
              "0                         False   \n",
              "1                         False   \n",
              "2                         False   \n",
              "3                         False   \n",
              "4                         False   \n",
              "...                         ...   \n",
              "69551                     False   \n",
              "69552                     False   \n",
              "69553                     False   \n",
              "69554                     False   \n",
              "69555                     False   \n",
              "\n",
              "                                                    area  \\\n",
              "0      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "1      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "2      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "3      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "4      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "...                                                  ...   \n",
              "69551  {'id': '92', 'name': 'Тула', 'url': 'https://a...   \n",
              "69552  {'id': '92', 'name': 'Тула', 'url': 'https://a...   \n",
              "69553  {'id': '92', 'name': 'Тула', 'url': 'https://a...   \n",
              "69554  {'id': '92', 'name': 'Тула', 'url': 'https://a...   \n",
              "69555  {'id': '92', 'name': 'Тула', 'url': 'https://a...   \n",
              "\n",
              "                                                  salary  \\\n",
              "0                                                      0   \n",
              "1      {'from': 25000, 'to': 50000, 'currency': 'RUR'...   \n",
              "2                                                      0   \n",
              "3      {'from': 26000, 'to': None, 'currency': 'RUR',...   \n",
              "4      {'from': 20000, 'to': 20000, 'currency': 'RUR'...   \n",
              "...                                                  ...   \n",
              "69551                                                  0   \n",
              "69552  {'from': 130000, 'to': None, 'currency': 'RUR'...   \n",
              "69553  {'from': 50000, 'to': None, 'currency': 'RUR',...   \n",
              "69554  {'from': 85000, 'to': None, 'currency': 'RUR',...   \n",
              "69555                                                  0   \n",
              "\n",
              "                                     type  ...  \\\n",
              "0      {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "1      {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "2      {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "3      {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "4      {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "...                                   ...  ...   \n",
              "69551  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "69552  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "69553  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "69554  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "69555  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "\n",
              "                                              key_skills  \\\n",
              "0                                                     []   \n",
              "1      [{'name': 'Git'}, {'name': 'SQL'}, {'name': 'Т...   \n",
              "2      [{'name': 'SQL'}, {'name': 'Linux'}, {'name': ...   \n",
              "3      [{'name': 'Пользователь ПК'}, {'name': 'Работа...   \n",
              "4      [{'name': 'MS Dos'}, {'name': 'Диагностика ПК'...   \n",
              "...                                                  ...   \n",
              "69551                                                 []   \n",
              "69552  [{'name': '1С: Управление Торговлей'}, {'name'...   \n",
              "69553  [{'name': 'Организаторские навыки'}, {'name': ...   \n",
              "69554                                                 []   \n",
              "69555  [{'name': 'Информационная безопасность'}, {'na...   \n",
              "\n",
              "                                         specializations  \\\n",
              "0      [{'id': '1.172', 'name': 'Начальный уровень, М...   \n",
              "1      [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "2      [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "3      [{'id': '1.110', 'name': 'Компьютерная безопас...   \n",
              "4      [{'id': '1.110', 'name': 'Компьютерная безопас...   \n",
              "...                                                  ...   \n",
              "69551  [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "69552  [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "69553  [{'id': '9.94', 'name': 'Информационные технол...   \n",
              "69554  [{'id': '9.94', 'name': 'Информационные технол...   \n",
              "69555  [{'id': '9.94', 'name': 'Информационные технол...   \n",
              "\n",
              "                     region immediate_redirect_url region_id  region_name  \\\n",
              "0      Астраханская область                    NaN        15    Астрахань   \n",
              "1      Астраханская область                    NaN        15    Астрахань   \n",
              "2      Астраханская область                    NaN        15    Астрахань   \n",
              "3      Астраханская область                    NaN        15    Астрахань   \n",
              "4      Астраханская область                    NaN        15    Астрахань   \n",
              "...                     ...                    ...       ...          ...   \n",
              "69551      Тульская область                    NaN        92         Тула   \n",
              "69552      Тульская область                    NaN        92         Тула   \n",
              "69553      Тульская область                    NaN        92         Тула   \n",
              "69554      Тульская область                    NaN        92         Тула   \n",
              "69555      Тульская область                    NaN        92         Тула   \n",
              "\n",
              "      salary_min salary_max currency  gross  \n",
              "0            NaN        NaN      NaN    NaN  \n",
              "1        21750.0      50000      RUR   True  \n",
              "2            NaN        NaN      NaN    NaN  \n",
              "3        22620.0       None      RUR   True  \n",
              "4        20000.0      20000      RUR  False  \n",
              "...          ...        ...      ...    ...  \n",
              "69551        NaN        NaN      NaN    NaN  \n",
              "69552   130000.0       None      RUR  False  \n",
              "69553    50000.0       None      RUR  False  \n",
              "69554    85000.0       None      RUR  False  \n",
              "69555        NaN        NaN      NaN    NaN  \n",
              "\n",
              "[69556 rows x 40 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cae425c4-e029-460a-90ed-7a42e0fc8074\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>id</th>\n",
              "      <th>premium</th>\n",
              "      <th>name</th>\n",
              "      <th>department</th>\n",
              "      <th>has_test</th>\n",
              "      <th>response_letter_required</th>\n",
              "      <th>area</th>\n",
              "      <th>salary</th>\n",
              "      <th>type</th>\n",
              "      <th>...</th>\n",
              "      <th>key_skills</th>\n",
              "      <th>specializations</th>\n",
              "      <th>region</th>\n",
              "      <th>immediate_redirect_url</th>\n",
              "      <th>region_id</th>\n",
              "      <th>region_name</th>\n",
              "      <th>salary_min</th>\n",
              "      <th>salary_max</th>\n",
              "      <th>currency</th>\n",
              "      <th>gross</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>49059633</td>\n",
              "      <td>False</td>\n",
              "      <td>Младший специалист ручного тестирования</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>0</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[]</td>\n",
              "      <td>[{'id': '1.172', 'name': 'Начальный уровень, М...</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>54653519</td>\n",
              "      <td>False</td>\n",
              "      <td>Тестировщик.Net</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'from': 25000, 'to': 50000, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Git'}, {'name': 'SQL'}, {'name': 'Т...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>21750.0</td>\n",
              "      <td>50000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>55116066</td>\n",
              "      <td>False</td>\n",
              "      <td>Пентестер</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>0</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'SQL'}, {'name': 'Linux'}, {'name': ...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>54031261</td>\n",
              "      <td>False</td>\n",
              "      <td>Ведущий Специалист по информационным технологиям</td>\n",
              "      <td>{'id': 'pochta-4352-office', 'name': '«Почта Р...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'from': 26000, 'to': None, 'currency': 'RUR',...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Пользователь ПК'}, {'name': 'Работа...</td>\n",
              "      <td>[{'id': '1.110', 'name': 'Компьютерная безопас...</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>22620.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>55243040</td>\n",
              "      <td>False</td>\n",
              "      <td>Специалист по защите информации</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'from': 20000, 'to': 20000, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'MS Dos'}, {'name': 'Диагностика ПК'...</td>\n",
              "      <td>[{'id': '1.110', 'name': 'Компьютерная безопас...</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>20000.0</td>\n",
              "      <td>20000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69551</th>\n",
              "      <td>463</td>\n",
              "      <td>66113834</td>\n",
              "      <td>False</td>\n",
              "      <td>Программист Java</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '92', 'name': 'Тула', 'url': 'https://a...</td>\n",
              "      <td>0</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[]</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69552</th>\n",
              "      <td>464</td>\n",
              "      <td>66113885</td>\n",
              "      <td>False</td>\n",
              "      <td>Программист 1C</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '92', 'name': 'Тула', 'url': 'https://a...</td>\n",
              "      <td>{'from': 130000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': '1С: Управление Торговлей'}, {'name'...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>130000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69553</th>\n",
              "      <td>465</td>\n",
              "      <td>54749225</td>\n",
              "      <td>False</td>\n",
              "      <td>Начальник отдела информационных технологий</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '92', 'name': 'Тула', 'url': 'https://a...</td>\n",
              "      <td>{'from': 50000, 'to': None, 'currency': 'RUR',...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Организаторские навыки'}, {'name': ...</td>\n",
              "      <td>[{'id': '9.94', 'name': 'Информационные технол...</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>50000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69554</th>\n",
              "      <td>466</td>\n",
              "      <td>55498724</td>\n",
              "      <td>False</td>\n",
              "      <td>Технический директор (DevOps, технолог)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '92', 'name': 'Тула', 'url': 'https://a...</td>\n",
              "      <td>{'from': 85000, 'to': None, 'currency': 'RUR',...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[]</td>\n",
              "      <td>[{'id': '9.94', 'name': 'Информационные технол...</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>85000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69555</th>\n",
              "      <td>467</td>\n",
              "      <td>55544352</td>\n",
              "      <td>False</td>\n",
              "      <td>Начальник отдела по защите информации и информ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '92', 'name': 'Тула', 'url': 'https://a...</td>\n",
              "      <td>0</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Информационная безопасность'}, {'na...</td>\n",
              "      <td>[{'id': '9.94', 'name': 'Информационные технол...</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>NaN</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>69556 rows × 40 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cae425c4-e029-460a-90ed-7a42e0fc8074')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cae425c4-e029-460a-90ed-7a42e0fc8074 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cae425c4-e029-460a-90ed-7a42e0fc8074');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ],
      "source": [
        "df.reset_index(drop=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "boJzFMkJCTys",
        "outputId": "9bf2713c-c300-4880-afbe-840a8c520efa"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Unnamed: 0        id  premium  \\\n",
              "16464        6316  55267656    False   \n",
              "16465        6317  55267695    False   \n",
              "17183        7035  54346861    False   \n",
              "25865       15717  50002076    False   \n",
              "28205       18057  48457284    False   \n",
              "30147       19999  55868758    False   \n",
              "45741        2568  55267696    False   \n",
              "45748        2575  55358358    False   \n",
              "45759        2586  55267658    False   \n",
              "45876        2703  55517869    False   \n",
              "45944        2771  54346860    False   \n",
              "54007         794  41813280    False   \n",
              "54041         828  39441008    False   \n",
              "54043         830  39114942    False   \n",
              "54044         831  40392896    False   \n",
              "54193         980  39114932    False   \n",
              "54194         981  39114938    False   \n",
              "54195         982  39114939    False   \n",
              "54196         983  39114941    False   \n",
              "54216        1003  39441004    False   \n",
              "54248        1035  43010854    False   \n",
              "54308        1095  47955533    False   \n",
              "54321        1108  48769629    False   \n",
              "54435        1222  52914746    False   \n",
              "54437        1224  53087598    False   \n",
              "54484        1271  53705840    False   \n",
              "54504        1291  54043950    False   \n",
              "54505        1292  54044648    False   \n",
              "54527        1314  54376439    False   \n",
              "54557        1344  54393860    False   \n",
              "\n",
              "                                                    name department  has_test  \\\n",
              "16464  CTO / Global Head of Technology – Hamburg, Ger...        NaN     False   \n",
              "16465    CTO / Global Head of Technical Services - Dubai        NaN     False   \n",
              "17183  Platform Engineering Manager - Java, Big Data ...        NaN     False   \n",
              "25865                              Директор по персоналу        NaN     False   \n",
              "28205  Разработчик Solidity/Разработчик Rust/Разработ...        NaN     False   \n",
              "30147             Директор по информационным технологиям        NaN     False   \n",
              "45741    CTO / Global Head of Technical Services - Dubai        NaN     False   \n",
              "45748                               Технический директор        NaN     False   \n",
              "45759  CTO / Global Head of Technology – Hamburg, Ger...        NaN     False   \n",
              "45876                              Team lead / PHP (CTO)        NaN     False   \n",
              "45944  Platform Engineering Manager - Java, Big Data ...        NaN     False   \n",
              "54007         Специалист по продаже элитной недвижимости        NaN     False   \n",
              "54041            Специалист по недвижимости (Центр Сочи)        NaN      True   \n",
              "54043   Агент по продажам загородной недвижимости (СОЧИ)        NaN      True   \n",
              "54044   Агент по продажам загородной недвижимости (Сочи)        NaN      True   \n",
              "54193   Агент по продажам загородной недвижимости (Сочи)        NaN      True   \n",
              "54194  Агент по продажам загородной недвижимости(Цент...        NaN      True   \n",
              "54195  Агент по продажам загородной недвижимости (Сир...        NaN      True   \n",
              "54196   Агент по продажам загородной недвижимости (СОЧИ)        NaN      True   \n",
              "54216                         Специалист по недвижимости        NaN      True   \n",
              "54248   Агент по продажам загородной недвижимости (Сочи)        NaN     False   \n",
              "54308               Брокер по продаже жилой недвижимости        NaN     False   \n",
              "54321  Менеджер по работе с клиентами в сфере недвижи...        NaN     False   \n",
              "54435          Менеджер по продажам элитной недвижимости        NaN     False   \n",
              "54437                                    Брокер, г. Сочи        NaN     False   \n",
              "54484         Агент по продаже недвижимости (без поиска)        NaN     False   \n",
              "54504         Специалист по продаже элитной недвижимости        NaN     False   \n",
              "54505  Ведущий менеджер по работе с клиентами (недвиж...        NaN     False   \n",
              "54527                     Брокер по продаже недвижимости        NaN     False   \n",
              "54557                 Персональный брокер в недвижимости        NaN     False   \n",
              "\n",
              "       response_letter_required  \\\n",
              "16464                     False   \n",
              "16465                     False   \n",
              "17183                     False   \n",
              "25865                     False   \n",
              "28205                     False   \n",
              "30147                      True   \n",
              "45741                     False   \n",
              "45748                     False   \n",
              "45759                     False   \n",
              "45876                     False   \n",
              "45944                     False   \n",
              "54007                     False   \n",
              "54041                     False   \n",
              "54043                     False   \n",
              "54044                     False   \n",
              "54193                     False   \n",
              "54194                     False   \n",
              "54195                     False   \n",
              "54196                     False   \n",
              "54216                     False   \n",
              "54248                     False   \n",
              "54308                     False   \n",
              "54321                     False   \n",
              "54435                     False   \n",
              "54437                     False   \n",
              "54484                     False   \n",
              "54504                     False   \n",
              "54505                     False   \n",
              "54527                     False   \n",
              "54557                     False   \n",
              "\n",
              "                                                    area  \\\n",
              "16464  {'id': '1', 'name': 'Москва', 'url': 'https://...   \n",
              "16465  {'id': '1', 'name': 'Москва', 'url': 'https://...   \n",
              "17183  {'id': '1', 'name': 'Москва', 'url': 'https://...   \n",
              "25865  {'id': '1', 'name': 'Москва', 'url': 'https://...   \n",
              "28205  {'id': '1', 'name': 'Москва', 'url': 'https://...   \n",
              "30147  {'id': '1', 'name': 'Москва', 'url': 'https://...   \n",
              "45741  {'id': '2', 'name': 'Санкт-Петербург', 'url': ...   \n",
              "45748  {'id': '2', 'name': 'Санкт-Петербург', 'url': ...   \n",
              "45759  {'id': '2', 'name': 'Санкт-Петербург', 'url': ...   \n",
              "45876  {'id': '2', 'name': 'Санкт-Петербург', 'url': ...   \n",
              "45944  {'id': '2', 'name': 'Санкт-Петербург', 'url': ...   \n",
              "54007  {'id': '237', 'name': 'Сочи', 'url': 'https://...   \n",
              "54041  {'id': '2377', 'name': 'Адлер', 'url': 'https:...   \n",
              "54043  {'id': '1460', 'name': 'Туапсе', 'url': 'https...   \n",
              "54044  {'id': '1440', 'name': 'Анапа', 'url': 'https:...   \n",
              "54193  {'id': '53', 'name': 'Краснодар', 'url': 'http...   \n",
              "54194  {'id': '3050', 'name': 'Лазаревское', 'url': '...   \n",
              "54195  {'id': '1454', 'name': 'Новороссийск', 'url': ...   \n",
              "54196  {'id': '1447', 'name': 'Ейск', 'url': 'https:/...   \n",
              "54216  {'id': '237', 'name': 'Сочи', 'url': 'https://...   \n",
              "54248  {'id': '2377', 'name': 'Адлер', 'url': 'https:...   \n",
              "54308  {'id': '237', 'name': 'Сочи', 'url': 'https://...   \n",
              "54321  {'id': '237', 'name': 'Сочи', 'url': 'https://...   \n",
              "54435  {'id': '2377', 'name': 'Адлер', 'url': 'https:...   \n",
              "54437  {'id': '2377', 'name': 'Адлер', 'url': 'https:...   \n",
              "54484  {'id': '6458', 'name': 'Сириус', 'url': 'https...   \n",
              "54504  {'id': '237', 'name': 'Сочи', 'url': 'https://...   \n",
              "54505  {'id': '237', 'name': 'Сочи', 'url': 'https://...   \n",
              "54527  {'id': '237', 'name': 'Сочи', 'url': 'https://...   \n",
              "54557  {'id': '237', 'name': 'Сочи', 'url': 'https://...   \n",
              "\n",
              "                                                  salary  \\\n",
              "16464  {'from': 10000, 'to': None, 'currency': 'EUR',...   \n",
              "16465  {'from': 8300, 'to': None, 'currency': 'EUR', ...   \n",
              "17183  {'from': 10000, 'to': 13000, 'currency': 'USD'...   \n",
              "25865  {'from': 700000, 'to': None, 'currency': 'RUR'...   \n",
              "28205  {'from': 600000, 'to': None, 'currency': 'RUR'...   \n",
              "30147  {'from': 650000, 'to': None, 'currency': 'RUR'...   \n",
              "45741  {'from': 8300, 'to': None, 'currency': 'EUR', ...   \n",
              "45748  {'from': 1000000, 'to': None, 'currency': 'RUR...   \n",
              "45759  {'from': 10000, 'to': None, 'currency': 'EUR',...   \n",
              "45876  {'from': 600000, 'to': 650000, 'currency': 'RU...   \n",
              "45944  {'from': 10000, 'to': 13000, 'currency': 'USD'...   \n",
              "54007  {'from': 700000, 'to': None, 'currency': 'RUR'...   \n",
              "54041  {'from': 650000, 'to': None, 'currency': 'RUR'...   \n",
              "54043  {'from': 650000, 'to': 1000000, 'currency': 'R...   \n",
              "54044  {'from': 650000, 'to': 1000000, 'currency': 'R...   \n",
              "54193  {'from': 650000, 'to': 1000000, 'currency': 'R...   \n",
              "54194  {'from': 650000, 'to': 1000000, 'currency': 'R...   \n",
              "54195  {'from': 650000, 'to': 1000000, 'currency': 'R...   \n",
              "54196  {'from': 650000, 'to': 1000000, 'currency': 'R...   \n",
              "54216  {'from': 650000, 'to': None, 'currency': 'RUR'...   \n",
              "54248  {'from': 650000, 'to': 1000000, 'currency': 'R...   \n",
              "54308  {'from': 600000, 'to': None, 'currency': 'RUR'...   \n",
              "54321  {'from': 600000, 'to': 1500000, 'currency': 'R...   \n",
              "54435  {'from': 550000, 'to': 1000000, 'currency': 'R...   \n",
              "54437  {'from': 550000, 'to': None, 'currency': 'RUR'...   \n",
              "54484  {'from': 650000, 'to': None, 'currency': 'RUR'...   \n",
              "54504  {'from': 650000, 'to': None, 'currency': 'RUR'...   \n",
              "54505  {'from': 650000, 'to': None, 'currency': 'RUR'...   \n",
              "54527  {'from': 800000, 'to': 2400000, 'currency': 'R...   \n",
              "54557  {'from': 800000, 'to': 2400000, 'currency': 'R...   \n",
              "\n",
              "                                     type  ...  \\\n",
              "16464  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "16465  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "17183  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "25865  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "28205  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "30147  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "45741  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "45748  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "45759  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "45876  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "45944  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54007  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54041  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54043  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54044  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54193  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54194  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54195  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54196  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54216  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54248  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54308  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54321  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54435  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54437  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54484  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54504  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54505  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54527  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "54557  {'id': 'open', 'name': 'Открытая'}  ...   \n",
              "\n",
              "                                              key_skills  \\\n",
              "16464  [{'name': 'Java'}, {'name': 'JavaScript'}, {'n...   \n",
              "16465  [{'name': 'JavaScript'}, {'name': 'Java'}, {'n...   \n",
              "17183  [{'name': 'Java'}, {'name': 'Team management'}...   \n",
              "25865  [{'name': 'Управление персоналом'}, {'name': '...   \n",
              "28205  [{'name': 'Английский язык'}, {'name': 'Rust'}...   \n",
              "30147  [{'name': 'Информационные технологии'}, {'name...   \n",
              "45741  [{'name': 'JavaScript'}, {'name': 'Java'}, {'n...   \n",
              "45748                                                 []   \n",
              "45759  [{'name': 'Java'}, {'name': 'JavaScript'}, {'n...   \n",
              "45876  [{'name': 'PHP 7+'}, {'name': 'Laravel'}, {'na...   \n",
              "45944  [{'name': 'Java'}, {'name': 'Team management'}...   \n",
              "54007                                                 []   \n",
              "54041  [{'name': 'Жилая недвижимость'}, {'name': 'Акт...   \n",
              "54043  [{'name': 'Жилая недвижимость'}, {'name': 'Акт...   \n",
              "54044  [{'name': 'Жилая недвижимость'}, {'name': 'Акт...   \n",
              "54193  [{'name': 'Жилая недвижимость'}, {'name': 'Акт...   \n",
              "54194  [{'name': 'Жилая недвижимость'}, {'name': 'Акт...   \n",
              "54195  [{'name': 'Жилая недвижимость'}, {'name': 'Акт...   \n",
              "54196  [{'name': 'Жилая недвижимость'}, {'name': 'Акт...   \n",
              "54216  [{'name': 'Жилая недвижимость'}, {'name': 'Акт...   \n",
              "54248  [{'name': 'Жилая недвижимость'}, {'name': 'Акт...   \n",
              "54308                                                 []   \n",
              "54321                                                 []   \n",
              "54435  [{'name': 'Ведение переговоров'}, {'name': 'Ра...   \n",
              "54437  [{'name': 'Грамотная речь'}, {'name': 'Работа ...   \n",
              "54484  [{'name': 'Ведение переговоров'}, {'name': 'Ак...   \n",
              "54504  [{'name': 'Подбор недвижимости по запросу клие...   \n",
              "54505  [{'name': 'Ведение переговоров'}, {'name': 'Ак...   \n",
              "54527  [{'name': 'Обучение и развитие'}, {'name': 'Ор...   \n",
              "54557  [{'name': 'Обучение и развитие'}, {'name': 'Ор...   \n",
              "\n",
              "                                         specializations              region  \\\n",
              "16464  [{'id': '9.94', 'name': 'Информационные технол...              Москва   \n",
              "16465  [{'id': '9.94', 'name': 'Информационные технол...              Москва   \n",
              "17183  [{'id': '12.92', 'name': 'Информационные техно...              Москва   \n",
              "25865  [{'id': '9.738', 'name': 'Другое', 'profarea_i...              Москва   \n",
              "28205  [{'id': '1.221', 'name': 'Программирование, Ра...              Москва   \n",
              "30147  [{'id': '9.94', 'name': 'Информационные технол...              Москва   \n",
              "45741  [{'id': '9.94', 'name': 'Информационные технол...     Санкт-Петербург   \n",
              "45748  [{'id': '9.94', 'name': 'Информационные технол...     Санкт-Петербург   \n",
              "45759  [{'id': '9.94', 'name': 'Информационные технол...     Санкт-Петербург   \n",
              "45876  [{'id': '12.92', 'name': 'Информационные техно...     Санкт-Петербург   \n",
              "45944  [{'id': '12.92', 'name': 'Информационные техно...     Санкт-Петербург   \n",
              "54007  [{'id': '17.242', 'name': 'Прямые продажи', 'p...  Краснодарский край   \n",
              "54041  [{'id': '20.189', 'name': 'Нежилые помещения',...  Краснодарский край   \n",
              "54043  [{'id': '17.334', 'name': 'Услуги для населени...  Краснодарский край   \n",
              "54044  [{'id': '17.334', 'name': 'Услуги для населени...  Краснодарский край   \n",
              "54193  [{'id': '17.334', 'name': 'Услуги для населени...  Краснодарский край   \n",
              "54194  [{'id': '17.334', 'name': 'Услуги для населени...  Краснодарский край   \n",
              "54195  [{'id': '17.242', 'name': 'Прямые продажи', 'p...  Краснодарский край   \n",
              "54196  [{'id': '17.334', 'name': 'Услуги для населени...  Краснодарский край   \n",
              "54216  [{'id': '20.189', 'name': 'Нежилые помещения',...  Краснодарский край   \n",
              "54248  [{'id': '17.334', 'name': 'Услуги для населени...  Краснодарский край   \n",
              "54308  [{'id': '20.20', 'name': 'Агент', 'profarea_id...  Краснодарский край   \n",
              "54321  [{'id': '17.65', 'name': 'Дилерские сети', 'pr...  Краснодарский край   \n",
              "54435  [{'id': '17.242', 'name': 'Прямые продажи', 'p...  Краснодарский край   \n",
              "54437  [{'id': '17.242', 'name': 'Прямые продажи', 'p...  Краснодарский край   \n",
              "54484  [{'id': '17.242', 'name': 'Прямые продажи', 'p...  Краснодарский край   \n",
              "54504  [{'id': '17.242', 'name': 'Прямые продажи', 'p...  Краснодарский край   \n",
              "54505  [{'id': '17.242', 'name': 'Прямые продажи', 'p...  Краснодарский край   \n",
              "54527  [{'id': '17.242', 'name': 'Прямые продажи', 'p...  Краснодарский край   \n",
              "54557  [{'id': '17.242', 'name': 'Прямые продажи', 'p...  Краснодарский край   \n",
              "\n",
              "      immediate_redirect_url region_id      region_name salary_min salary_max  \\\n",
              "16464                    NaN         1           Москва   625400.0       None   \n",
              "16465                    NaN         1           Москва   519082.0       None   \n",
              "17183                    NaN         1           Москва   529830.0      13000   \n",
              "25865                    NaN         1           Москва   609000.0       None   \n",
              "28205                    NaN         1           Москва   600000.0       None   \n",
              "30147                    NaN         1           Москва   565500.0       None   \n",
              "45741                    NaN         2  Санкт-Петербург   519082.0       None   \n",
              "45748                    NaN         2  Санкт-Петербург   870000.0       None   \n",
              "45759                    NaN         2  Санкт-Петербург   625400.0       None   \n",
              "45876                    NaN         2  Санкт-Петербург   600000.0     650000   \n",
              "45944                    NaN         2  Санкт-Петербург   529830.0      13000   \n",
              "54007                    NaN       237             Сочи   609000.0       None   \n",
              "54041                    NaN      2377            Адлер   650000.0       None   \n",
              "54043                    NaN      1460           Туапсе   650000.0    1000000   \n",
              "54044                    NaN      1440            Анапа   650000.0    1000000   \n",
              "54193                    NaN        53        Краснодар   650000.0    1000000   \n",
              "54194                    NaN      3050      Лазаревское   650000.0    1000000   \n",
              "54195                    NaN      1454     Новороссийск   650000.0    1000000   \n",
              "54196                    NaN      1447             Ейск   650000.0    1000000   \n",
              "54216                    NaN       237             Сочи   650000.0       None   \n",
              "54248                    NaN      2377            Адлер   650000.0    1000000   \n",
              "54308                    NaN       237             Сочи   600000.0       None   \n",
              "54321                    NaN       237             Сочи   600000.0    1500000   \n",
              "54435                    NaN      2377            Адлер   550000.0    1000000   \n",
              "54437                    NaN      2377            Адлер   550000.0       None   \n",
              "54484                    NaN      6458           Сириус   650000.0       None   \n",
              "54504                    NaN       237             Сочи   650000.0       None   \n",
              "54505                    NaN       237             Сочи   650000.0       None   \n",
              "54527                    NaN       237             Сочи   800000.0    2400000   \n",
              "54557                    NaN       237             Сочи   800000.0    2400000   \n",
              "\n",
              "      currency  gross  \n",
              "16464      EUR  False  \n",
              "16465      EUR  False  \n",
              "17183      USD   True  \n",
              "25865      RUR   True  \n",
              "28205      RUR  False  \n",
              "30147      RUR   True  \n",
              "45741      EUR  False  \n",
              "45748      RUR   True  \n",
              "45759      EUR  False  \n",
              "45876      RUR  False  \n",
              "45944      USD   True  \n",
              "54007      RUR   True  \n",
              "54041      RUR  False  \n",
              "54043      RUR  False  \n",
              "54044      RUR  False  \n",
              "54193      RUR  False  \n",
              "54194      RUR  False  \n",
              "54195      RUR  False  \n",
              "54196      RUR  False  \n",
              "54216      RUR  False  \n",
              "54248      RUR  False  \n",
              "54308      RUR  False  \n",
              "54321      RUR  False  \n",
              "54435      RUR  False  \n",
              "54437      RUR  False  \n",
              "54484      RUR  False  \n",
              "54504      RUR  False  \n",
              "54505      RUR  False  \n",
              "54527      RUR  False  \n",
              "54557      RUR  False  \n",
              "\n",
              "[30 rows x 40 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c06501cb-2114-4ed7-b108-093fb14bcf8d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>id</th>\n",
              "      <th>premium</th>\n",
              "      <th>name</th>\n",
              "      <th>department</th>\n",
              "      <th>has_test</th>\n",
              "      <th>response_letter_required</th>\n",
              "      <th>area</th>\n",
              "      <th>salary</th>\n",
              "      <th>type</th>\n",
              "      <th>...</th>\n",
              "      <th>key_skills</th>\n",
              "      <th>specializations</th>\n",
              "      <th>region</th>\n",
              "      <th>immediate_redirect_url</th>\n",
              "      <th>region_id</th>\n",
              "      <th>region_name</th>\n",
              "      <th>salary_min</th>\n",
              "      <th>salary_max</th>\n",
              "      <th>currency</th>\n",
              "      <th>gross</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>16464</th>\n",
              "      <td>6316</td>\n",
              "      <td>55267656</td>\n",
              "      <td>False</td>\n",
              "      <td>CTO / Global Head of Technology – Hamburg, Ger...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '1', 'name': 'Москва', 'url': 'https://...</td>\n",
              "      <td>{'from': 10000, 'to': None, 'currency': 'EUR',...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Java'}, {'name': 'JavaScript'}, {'n...</td>\n",
              "      <td>[{'id': '9.94', 'name': 'Информационные технол...</td>\n",
              "      <td>Москва</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>Москва</td>\n",
              "      <td>625400.0</td>\n",
              "      <td>None</td>\n",
              "      <td>EUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16465</th>\n",
              "      <td>6317</td>\n",
              "      <td>55267695</td>\n",
              "      <td>False</td>\n",
              "      <td>CTO / Global Head of Technical Services - Dubai</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '1', 'name': 'Москва', 'url': 'https://...</td>\n",
              "      <td>{'from': 8300, 'to': None, 'currency': 'EUR', ...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'JavaScript'}, {'name': 'Java'}, {'n...</td>\n",
              "      <td>[{'id': '9.94', 'name': 'Информационные технол...</td>\n",
              "      <td>Москва</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>Москва</td>\n",
              "      <td>519082.0</td>\n",
              "      <td>None</td>\n",
              "      <td>EUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17183</th>\n",
              "      <td>7035</td>\n",
              "      <td>54346861</td>\n",
              "      <td>False</td>\n",
              "      <td>Platform Engineering Manager - Java, Big Data ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '1', 'name': 'Москва', 'url': 'https://...</td>\n",
              "      <td>{'from': 10000, 'to': 13000, 'currency': 'USD'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Java'}, {'name': 'Team management'}...</td>\n",
              "      <td>[{'id': '12.92', 'name': 'Информационные техно...</td>\n",
              "      <td>Москва</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>Москва</td>\n",
              "      <td>529830.0</td>\n",
              "      <td>13000</td>\n",
              "      <td>USD</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25865</th>\n",
              "      <td>15717</td>\n",
              "      <td>50002076</td>\n",
              "      <td>False</td>\n",
              "      <td>Директор по персоналу</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '1', 'name': 'Москва', 'url': 'https://...</td>\n",
              "      <td>{'from': 700000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Управление персоналом'}, {'name': '...</td>\n",
              "      <td>[{'id': '9.738', 'name': 'Другое', 'profarea_i...</td>\n",
              "      <td>Москва</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>Москва</td>\n",
              "      <td>609000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28205</th>\n",
              "      <td>18057</td>\n",
              "      <td>48457284</td>\n",
              "      <td>False</td>\n",
              "      <td>Разработчик Solidity/Разработчик Rust/Разработ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '1', 'name': 'Москва', 'url': 'https://...</td>\n",
              "      <td>{'from': 600000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Английский язык'}, {'name': 'Rust'}...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>Москва</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>Москва</td>\n",
              "      <td>600000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30147</th>\n",
              "      <td>19999</td>\n",
              "      <td>55868758</td>\n",
              "      <td>False</td>\n",
              "      <td>Директор по информационным технологиям</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>{'id': '1', 'name': 'Москва', 'url': 'https://...</td>\n",
              "      <td>{'from': 650000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Информационные технологии'}, {'name...</td>\n",
              "      <td>[{'id': '9.94', 'name': 'Информационные технол...</td>\n",
              "      <td>Москва</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>Москва</td>\n",
              "      <td>565500.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45741</th>\n",
              "      <td>2568</td>\n",
              "      <td>55267696</td>\n",
              "      <td>False</td>\n",
              "      <td>CTO / Global Head of Technical Services - Dubai</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '2', 'name': 'Санкт-Петербург', 'url': ...</td>\n",
              "      <td>{'from': 8300, 'to': None, 'currency': 'EUR', ...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'JavaScript'}, {'name': 'Java'}, {'n...</td>\n",
              "      <td>[{'id': '9.94', 'name': 'Информационные технол...</td>\n",
              "      <td>Санкт-Петербург</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2</td>\n",
              "      <td>Санкт-Петербург</td>\n",
              "      <td>519082.0</td>\n",
              "      <td>None</td>\n",
              "      <td>EUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45748</th>\n",
              "      <td>2575</td>\n",
              "      <td>55358358</td>\n",
              "      <td>False</td>\n",
              "      <td>Технический директор</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '2', 'name': 'Санкт-Петербург', 'url': ...</td>\n",
              "      <td>{'from': 1000000, 'to': None, 'currency': 'RUR...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[]</td>\n",
              "      <td>[{'id': '9.94', 'name': 'Информационные технол...</td>\n",
              "      <td>Санкт-Петербург</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2</td>\n",
              "      <td>Санкт-Петербург</td>\n",
              "      <td>870000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45759</th>\n",
              "      <td>2586</td>\n",
              "      <td>55267658</td>\n",
              "      <td>False</td>\n",
              "      <td>CTO / Global Head of Technology – Hamburg, Ger...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '2', 'name': 'Санкт-Петербург', 'url': ...</td>\n",
              "      <td>{'from': 10000, 'to': None, 'currency': 'EUR',...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Java'}, {'name': 'JavaScript'}, {'n...</td>\n",
              "      <td>[{'id': '9.94', 'name': 'Информационные технол...</td>\n",
              "      <td>Санкт-Петербург</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2</td>\n",
              "      <td>Санкт-Петербург</td>\n",
              "      <td>625400.0</td>\n",
              "      <td>None</td>\n",
              "      <td>EUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45876</th>\n",
              "      <td>2703</td>\n",
              "      <td>55517869</td>\n",
              "      <td>False</td>\n",
              "      <td>Team lead / PHP (CTO)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '2', 'name': 'Санкт-Петербург', 'url': ...</td>\n",
              "      <td>{'from': 600000, 'to': 650000, 'currency': 'RU...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'PHP 7+'}, {'name': 'Laravel'}, {'na...</td>\n",
              "      <td>[{'id': '12.92', 'name': 'Информационные техно...</td>\n",
              "      <td>Санкт-Петербург</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2</td>\n",
              "      <td>Санкт-Петербург</td>\n",
              "      <td>600000.0</td>\n",
              "      <td>650000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45944</th>\n",
              "      <td>2771</td>\n",
              "      <td>54346860</td>\n",
              "      <td>False</td>\n",
              "      <td>Platform Engineering Manager - Java, Big Data ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '2', 'name': 'Санкт-Петербург', 'url': ...</td>\n",
              "      <td>{'from': 10000, 'to': 13000, 'currency': 'USD'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Java'}, {'name': 'Team management'}...</td>\n",
              "      <td>[{'id': '12.92', 'name': 'Информационные техно...</td>\n",
              "      <td>Санкт-Петербург</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2</td>\n",
              "      <td>Санкт-Петербург</td>\n",
              "      <td>529830.0</td>\n",
              "      <td>13000</td>\n",
              "      <td>USD</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54007</th>\n",
              "      <td>794</td>\n",
              "      <td>41813280</td>\n",
              "      <td>False</td>\n",
              "      <td>Специалист по продаже элитной недвижимости</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '237', 'name': 'Сочи', 'url': 'https://...</td>\n",
              "      <td>{'from': 700000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[]</td>\n",
              "      <td>[{'id': '17.242', 'name': 'Прямые продажи', 'p...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>237</td>\n",
              "      <td>Сочи</td>\n",
              "      <td>609000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54041</th>\n",
              "      <td>828</td>\n",
              "      <td>39441008</td>\n",
              "      <td>False</td>\n",
              "      <td>Специалист по недвижимости (Центр Сочи)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '2377', 'name': 'Адлер', 'url': 'https:...</td>\n",
              "      <td>{'from': 650000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Жилая недвижимость'}, {'name': 'Акт...</td>\n",
              "      <td>[{'id': '20.189', 'name': 'Нежилые помещения',...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2377</td>\n",
              "      <td>Адлер</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54043</th>\n",
              "      <td>830</td>\n",
              "      <td>39114942</td>\n",
              "      <td>False</td>\n",
              "      <td>Агент по продажам загородной недвижимости (СОЧИ)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '1460', 'name': 'Туапсе', 'url': 'https...</td>\n",
              "      <td>{'from': 650000, 'to': 1000000, 'currency': 'R...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Жилая недвижимость'}, {'name': 'Акт...</td>\n",
              "      <td>[{'id': '17.334', 'name': 'Услуги для населени...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1460</td>\n",
              "      <td>Туапсе</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>1000000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54044</th>\n",
              "      <td>831</td>\n",
              "      <td>40392896</td>\n",
              "      <td>False</td>\n",
              "      <td>Агент по продажам загородной недвижимости (Сочи)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '1440', 'name': 'Анапа', 'url': 'https:...</td>\n",
              "      <td>{'from': 650000, 'to': 1000000, 'currency': 'R...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Жилая недвижимость'}, {'name': 'Акт...</td>\n",
              "      <td>[{'id': '17.334', 'name': 'Услуги для населени...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1440</td>\n",
              "      <td>Анапа</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>1000000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54193</th>\n",
              "      <td>980</td>\n",
              "      <td>39114932</td>\n",
              "      <td>False</td>\n",
              "      <td>Агент по продажам загородной недвижимости (Сочи)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '53', 'name': 'Краснодар', 'url': 'http...</td>\n",
              "      <td>{'from': 650000, 'to': 1000000, 'currency': 'R...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Жилая недвижимость'}, {'name': 'Акт...</td>\n",
              "      <td>[{'id': '17.334', 'name': 'Услуги для населени...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>53</td>\n",
              "      <td>Краснодар</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>1000000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54194</th>\n",
              "      <td>981</td>\n",
              "      <td>39114938</td>\n",
              "      <td>False</td>\n",
              "      <td>Агент по продажам загородной недвижимости(Цент...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '3050', 'name': 'Лазаревское', 'url': '...</td>\n",
              "      <td>{'from': 650000, 'to': 1000000, 'currency': 'R...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Жилая недвижимость'}, {'name': 'Акт...</td>\n",
              "      <td>[{'id': '17.334', 'name': 'Услуги для населени...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3050</td>\n",
              "      <td>Лазаревское</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>1000000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54195</th>\n",
              "      <td>982</td>\n",
              "      <td>39114939</td>\n",
              "      <td>False</td>\n",
              "      <td>Агент по продажам загородной недвижимости (Сир...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '1454', 'name': 'Новороссийск', 'url': ...</td>\n",
              "      <td>{'from': 650000, 'to': 1000000, 'currency': 'R...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Жилая недвижимость'}, {'name': 'Акт...</td>\n",
              "      <td>[{'id': '17.242', 'name': 'Прямые продажи', 'p...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1454</td>\n",
              "      <td>Новороссийск</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>1000000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54196</th>\n",
              "      <td>983</td>\n",
              "      <td>39114941</td>\n",
              "      <td>False</td>\n",
              "      <td>Агент по продажам загородной недвижимости (СОЧИ)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '1447', 'name': 'Ейск', 'url': 'https:/...</td>\n",
              "      <td>{'from': 650000, 'to': 1000000, 'currency': 'R...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Жилая недвижимость'}, {'name': 'Акт...</td>\n",
              "      <td>[{'id': '17.334', 'name': 'Услуги для населени...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1447</td>\n",
              "      <td>Ейск</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>1000000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54216</th>\n",
              "      <td>1003</td>\n",
              "      <td>39441004</td>\n",
              "      <td>False</td>\n",
              "      <td>Специалист по недвижимости</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '237', 'name': 'Сочи', 'url': 'https://...</td>\n",
              "      <td>{'from': 650000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Жилая недвижимость'}, {'name': 'Акт...</td>\n",
              "      <td>[{'id': '20.189', 'name': 'Нежилые помещения',...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>237</td>\n",
              "      <td>Сочи</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54248</th>\n",
              "      <td>1035</td>\n",
              "      <td>43010854</td>\n",
              "      <td>False</td>\n",
              "      <td>Агент по продажам загородной недвижимости (Сочи)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '2377', 'name': 'Адлер', 'url': 'https:...</td>\n",
              "      <td>{'from': 650000, 'to': 1000000, 'currency': 'R...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Жилая недвижимость'}, {'name': 'Акт...</td>\n",
              "      <td>[{'id': '17.334', 'name': 'Услуги для населени...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2377</td>\n",
              "      <td>Адлер</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>1000000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54308</th>\n",
              "      <td>1095</td>\n",
              "      <td>47955533</td>\n",
              "      <td>False</td>\n",
              "      <td>Брокер по продаже жилой недвижимости</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '237', 'name': 'Сочи', 'url': 'https://...</td>\n",
              "      <td>{'from': 600000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[]</td>\n",
              "      <td>[{'id': '20.20', 'name': 'Агент', 'profarea_id...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>237</td>\n",
              "      <td>Сочи</td>\n",
              "      <td>600000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54321</th>\n",
              "      <td>1108</td>\n",
              "      <td>48769629</td>\n",
              "      <td>False</td>\n",
              "      <td>Менеджер по работе с клиентами в сфере недвижи...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '237', 'name': 'Сочи', 'url': 'https://...</td>\n",
              "      <td>{'from': 600000, 'to': 1500000, 'currency': 'R...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[]</td>\n",
              "      <td>[{'id': '17.65', 'name': 'Дилерские сети', 'pr...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>237</td>\n",
              "      <td>Сочи</td>\n",
              "      <td>600000.0</td>\n",
              "      <td>1500000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54435</th>\n",
              "      <td>1222</td>\n",
              "      <td>52914746</td>\n",
              "      <td>False</td>\n",
              "      <td>Менеджер по продажам элитной недвижимости</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '2377', 'name': 'Адлер', 'url': 'https:...</td>\n",
              "      <td>{'from': 550000, 'to': 1000000, 'currency': 'R...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Ведение переговоров'}, {'name': 'Ра...</td>\n",
              "      <td>[{'id': '17.242', 'name': 'Прямые продажи', 'p...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2377</td>\n",
              "      <td>Адлер</td>\n",
              "      <td>550000.0</td>\n",
              "      <td>1000000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54437</th>\n",
              "      <td>1224</td>\n",
              "      <td>53087598</td>\n",
              "      <td>False</td>\n",
              "      <td>Брокер, г. Сочи</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '2377', 'name': 'Адлер', 'url': 'https:...</td>\n",
              "      <td>{'from': 550000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Грамотная речь'}, {'name': 'Работа ...</td>\n",
              "      <td>[{'id': '17.242', 'name': 'Прямые продажи', 'p...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2377</td>\n",
              "      <td>Адлер</td>\n",
              "      <td>550000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54484</th>\n",
              "      <td>1271</td>\n",
              "      <td>53705840</td>\n",
              "      <td>False</td>\n",
              "      <td>Агент по продаже недвижимости (без поиска)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '6458', 'name': 'Сириус', 'url': 'https...</td>\n",
              "      <td>{'from': 650000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Ведение переговоров'}, {'name': 'Ак...</td>\n",
              "      <td>[{'id': '17.242', 'name': 'Прямые продажи', 'p...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6458</td>\n",
              "      <td>Сириус</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54504</th>\n",
              "      <td>1291</td>\n",
              "      <td>54043950</td>\n",
              "      <td>False</td>\n",
              "      <td>Специалист по продаже элитной недвижимости</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '237', 'name': 'Сочи', 'url': 'https://...</td>\n",
              "      <td>{'from': 650000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Подбор недвижимости по запросу клие...</td>\n",
              "      <td>[{'id': '17.242', 'name': 'Прямые продажи', 'p...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>237</td>\n",
              "      <td>Сочи</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54505</th>\n",
              "      <td>1292</td>\n",
              "      <td>54044648</td>\n",
              "      <td>False</td>\n",
              "      <td>Ведущий менеджер по работе с клиентами (недвиж...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '237', 'name': 'Сочи', 'url': 'https://...</td>\n",
              "      <td>{'from': 650000, 'to': None, 'currency': 'RUR'...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Ведение переговоров'}, {'name': 'Ак...</td>\n",
              "      <td>[{'id': '17.242', 'name': 'Прямые продажи', 'p...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>237</td>\n",
              "      <td>Сочи</td>\n",
              "      <td>650000.0</td>\n",
              "      <td>None</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54527</th>\n",
              "      <td>1314</td>\n",
              "      <td>54376439</td>\n",
              "      <td>False</td>\n",
              "      <td>Брокер по продаже недвижимости</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '237', 'name': 'Сочи', 'url': 'https://...</td>\n",
              "      <td>{'from': 800000, 'to': 2400000, 'currency': 'R...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Обучение и развитие'}, {'name': 'Ор...</td>\n",
              "      <td>[{'id': '17.242', 'name': 'Прямые продажи', 'p...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>237</td>\n",
              "      <td>Сочи</td>\n",
              "      <td>800000.0</td>\n",
              "      <td>2400000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54557</th>\n",
              "      <td>1344</td>\n",
              "      <td>54393860</td>\n",
              "      <td>False</td>\n",
              "      <td>Персональный брокер в недвижимости</td>\n",
              "      <td>NaN</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>{'id': '237', 'name': 'Сочи', 'url': 'https://...</td>\n",
              "      <td>{'from': 800000, 'to': 2400000, 'currency': 'R...</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>...</td>\n",
              "      <td>[{'name': 'Обучение и развитие'}, {'name': 'Ор...</td>\n",
              "      <td>[{'id': '17.242', 'name': 'Прямые продажи', 'p...</td>\n",
              "      <td>Краснодарский край</td>\n",
              "      <td>NaN</td>\n",
              "      <td>237</td>\n",
              "      <td>Сочи</td>\n",
              "      <td>800000.0</td>\n",
              "      <td>2400000</td>\n",
              "      <td>RUR</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>30 rows × 40 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c06501cb-2114-4ed7-b108-093fb14bcf8d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c06501cb-2114-4ed7-b108-093fb14bcf8d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c06501cb-2114-4ed7-b108-093fb14bcf8d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ],
      "source": [
        "df[df['salary_min']>500000].head(30)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iJiA7H3zPp1C"
      },
      "source": [
        "***Вакансии с зарплатой > 500000 приходятся на повторяющиеся вакансии с активными продажами жилой, загородной недвижимости Краснодарский край(г. Сочи (Адлер, Сириус)), а также вакансии из сферы управления проектами г. Новосибирск, информационных технологий г. Москва и г. Санкт-Петербург\n",
        "   Для исключения сильного влияния этих значений удалим их из датасета*** "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "metadata": {
        "id": "gyffSs1vuZYB"
      },
      "outputs": [],
      "source": [
        "df.drop(df[df['salary_min']>500000].index, inplace=True)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yydluwfYQq4T"
      },
      "source": [
        "Посмотрим, как распределена заработная плата по регионам"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 39,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "J_phGXmWEBnU",
        "outputId": "2dad548d-74a1-41c4-d58c-39a01a60f02d"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      region_name                region  salary_min\n",
              "1       Астрахань  Астраханская область     21750.0\n",
              "3       Астрахань  Астраханская область     22620.0\n",
              "4       Астрахань  Астраханская область     20000.0\n",
              "5       Астрахань  Астраханская область     15000.0\n",
              "7       Астрахань  Астраханская область     23490.0\n",
              "...           ...                   ...         ...\n",
              "69647        Тула      Тульская область    113100.0\n",
              "69648        Тула      Тульская область     17400.0\n",
              "69652        Тула      Тульская область    130000.0\n",
              "69653        Тула      Тульская область     50000.0\n",
              "69654        Тула      Тульская область     85000.0\n",
              "\n",
              "[33923 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6296d49b-6f42-42c3-8c38-42e9219727ab\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>region_name</th>\n",
              "      <th>region</th>\n",
              "      <th>salary_min</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Астрахань</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>21750.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Астрахань</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>22620.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Астрахань</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>20000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Астрахань</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>15000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Астрахань</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>23490.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69647</th>\n",
              "      <td>Тула</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>113100.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69648</th>\n",
              "      <td>Тула</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>17400.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69652</th>\n",
              "      <td>Тула</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>130000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69653</th>\n",
              "      <td>Тула</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>50000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69654</th>\n",
              "      <td>Тула</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>85000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>33923 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6296d49b-6f42-42c3-8c38-42e9219727ab')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6296d49b-6f42-42c3-8c38-42e9219727ab button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6296d49b-6f42-42c3-8c38-42e9219727ab');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ],
      "source": [
        "salary_region = df[['region_name','region', 'salary_min']]\n",
        "salary_region = salary_region.dropna()\n",
        "salary_region"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 40,
      "metadata": {
        "id": "JLWWhVMTFXUH"
      },
      "outputs": [],
      "source": [
        "salary_region_group = salary_region.groupby('region_name')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 41,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "tPxQ6P-7FmdG",
        "outputId": "145b0a4b-f769-485f-bf5b-f3dd5420551a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    region_name   count           mean           std      min      25%  \\\n",
              "435      Москва  6624.0  104697.240735  68905.876769  10000.0  60000.0   \n",
              "\n",
              "         50%       75%       max  \n",
              "435  80040.0  130500.0  500000.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b7c10ef5-0c4d-4775-a1db-75407b18ade1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>region_name</th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>435</th>\n",
              "      <td>Москва</td>\n",
              "      <td>6624.0</td>\n",
              "      <td>104697.240735</td>\n",
              "      <td>68905.876769</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>60000.0</td>\n",
              "      <td>80040.0</td>\n",
              "      <td>130500.0</td>\n",
              "      <td>500000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7c10ef5-0c4d-4775-a1db-75407b18ade1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b7c10ef5-0c4d-4775-a1db-75407b18ade1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b7c10ef5-0c4d-4775-a1db-75407b18ade1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ],
      "source": [
        "salary_region_group = salary_region_group['salary_min'].describe().reset_index()\n",
        "salary_region_group[salary_region_group['region_name']=='Москва']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 42,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "hQyC00nwsrTY",
        "outputId": "6eb0eb98-a759-4876-c0df-771f0e31ef40"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         region_name   count           mean            std      min  \\\n",
              "131          Воронеж   560.0   58942.559750   39252.222968  11310.0   \n",
              "200     Екатеринбург  1181.0   71870.322608   50025.974735  10000.0   \n",
              "259           Казань   877.0   72237.875348   57973.174528  10000.0   \n",
              "337        Краснодар  1037.0   72272.995082   51814.330649  10000.0   \n",
              "347       Красноярск   622.0   56700.161141   35582.178037  10000.0   \n",
              "435           Москва  6624.0  104697.240735   68905.876769  10000.0   \n",
              "467           Нижний   718.0   67939.122507   58627.310966  11310.0   \n",
              "482      Новосибирск  1082.0   83558.368078   63743.820088  10000.0   \n",
              "575   Ростов-на-Дону   801.0   65886.990162   47861.272181  10000.0   \n",
              "587  Санкт-Петербург  3269.0   88486.752622   61700.201221  10000.0   \n",
              "640             Сочи   665.0  165568.166541  119717.079451  11310.0   \n",
              "724              Уфа   520.0   57831.860385   41702.845453  10000.0   \n",
              "752        Челябинск   533.0   63390.236173   42050.629876  10000.0   \n",
              "\n",
              "            25%       50%       75%       max  \n",
              "131  34800.0000   45588.0   70000.0  250000.0  \n",
              "200  40000.0000   52200.0   90000.0  350000.0  \n",
              "259  34800.0000   50000.0   87000.0  400000.0  \n",
              "337  39000.0000   56550.0   95700.0  500000.0  \n",
              "347  35000.0000   49000.0   69600.0  350000.0  \n",
              "435  60000.0000   80040.0  130500.0  500000.0  \n",
              "467  31377.6375   45000.0   80000.0  350000.0  \n",
              "482  40000.0000   60000.0  100000.0  400000.0  \n",
              "575  35000.0000   50000.0   80000.0  350000.0  \n",
              "587  47850.0000   69600.0  113100.0  450355.5  \n",
              "640  67000.0000  150000.0  217500.0  500000.0  \n",
              "724  30011.2500   45000.0   70000.0  400000.0  \n",
              "752  34800.0000   50000.0   80000.0  250000.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a0865156-9819-4ce0-8971-d11ce176bc8c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>region_name</th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>Воронеж</td>\n",
              "      <td>560.0</td>\n",
              "      <td>58942.559750</td>\n",
              "      <td>39252.222968</td>\n",
              "      <td>11310.0</td>\n",
              "      <td>34800.0000</td>\n",
              "      <td>45588.0</td>\n",
              "      <td>70000.0</td>\n",
              "      <td>250000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>200</th>\n",
              "      <td>Екатеринбург</td>\n",
              "      <td>1181.0</td>\n",
              "      <td>71870.322608</td>\n",
              "      <td>50025.974735</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>40000.0000</td>\n",
              "      <td>52200.0</td>\n",
              "      <td>90000.0</td>\n",
              "      <td>350000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>259</th>\n",
              "      <td>Казань</td>\n",
              "      <td>877.0</td>\n",
              "      <td>72237.875348</td>\n",
              "      <td>57973.174528</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>34800.0000</td>\n",
              "      <td>50000.0</td>\n",
              "      <td>87000.0</td>\n",
              "      <td>400000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>337</th>\n",
              "      <td>Краснодар</td>\n",
              "      <td>1037.0</td>\n",
              "      <td>72272.995082</td>\n",
              "      <td>51814.330649</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>39000.0000</td>\n",
              "      <td>56550.0</td>\n",
              "      <td>95700.0</td>\n",
              "      <td>500000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>347</th>\n",
              "      <td>Красноярск</td>\n",
              "      <td>622.0</td>\n",
              "      <td>56700.161141</td>\n",
              "      <td>35582.178037</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>35000.0000</td>\n",
              "      <td>49000.0</td>\n",
              "      <td>69600.0</td>\n",
              "      <td>350000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>435</th>\n",
              "      <td>Москва</td>\n",
              "      <td>6624.0</td>\n",
              "      <td>104697.240735</td>\n",
              "      <td>68905.876769</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>60000.0000</td>\n",
              "      <td>80040.0</td>\n",
              "      <td>130500.0</td>\n",
              "      <td>500000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>467</th>\n",
              "      <td>Нижний</td>\n",
              "      <td>718.0</td>\n",
              "      <td>67939.122507</td>\n",
              "      <td>58627.310966</td>\n",
              "      <td>11310.0</td>\n",
              "      <td>31377.6375</td>\n",
              "      <td>45000.0</td>\n",
              "      <td>80000.0</td>\n",
              "      <td>350000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>482</th>\n",
              "      <td>Новосибирск</td>\n",
              "      <td>1082.0</td>\n",
              "      <td>83558.368078</td>\n",
              "      <td>63743.820088</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>40000.0000</td>\n",
              "      <td>60000.0</td>\n",
              "      <td>100000.0</td>\n",
              "      <td>400000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>575</th>\n",
              "      <td>Ростов-на-Дону</td>\n",
              "      <td>801.0</td>\n",
              "      <td>65886.990162</td>\n",
              "      <td>47861.272181</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>35000.0000</td>\n",
              "      <td>50000.0</td>\n",
              "      <td>80000.0</td>\n",
              "      <td>350000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>587</th>\n",
              "      <td>Санкт-Петербург</td>\n",
              "      <td>3269.0</td>\n",
              "      <td>88486.752622</td>\n",
              "      <td>61700.201221</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>47850.0000</td>\n",
              "      <td>69600.0</td>\n",
              "      <td>113100.0</td>\n",
              "      <td>450355.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>640</th>\n",
              "      <td>Сочи</td>\n",
              "      <td>665.0</td>\n",
              "      <td>165568.166541</td>\n",
              "      <td>119717.079451</td>\n",
              "      <td>11310.0</td>\n",
              "      <td>67000.0000</td>\n",
              "      <td>150000.0</td>\n",
              "      <td>217500.0</td>\n",
              "      <td>500000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>724</th>\n",
              "      <td>Уфа</td>\n",
              "      <td>520.0</td>\n",
              "      <td>57831.860385</td>\n",
              "      <td>41702.845453</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>30011.2500</td>\n",
              "      <td>45000.0</td>\n",
              "      <td>70000.0</td>\n",
              "      <td>400000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>752</th>\n",
              "      <td>Челябинск</td>\n",
              "      <td>533.0</td>\n",
              "      <td>63390.236173</td>\n",
              "      <td>42050.629876</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>34800.0000</td>\n",
              "      <td>50000.0</td>\n",
              "      <td>80000.0</td>\n",
              "      <td>250000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0865156-9819-4ce0-8971-d11ce176bc8c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a0865156-9819-4ce0-8971-d11ce176bc8c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a0865156-9819-4ce0-8971-d11ce176bc8c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ],
      "source": [
        "salary_region_group[salary_region_group['count'] > 500]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 43,
      "metadata": {
        "id": "vm1rlZ5Zx3Cu"
      },
      "outputs": [],
      "source": [
        "million = ['Москва', 'Санкт-Петербург', 'Новосибирск','Екатеринбург', 'Нижний Новгород',\n",
        "           'Казань', 'Челябинск', 'Самара', 'Омск', 'Ростов-на-Дону', 'Уфа', 'Пермь',\n",
        "           'Красноярск', 'Воронеж', 'Волгоград', 'Краснодар']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 44,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "v_p6aDwhzpXG",
        "outputId": "7be6da0b-4445-4ec2-f82f-d9cc3d9fd7c5"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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2t39wFaqjkjD8fAvlN8vMo3O1kjNeOgfvUq961EP7v4v4j9P53n9XUr7zxIRacOW6a44IiIiIiISpL2KWURERERE2hAl9iIiIiIiDUB97EWqaJ111vFu3brVuxoiIsuMp5566j13X7fe9RBpBErsRaqoW7duTJ5c7J/URUQkw8xeq3cdRBqFuuKIiIiIiDQAJfYiIiIiIg1Aib2IiIiISANQH3uRGlu4cCGzZs3i008/rXdVWl3Hjh3p2rUr7du3r3dVREREGp4Se5EamzVrFqutthrdunXDzOpdnVbj7syZM4dZs2bRvXv3eldHRESk4akrjkiNffrpp6y99trLVVIPYGasvfbay+WZChERkXpQYi/SCpa3pD5jef3cIiIi9aDEXqTBzZw5k913352ePXuy5ZZbcvnllwMwdOhQNthgA3r37k3v3r0ZO3YsABMnTmTrrbemb9++TJ8+HYB58+bRv39/Fi1aVLfPISIiIoWpj71IK+t21r+qGq/5d/sUfH2FFVZg+PDh9OnTh/nz57Pddtux9957A3D66adz5plntph++PDhjB07lubmZq655hqGDx/OsGHDOOecc2hqUluAiJSn16heLZ5PGzStTjURaXxK7EUaXJcuXejSpQsAq622GltssQVvvPFG3unbt2/PggULWLBgAe3bt+eVV15h5syZ9OvXr5VqLCIiImmo+U1kOdLc3MyUKVPYcccdAbjqqqvYeuutOeaYY3j//fcBOPvssznyyCP57W9/y8knn8wvf/lLhg0bVs9qi4iISAmU2IssJz766CMOOOAALrvsMlZffXVOOOEEXnnlFaZOnUqXLl346U9/CkDv3r2ZNGkS48eP59VXX6VLly64OwcffDCHH344b7/9dp0/iYiIiOSixF5kObBw4UIOOOAADjvsMPbff38AOnfuTLt27WhqamLw4ME88cQTLd7j7gwbNowhQ4Zw/vnnc9FFFzF48GCuuOKKenwEERERKUKJvUiDc3eOPfZYtthiC84444zF5bNnz178+K677mKrrbZq8b7Ro0czcOBA1lprLRYsWEBTUxNNTU0sWLCg1eouIiIipdPFsyINbuLEidx000306tWL3r17A3DhhRdy2223MXXqVMyMbt26ce211y5+z4IFCxg5ciT3338/AGeccQYDBw6kQ4cO3HrrrXX5HCIiIlKYEnuRVlZseMpq23XXXXH3pcoHDhyY9z0rr7wy48ePX/x8t912Y9o0DVEnIiLSlqkrjoiIiIhIA1BiLyIiIiLSAJTYi4iIiIg0ACX2IiIiIiINQIm9iIiIiEgDUGIvbZqZbWhm483sv2b2vJmdGsvXMrNxZjY93neK5WZmV5jZDDN71sz6JGINitNPN7NBifLtzGxafM8VZmaF5iEiIiLSFimxl7buC+Cn7t4T2Ak4ycx6AmcBD7p7D+DB+Bzg20CPeDsOuBpCkg6cB+wI7ACcl0jUrwYGJ943IJbnm4eIiIhIm6Nx7KVNc/fZwOz4eL6ZvQBsAOwL9IuTjQImAL+I5aM9DNw+yczWNLMucdpx7j4XwMzGAQPMbAKwurtPiuWjgf2AewrMozJD16g4RMt4H1Q3noiIiCyT1GIvywwz6wZsCzwOdI5JP8BbQOf4eANgZuJts2JZofJZOcopMI9lTnNzM5tvvjlHHXUUm266KYcddhgPPPAAu+yyCz169OCJJ57g448/5phjjmGHHXZg22235e6771783t12240+ffrQp08fHn30UQAmTJhAv379+MEPfsDmm2/OYYcdlvOPsERERKR1qMVelglmtipwJ3Cau38Yu8ED4O5uZjXNKAvNw8yOI3T7YaONNqplNSoyY8YM/vrXvzJixAi23357br31Vh555BHGjBnDhRdeSM+ePdljjz0YMWIE8+bNY4cddmCvvfZivfXWY9y4cXTs2JHp06dz6KGHMnnyZACmTJnC888/z/rrr88uu+zCxIkT2XXXXev8SUVERJZPSuylzTOz9oSk/hZ3/3ssftvMurj77NjV5p1Y/gawYeLtXWPZGyzpVpMpnxDLu+aYvtA8WnD364DrAPr27dtmm6y7d+9Or169ANhyyy3Zc889MTN69epFc3Mzs2bNYsyYMVxyySUAfPrpp7z++uusv/76nHzyyUydOpV27drx8ssvL465ww470LVr+Pp69+5Nc3OzEnsREZE6UVccadPiCDU3AC+4+x8SL40BMiPbDALuTpQfGUfH2Qn4IHanuQ/ob2ad4kWz/YH74msfmtlOcV5HZsXKNY9l0oorrrj4cVNT0+LnTU1NfPHFF7g7d955J1OnTmXq1Km8/vrrbLHFFlx66aV07tyZZ555hsmTJ/P555/njNmuXTu++OKL1vtAIiIi0oISe2nrdgGOAPYws6nxNhD4HbC3mU0H9orPAcYCrwIzgD8DJwLEi2Z/DTwZbxdkLqSN01wf3/MK4cJZCsyjIX3rW9/iyiuvXNxPfsqUKQB88MEHdOnShaamJm666Sa+/PLLelZTRERE8lBXHGnT3P0RwPK8vGeO6R04KU+sEcCIHOWTga1ylM/JNY9GNWTIEE477TS23nprFi1aRPfu3fnnP//JiSeeyAEHHMDo0aMZMGAAq6yySr2rKiIiIjmYRrEQqZ6+fft65sLSjBdeeIEtttiiTjWqv+X984ss73qN6tXi+bRB01o8N7On3L1va9ZJpFGpK8JvQBQAACAASURBVI6IiIiISANQYi8iIiIi0gCU2IuIiIiINAAl9iIiIiIiDUCJvYiIiIhIA1BiLyIiIiLSAJTYizS4l156id69ey++rb766lx22WUMHTqUDTbYYHH52LFjAZg4cSJbb701ffv2Zfr06QDMmzeP/v37s2jRonp+FBERESlAf1Al0sqyx3SuVPaY0Nk222wzpk6dCsCXX37JBhtswPe//31uvPFGTj/9dM4888wW0w8fPpyxY8fS3NzMNddcw/Dhwxk2bBjnnHMOTU1qCxAREWmr9Cstshx58MEH+drXvsbGG2+cd5r27duzYMECFixYQPv27XnllVeYOXMm/fr1a72KioiISNnUYi+yHLn99ts59NBDFz+/6qqrGD16NH379mX48OF06tSJs88+myOPPJKVVlqJm266iTPPPJNhw4bVsdYiIiJSCrXYiywnPv/8c8aMGcOBBx4IwAknnMArr7zC1KlT6dKlCz/96U8B6N27N5MmTWL8+PG8+uqrdOnSBXfn4IMP5vDDD+ftt9+u58cQERGRPJTYiywn7rnnHvr06UPnzp0B6Ny5M+3ataOpqYnBgwfzxBNPtJje3Rk2bBhDhgzh/PPP56KLLmLw4MFcccUV9ai+iIiIFKHEXmQ5cdttt7XohjN79uzFj++66y622mqrFtOPHj2agQMHstZaa7FgwQKamppoampiwYIFrVZnERERKZ362IssBz7++GPGjRvHtddeu7js5z//OVOnTsXM6NatW4vXFixYwMiRI7n//vsBOOOMMxg4cCAdOnTg1ltvbfX6i4iISHFK7EVaWbHhKWthlVVWYc6cOS3KbrrpprzTr7zyyowfP37x8912241p01q/3iIiIlI6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Hzjb3eea2YdmthPwOHAkcGVrfT4RkWzJUWcAmjvWqSIi0mYpsZdlVWfgrjCKJSsAt7r7vWb2JPAXMzsWeA04KE4/ljDU5QzCcJdHA8QE/tfAk3G6C9x9bnx8IkuGu7wn3kRERETaJCX2skxy91eBbXKUzwH2zFHuwEl5Yo0ARuQonwxsVXFlRURERFqB+tiLiIiIiDQAJfYiIiIiIg1Aib2IiIiISANQYi8iIiIi0gB08ayIiLSq5LCNjT5k4/L0WUWk/pTYi4iIRErERWRZpq44IiIiIiINQIm9iIiIiEgDUGIvIiIiItIA1MdeZBmS7P8Ljd0HuK1/1mr2xa72Z12e+om39fVERKQ1qcVeRERERKQBKLEXEREREWkASuxFRERERBqA+tiLSNUsT327lydariIiywYl9iI11paTorZct2pbnj6riIgsn9QVR0RERESkASixFxERERFpAErsRUREREQagBJ7EREREZEGoMReRERERKQBKLEXEREREWkASuxFRERERBqAEnsRERERkQagxF5EREREpAEosRcRERERaQBK7EVEREREGoASexERERGRBqDEXkRERESkASixFxERERFpAErsRUREREQagBJ7EREREZEGoMReRERERKQBKLEXEREREWkASuxFRERERBqAEnsRERERkQagxF5EREREpAEosRcRERERaQBK7EVEREREGoASexERERGRBqDEXqQAMxtgZi+Z2QwzO6ve9RERERHJR4m9SB5m1g74I/BtoCdwqJn1rG+tRERERHJTYi+S3w7ADHd/1d0/B24H9q1znURERERyMnevdx1E2iQz+wEwwN1/FJ8fAezo7idnTXcccFx8uhnwUgnh1wHeq1JVqxmrrcdry3Wrdry2XLdqx2vLdWvr8dpy3UqNt7G7r1vFeYost1aodwVElnXufh1wXTnvMbPJ7t63GvOvZqy2Hq8t163a8dpy3aodry3Xra3Ha8t1q0U8ESlMXXFE8nsD2DDxvGssExEREWlzlNiL5Pck0MPMuptZB+AQYEyd6yQiIiKSk7riiOTh7l+Y2cnAfUA7YIS7P1+l8GV13WnFWG09XluuW7XjteW6VTteW65bW4/XlutWi3giUoAunhURERERaQDqiiMiIiIi0gCU2IuIiIiINAAl9iIiIiIiDUCJvYgsc8zsaynf1y5H2VaV16g6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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "top_means = salary_region_group[(salary_region_group['region_name'].isin(million))|(salary_region_group['count'] > 500)].sort_values('mean')\n",
        "top_means.plot(x='region_name', y=['25%', 'mean', '75%'], kind='bar')\n",
        "plt.hlines(xmin= 0, xmax=16, y=(salary_region['salary_min'].median()), color = 'black', linewidth=1)\n",
        "plt.title('Распределение зарплаты в городах-миллионниках, в городах с числом вакансий >500', fontsize=16)\n",
        "plt.xlabel('Города', fontsize=14)\n",
        "plt.ylabel('Зарплата', fontsize=14)\n",
        "plt.rcParams[\"figure.figsize\"] = (15,7)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ib8b6V489S6y"
      },
      "source": [
        "*** Выделяется три группы городов: \n",
        "   1. Средние значения зарплаты равны или немного выше медианной зарплаты по стране (Волгоград, Красноярск, Уфа, Самара, Воронеж, Омск, Челябинск)\n",
        "   2. Средние значения зарплаты выше медианной по стране (Ростов-на-Дону, Пермь, Нижний Новгород, Екатеринбург, Казань, краснодар)\n",
        "   3. Самые высокие значения заработной платы по возратанию в городах Новосибирск, Санкт-Петербург, Москва, Сочи. \n",
        "\n",
        "Для сравнения на график нанесена линия медианы значения зарплаты по стране, чтобы исключить сильное влияние высоких значений зарплаты в городах-лидерах на среднее значение***"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "J00F3G0Qiubg"
      },
      "source": [
        "Обработаем столбец с навыками"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 45,
      "metadata": {
        "id": "R2Jr0r6UkeRF"
      },
      "outputs": [],
      "source": [
        "import json\n",
        "def text_to_json(text):\n",
        "  try:\n",
        "    return json.loads(text.replace('\"', '').replace(\"'\", '\"'))\n",
        "  except:\n",
        "    return []\n",
        "df['key_skills_json'] = df['key_skills'].apply(text_to_json)\n",
        "\n",
        "\n",
        "def get_values(json):\n",
        "  try:\n",
        "    out = []\n",
        "    if len(json)>0:\n",
        "      for i in json:\n",
        "        out.append(i['name'])\n",
        "    return out\n",
        "  except:\n",
        "    return []\n",
        "df['key_skills_list'] = df['key_skills_json'].apply(get_values)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RmEBaf6-nYLI",
        "outputId": "d02818de-7bca-4c76-bc3f-953488b68d31"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0                                                       []\n",
              "1                        [Git, SQL, Тестирование, C#, API]\n",
              "2        [SQL, Linux, Информационная безопасность, Рабо...\n",
              "3        [Пользователь ПК, Работа в команде, 1С: Предпр...\n",
              "4        [MS Dos, Диагностика ПК, Компьютер, Работа в у...\n",
              "                               ...                        \n",
              "69651                                                   []\n",
              "69652    [1С: Управление Торговлей, 1С: Предприятие 8, ...\n",
              "69653    [Организаторские навыки, Работа в команде, Упр...\n",
              "69654                                                   []\n",
              "69655    [Информационная безопасность, Аудит безопаснос...\n",
              "Name: key_skills_list, Length: 69505, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ],
      "source": [
        "df['key_skills_list']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 47,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "6Kk51cJ_p31Q",
        "outputId": "9d8d3161-8cbe-42ee-cb77-174caaa44375"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                    key_skills_list  salary_min\n",
              "0                                               NaN         NaN\n",
              "1                                               Git     21750.0\n",
              "1                                               SQL     21750.0\n",
              "1                                      Тестирование     21750.0\n",
              "1                                                C#     21750.0\n",
              "...                                             ...         ...\n",
              "69655                   Информационная безопасность         NaN\n",
              "69655                            Аудит безопасности         NaN\n",
              "69655  Средства криптографической защиты информации         NaN\n",
              "69655                               Английский язык         NaN\n",
              "69655                             Деловая переписка         NaN\n",
              "\n",
              "[396063 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0b1a754b-6add-4147-a512-d2ee643ef5ab\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>key_skills_list</th>\n",
              "      <th>salary_min</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Git</td>\n",
              "      <td>21750.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>SQL</td>\n",
              "      <td>21750.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Тестирование</td>\n",
              "      <td>21750.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>C#</td>\n",
              "      <td>21750.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69655</th>\n",
              "      <td>Информационная безопасность</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69655</th>\n",
              "      <td>Аудит безопасности</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69655</th>\n",
              "      <td>Средства криптографической защиты информации</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69655</th>\n",
              "      <td>Английский язык</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69655</th>\n",
              "      <td>Деловая переписка</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>396063 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b1a754b-6add-4147-a512-d2ee643ef5ab')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0b1a754b-6add-4147-a512-d2ee643ef5ab button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0b1a754b-6add-4147-a512-d2ee643ef5ab');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ],
      "source": [
        "new_df = df[['key_skills_list', 'salary_min']]\n",
        "skill_salary = new_df.explode('key_skills_list')\n",
        "skill_salary"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ayOMWRdjLQ_q"
      },
      "source": [
        "Создадим датафрейм с топ-100 ключевых навыков"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 48,
      "metadata": {
        "id": "HXD9W_u3LaqJ"
      },
      "outputs": [],
      "source": [
        "top_skills = skill_salary['key_skills_list'].value_counts().to_frame()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 49,
      "metadata": {
        "id": "F-KC2vEpLcaE"
      },
      "outputs": [],
      "source": [
        "top_skills = top_skills[:100]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 50,
      "metadata": {
        "id": "e9FwpxwILcnM"
      },
      "outputs": [],
      "source": [
        "top_skills = top_skills.reset_index()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 51,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "vS8u1a05LczK",
        "outputId": "afd1b63b-7e31-4e99-b950-7adbbd0824ea"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   key_skills_list  count\n",
              "0                 Работа в команде   8015\n",
              "1                   Грамотная речь   6692\n",
              "2                              SQL   6391\n",
              "3                            Linux   4940\n",
              "4                              Git   4581\n",
              "..                             ...    ...\n",
              "95              Системное мышление    759\n",
              "96                             CRM    759\n",
              "97                           Figma    751\n",
              "98  Постановка задач разработчикам    748\n",
              "99          ERP-системы на базе 1С    744\n",
              "\n",
              "[100 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9ea67a64-be00-465b-90a9-9185bd8ceeb6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>key_skills_list</th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Работа в команде</td>\n",
              "      <td>8015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Грамотная речь</td>\n",
              "      <td>6692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>SQL</td>\n",
              "      <td>6391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Linux</td>\n",
              "      <td>4940</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Git</td>\n",
              "      <td>4581</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Системное мышление</td>\n",
              "      <td>759</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>CRM</td>\n",
              "      <td>759</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>Figma</td>\n",
              "      <td>751</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>Постановка задач разработчикам</td>\n",
              "      <td>748</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>ERP-системы на базе 1С</td>\n",
              "      <td>744</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ea67a64-be00-465b-90a9-9185bd8ceeb6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9ea67a64-be00-465b-90a9-9185bd8ceeb6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9ea67a64-be00-465b-90a9-9185bd8ceeb6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ],
      "source": [
        "top_skills = top_skills.rename(columns={'index': 'key_skills_list', 'key_skills_list': 'count'})\n",
        "top_skills"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Sq5GD_1pLxs7"
      },
      "source": [
        "Создадим датафрейм с ключевыми навыками из топ-100 и средней зарплатой по каждому навыку"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "i9SraVcUMCpj"
      },
      "source": [
        "Выберем в датафрейм только существующие значения."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 52,
      "metadata": {
        "id": "SyZTfs0TstU5"
      },
      "outputs": [],
      "source": [
        "salary_new = skill_salary[skill_salary['salary_min'].notna()]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 53,
      "metadata": {
        "id": "vkBb9FS4Ec_3"
      },
      "outputs": [],
      "source": [
        "salary_new = salary_new[salary_new.key_skills_list.isin(top_skills.key_skills_list)].reset_index(drop=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 54,
      "metadata": {
        "id": "aT9B5GuqKeuQ"
      },
      "outputs": [],
      "source": [
        "salary_new['salary_min'] = salary_new['salary_min'].astype(int)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 55,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EA-XVRCWr-r-",
        "outputId": "d9c2f5ef-0e15-4a4e-a8bb-f171418796cf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "60000.0     12\n",
              "80000.0      8\n",
              "50000.0      8\n",
              "40000.0      7\n",
              "45000.0      7\n",
              "100000.0     6\n",
              "70000.0      6\n",
              "90000.0      5\n",
              "43500.0      4\n",
              "75000.0      3\n",
              "87000.0      3\n",
              "55000.0      2\n",
              "130000.0     2\n",
              "130500.0     2\n",
              "52200.0      2\n",
              "120000.0     2\n",
              "104400.0     2\n",
              "150000.0     1\n",
              "65000.0      1\n",
              "62950.0      1\n",
              "74475.0      1\n",
              "70035.0      1\n",
              "44500.0      1\n",
              "37500.0      1\n",
              "41000.0      1\n",
              "66000.0      1\n",
              "59145.0      1\n",
              "78300.0      1\n",
              "111264.0     1\n",
              "80040.0      1\n",
              "113100.0     1\n",
              "110000.0     1\n",
              "139200.0     1\n",
              "85000.0      1\n",
              "69600.0      1\n",
              "59580.0      1\n",
              "Name: salary_median, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ],
      "source": [
        "salary_median = salary_new.groupby('key_skills_list').median()\n",
        "salary_median = salary_median.rename(columns={'salary_min': 'salary_median'})\n",
        "salary_median['salary_median'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 56,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "_FsHxb9LTjtN",
        "outputId": "ba90fde4-5129-414c-c2ae-01047c851cbf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                      salary_median\n",
              "key_skills_list                                    \n",
              "1С программирование                         90000.0\n",
              "1С: Бухгалтерия                             85000.0\n",
              "1С: Документооборот                         75000.0\n",
              "1С: Зарплата и управление персоналом        65000.0\n",
              "1С: Предприятие 8                           80000.0\n",
              "...                                             ...\n",
              "Удаленная работа                            62950.0\n",
              "Умение работать в команде                   45000.0\n",
              "Управление персоналом                       59580.0\n",
              "Управление проектами                        87000.0\n",
              "продажа недвижимости                        80000.0\n",
              "\n",
              "[100 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-308f172c-f315-4b22-9c64-1d27b06092d9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>salary_median</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>key_skills_list</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1С программирование</th>\n",
              "      <td>90000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1С: Бухгалтерия</th>\n",
              "      <td>85000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1С: Документооборот</th>\n",
              "      <td>75000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1С: Зарплата и управление персоналом</th>\n",
              "      <td>65000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1С: Предприятие 8</th>\n",
              "      <td>80000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Удаленная работа</th>\n",
              "      <td>62950.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Умение работать в команде</th>\n",
              "      <td>45000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Управление персоналом</th>\n",
              "      <td>59580.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Управление проектами</th>\n",
              "      <td>87000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>продажа недвижимости</th>\n",
              "      <td>80000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 1 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-308f172c-f315-4b22-9c64-1d27b06092d9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-308f172c-f315-4b22-9c64-1d27b06092d9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-308f172c-f315-4b22-9c64-1d27b06092d9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ],
      "source": [
        "salary_median"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Dl-0nnRHNVtX"
      },
      "source": [
        "Создадим датафрейм с самыми востребованными ключевыми навыками и средней зарплатой по ним с помощью функции merge с возможностью сортировать по полю count"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 57,
      "metadata": {
        "id": "mPSGKpZZzL-g"
      },
      "outputs": [],
      "source": [
        "top_skills_salary = top_skills.merge(salary_median, how='left', on='key_skills_list')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 58,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "jOjnXbTQ1fsd",
        "outputId": "87d1b8ea-c521-48ea-a5e1-74ac5b88f99e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   key_skills_list  count  salary_median\n",
              "0                 Работа в команде   8015        50000.0\n",
              "1                   Грамотная речь   6692        50000.0\n",
              "2                              SQL   6391       100000.0\n",
              "3                            Linux   4940        87000.0\n",
              "4                              Git   4581       111264.0\n",
              "..                             ...    ...            ...\n",
              "95              Системное мышление    759        70035.0\n",
              "96                             CRM    759        60000.0\n",
              "97                           Figma    751        70000.0\n",
              "98  Постановка задач разработчикам    748       100000.0\n",
              "99          ERP-системы на базе 1С    744       100000.0\n",
              "\n",
              "[100 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e0f5257c-fdaf-4296-8756-d2c65be20130\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>key_skills_list</th>\n",
              "      <th>count</th>\n",
              "      <th>salary_median</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Работа в команде</td>\n",
              "      <td>8015</td>\n",
              "      <td>50000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Грамотная речь</td>\n",
              "      <td>6692</td>\n",
              "      <td>50000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>SQL</td>\n",
              "      <td>6391</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Linux</td>\n",
              "      <td>4940</td>\n",
              "      <td>87000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Git</td>\n",
              "      <td>4581</td>\n",
              "      <td>111264.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Системное мышление</td>\n",
              "      <td>759</td>\n",
              "      <td>70035.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>CRM</td>\n",
              "      <td>759</td>\n",
              "      <td>60000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>Figma</td>\n",
              "      <td>751</td>\n",
              "      <td>70000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>Постановка задач разработчикам</td>\n",
              "      <td>748</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>ERP-системы на базе 1С</td>\n",
              "      <td>744</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e0f5257c-fdaf-4296-8756-d2c65be20130')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e0f5257c-fdaf-4296-8756-d2c65be20130 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e0f5257c-fdaf-4296-8756-d2c65be20130');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ],
      "source": [
        "top_skills_salary"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ddzsnz0aDoQf"
      },
      "source": [
        "Отсортируем по убыванию полученный датафрейм по salary_median. Выведем Навыки, соответствующие самой высокой средней зарплате по навыку"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 59,
      "metadata": {
        "id": "dZrQ-lRiDmzn"
      },
      "outputs": [],
      "source": [
        "sorted_skills_salary = top_skills_salary.sort_values(by='salary_median', ascending=False)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 60,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "u9FWmYWtDnAk",
        "outputId": "ba0bb143-1286-4ff1-f130-12f6cb9646a1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   key_skills_list  count  salary_median\n",
              "41                          Docker   1559       150000.0\n",
              "18                      PostgreSQL   2565       139200.0\n",
              "21                            Java   2305       130500.0\n",
              "86                           Scrum    833       130500.0\n",
              "78                            REST    884       130000.0\n",
              "94                Системный анализ    760       130000.0\n",
              "39                  Atlassian Jira   1605       120000.0\n",
              "9                           Python   3249       120000.0\n",
              "83                             UML    851       113100.0\n",
              "4                              Git   4581       111264.0\n",
              "77                            Bash    886       110000.0\n",
              "66                            BPMN   1024       104400.0\n",
              "93        Agile Project Management    763       104400.0\n",
              "54  Разработка технических заданий   1299       100000.0\n",
              "59                   Бизнес-анализ   1210       100000.0\n",
              "30                             ООП   1811       100000.0\n",
              "99          ERP-системы на базе 1С    744       100000.0\n",
              "2                              SQL   6391       100000.0\n",
              "98  Постановка задач разработчикам    748       100000.0\n",
              "17             1С программирование   2597        90000.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-116b9482-aa24-45c4-9856-7157b62b6479\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>key_skills_list</th>\n",
              "      <th>count</th>\n",
              "      <th>salary_median</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Docker</td>\n",
              "      <td>1559</td>\n",
              "      <td>150000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>PostgreSQL</td>\n",
              "      <td>2565</td>\n",
              "      <td>139200.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Java</td>\n",
              "      <td>2305</td>\n",
              "      <td>130500.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>Scrum</td>\n",
              "      <td>833</td>\n",
              "      <td>130500.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>REST</td>\n",
              "      <td>884</td>\n",
              "      <td>130000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>Системный анализ</td>\n",
              "      <td>760</td>\n",
              "      <td>130000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Atlassian Jira</td>\n",
              "      <td>1605</td>\n",
              "      <td>120000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Python</td>\n",
              "      <td>3249</td>\n",
              "      <td>120000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83</th>\n",
              "      <td>UML</td>\n",
              "      <td>851</td>\n",
              "      <td>113100.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Git</td>\n",
              "      <td>4581</td>\n",
              "      <td>111264.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>Bash</td>\n",
              "      <td>886</td>\n",
              "      <td>110000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66</th>\n",
              "      <td>BPMN</td>\n",
              "      <td>1024</td>\n",
              "      <td>104400.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>Agile Project Management</td>\n",
              "      <td>763</td>\n",
              "      <td>104400.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Разработка технических заданий</td>\n",
              "      <td>1299</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>Бизнес-анализ</td>\n",
              "      <td>1210</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>ООП</td>\n",
              "      <td>1811</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>ERP-системы на базе 1С</td>\n",
              "      <td>744</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>SQL</td>\n",
              "      <td>6391</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>Постановка задач разработчикам</td>\n",
              "      <td>748</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>1С программирование</td>\n",
              "      <td>2597</td>\n",
              "      <td>90000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-116b9482-aa24-45c4-9856-7157b62b6479')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-116b9482-aa24-45c4-9856-7157b62b6479 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-116b9482-aa24-45c4-9856-7157b62b6479');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ],
      "source": [
        "sorted_skills_salary = sorted_skills_salary[:20]\n",
        "sorted_skills_salary"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 61,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "QXbJAPfYEDYu",
        "outputId": "1a2cc390-97e2-4ab6-b7ff-887aa5e47499"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "chart = sns.barplot(x=sorted_skills_salary.key_skills_list, y=sorted_skills_salary.salary_median, palette=sns.color_palette(\"crest\", n_colors=20))\n",
        "chart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')\n",
        "chart.set_ylim(ymin=80000)\n",
        "chart.axes.set_title(\"Навыки с самой высокой медианной зарплатой по навыку\", fontsize=16)\n",
        "chart.set_xlabel(\"Навыки\", fontsize=14)\n",
        "chart.set_ylabel(\"Зарплата\", fontsize=14)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "VZXPJYu3Gg2K"
      },
      "source": [
        "**Самые высокооплачиваемые навыки - навыки из сферы информационных технологий (Docker, Bash, Java, Git, Python, 1С программирование, а также языки SQL для работы с базами данных), а также - управление проектами (Atlassian Jira, Agile Project Management) и бинес- и системный анализ**             "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DnW_RvfrEicS"
      },
      "source": [
        "Отсортируем датафрейм по колонке count. Получим самые востребованные навыки с зарплатой по ним."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 62,
      "metadata": {
        "id": "MMJ8LopgEk86"
      },
      "outputs": [],
      "source": [
        "count_top_skills_salary = top_skills_salary.sort_values(by='count', ascending=False)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 63,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "qXV5yedHFsgj",
        "outputId": "cae97e4a-01ce-43f5-f87c-c946ae0f0cd7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           key_skills_list  count  salary_median\n",
              "0         Работа в команде   8015        50000.0\n",
              "1           Грамотная речь   6692        50000.0\n",
              "2                      SQL   6391       100000.0\n",
              "3                    Linux   4940        87000.0\n",
              "4                      Git   4581       111264.0\n",
              "5          Английский язык   4443        80000.0\n",
              "6         Подбор персонала   4315        40000.0\n",
              "7      Ведение переговоров   4092        70000.0\n",
              "8     Управление проектами   3695        87000.0\n",
              "9                   Python   3249       120000.0\n",
              "10         Деловое общение   3223        60000.0\n",
              "11         Пользователь ПК   3199        43500.0\n",
              "12     Обучение и развитие   3194        50000.0\n",
              "13        Активные продажи   3028        70000.0\n",
              "14   Телефонные переговоры   2798        60000.0\n",
              "15              JavaScript   2767        90000.0\n",
              "16  Организаторские навыки   2617        60000.0\n",
              "17     1С программирование   2597        90000.0\n",
              "18              PostgreSQL   2565       139200.0\n",
              "19         Adobe Photoshop   2402        43500.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8199373b-0caa-4512-a2ad-af43dcbbe33c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>key_skills_list</th>\n",
              "      <th>count</th>\n",
              "      <th>salary_median</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Работа в команде</td>\n",
              "      <td>8015</td>\n",
              "      <td>50000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Грамотная речь</td>\n",
              "      <td>6692</td>\n",
              "      <td>50000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>SQL</td>\n",
              "      <td>6391</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Linux</td>\n",
              "      <td>4940</td>\n",
              "      <td>87000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Git</td>\n",
              "      <td>4581</td>\n",
              "      <td>111264.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Английский язык</td>\n",
              "      <td>4443</td>\n",
              "      <td>80000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Подбор персонала</td>\n",
              "      <td>4315</td>\n",
              "      <td>40000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Ведение переговоров</td>\n",
              "      <td>4092</td>\n",
              "      <td>70000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Управление проектами</td>\n",
              "      <td>3695</td>\n",
              "      <td>87000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Python</td>\n",
              "      <td>3249</td>\n",
              "      <td>120000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Деловое общение</td>\n",
              "      <td>3223</td>\n",
              "      <td>60000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Пользователь ПК</td>\n",
              "      <td>3199</td>\n",
              "      <td>43500.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Обучение и развитие</td>\n",
              "      <td>3194</td>\n",
              "      <td>50000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Активные продажи</td>\n",
              "      <td>3028</td>\n",
              "      <td>70000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Телефонные переговоры</td>\n",
              "      <td>2798</td>\n",
              "      <td>60000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>JavaScript</td>\n",
              "      <td>2767</td>\n",
              "      <td>90000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Организаторские навыки</td>\n",
              "      <td>2617</td>\n",
              "      <td>60000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>1С программирование</td>\n",
              "      <td>2597</td>\n",
              "      <td>90000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>PostgreSQL</td>\n",
              "      <td>2565</td>\n",
              "      <td>139200.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Adobe Photoshop</td>\n",
              "      <td>2402</td>\n",
              "      <td>43500.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8199373b-0caa-4512-a2ad-af43dcbbe33c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8199373b-0caa-4512-a2ad-af43dcbbe33c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8199373b-0caa-4512-a2ad-af43dcbbe33c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 63
        }
      ],
      "source": [
        "count_top_skills_salary = count_top_skills_salary[:20]\n",
        "count_top_skills_salary"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 64,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "B3EBRxctElK6",
        "outputId": "1f9c9d64-f41e-4bd3-9a83-31a45d7a9ab7"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "chart = sns.barplot(x=count_top_skills_salary.key_skills_list, y=count_top_skills_salary['count'], palette=sns.color_palette(\"crest\", n_colors=20))\n",
        "chart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')\n",
        "chart.axes.set_title('Самые востребованные навыки', fontsize=16)\n",
        "chart.set_xlabel('Навыки', fontsize=14)\n",
        "chart.set_ylabel('Количество вакансий', fontsize=14)\n",
        "chart.set_ylim(ymin=1000)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5dYeigM1O1vQ"
      },
      "source": [
        "***Самые востребованные навыки включают в себя soft skills - Работа в команде, грамотная речь, английский язык, ведение переговоров, деловое общение, обучение и развитие, организаторские навыки. Остальные - hard skills - из сферы ИТ (большинство), в числе которых есть самые высокооплачиваемые - языки SQL(PostgreSQL), Git, Python.***"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "79S-DxjBrjgN"
      },
      "source": [
        "Получение списка самых востребованных навыков из сферы ИТ"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 65,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "38uNPhFFpLcu",
        "outputId": "32fb204f-34d6-4852-d2c9-d47c45b0830d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            key_skills_list  count  salary_median\n",
            "0                          Работа в команде   8015        50000.0\n",
            "1                            Грамотная речь   6692        50000.0\n",
            "2                                       SQL   6391       100000.0\n",
            "3                                     Linux   4940        87000.0\n",
            "4                                       Git   4581       111264.0\n",
            "5                           Английский язык   4443        80000.0\n",
            "6                          Подбор персонала   4315        40000.0\n",
            "7                       Ведение переговоров   4092        70000.0\n",
            "8                      Управление проектами   3695        87000.0\n",
            "9                                    Python   3249       120000.0\n",
            "10                          Деловое общение   3223        60000.0\n",
            "11                          Пользователь ПК   3199        43500.0\n",
            "12                      Обучение и развитие   3194        50000.0\n",
            "13                         Активные продажи   3028        70000.0\n",
            "14                    Телефонные переговоры   2798        60000.0\n",
            "15                               JavaScript   2767        90000.0\n",
            "16                   Организаторские навыки   2617        60000.0\n",
            "17                      1С программирование   2597        90000.0\n",
            "18                               PostgreSQL   2565       139200.0\n",
            "19                          Adobe Photoshop   2402        43500.0\n",
            "20                     Деловая коммуникация   2320        60000.0\n",
            "21                                     Java   2305       130500.0\n",
            "22                        1С: Предприятие 8   2243        80000.0\n",
            "23                        Деловая переписка   2180        55000.0\n",
            "24      Работа с большим объемом информации   2135        45000.0\n",
            "25                            MS PowerPoint   2133        52200.0\n",
            "26                   Аналитическое мышление   2068        60000.0\n",
            "27                              Грамотность   2004        40000.0\n",
            "28                    Управление персоналом   1920        59580.0\n",
            "29                            Навыки продаж   1901        70000.0\n",
            "30                                      ООП   1811       100000.0\n",
            "31                  Ориентация на результат   1799        60000.0\n",
            "32                Кадровое делопроизводство   1759        43500.0\n",
            "33                                   MS SQL   1751        90000.0\n",
            "34                                     HTML   1745        60000.0\n",
            "35                                    MySQL   1731        90000.0\n",
            "36     1С: Зарплата и управление персоналом   1682        65000.0\n",
            "37                                      PHP   1666        80000.0\n",
            "38                Информационные технологии   1643        50000.0\n",
            "39                           Atlassian Jira   1605       120000.0\n",
            "40                       Жилая недвижимость   1601        75000.0\n",
            "41                                   Docker   1559       150000.0\n",
            "42                             Креативность   1557        43500.0\n",
            "43             Поиск и привлечение клиентов   1521        70000.0\n",
            "44              Информационная безопасность   1493        60000.0\n",
            "45                             Настройка ПК   1484        40000.0\n",
            "46                     Заключение договоров   1418        66000.0\n",
            "47                      Адаптация персонала   1413        45000.0\n",
            "48                   Проведение презентаций   1379        70000.0\n",
            "49                                       C#   1375        87000.0\n",
            "50                                      CSS   1343        69600.0\n",
            "51            Настройка сетевых подключений   1318        41000.0\n",
            "52                       Обучение персонала   1304        52200.0\n",
            "53        Работа в условиях многозадачности   1300        44500.0\n",
            "54           Разработка технических заданий   1299       100000.0\n",
            "55                      1С: Документооборот   1282        75000.0\n",
            "56                             Настройка ПО   1250        40000.0\n",
            "57   Подбор недвижимости по запросу клиента   1249        75000.0\n",
            "58                    Техническая поддержка   1240        40000.0\n",
            "59                            Бизнес-анализ   1210       100000.0\n",
            "60                           Прямые продажи   1143        80000.0\n",
            "61                                   TCP/IP   1136        55000.0\n",
            "62                   Вторичная недвижимость   1100        78300.0\n",
            "63                 Клиентоориентированность   1085        60000.0\n",
            "64                        Adobe Illustrator   1065        45000.0\n",
            "65                                Windows 7   1048        45000.0\n",
            "66                                     BPMN   1024       104400.0\n",
            "67                Массовый подбор персонала   1012        40000.0\n",
            "68                        Администрирование    970        50000.0\n",
            "69                             Тестирование    966        74475.0\n",
            "70                   Работа с базами данных    965        50000.0\n",
            "71                          Многозадачность    960        45000.0\n",
            "72                 1С: Управление Торговлей    959        90000.0\n",
            "73                Умение работать в команде    915        45000.0\n",
            "74  Администрирование сетевого оборудования    911        50000.0\n",
            "75                                Ремонт ПК    909        45000.0\n",
            "76                   Первичная недвижимость    887        80000.0\n",
            "77                                     Bash    886       110000.0\n",
            "78                                     REST    884       130000.0\n",
            "79                                 MS Visio    872        80000.0\n",
            "80                          1С: Бухгалтерия    872        85000.0\n",
            "81                         Оценка персонала    872        50000.0\n",
            "82              Поиск информации в интернет    866        37500.0\n",
            "83                                      UML    851       113100.0\n",
            "84                                      C++    841        80000.0\n",
            "85                              Базы данных    838        60000.0\n",
            "86                                    Scrum    833       130500.0\n",
            "87                     продажа недвижимости    828        80000.0\n",
            "88                            Анализ данных    815        59145.0\n",
            "89                                      XML    810        80040.0\n",
            "90                         Active Directory    800        60000.0\n",
            "91                         Удаленная работа    781        62950.0\n",
            "92                        Оценка кандидатов    765        40000.0\n",
            "93                 Agile Project Management    763       104400.0\n",
            "94                         Системный анализ    760       130000.0\n",
            "95                       Системное мышление    759        70035.0\n",
            "96                                      CRM    759        60000.0\n",
            "97                                    Figma    751        70000.0\n",
            "98           Постановка задач разработчикам    748       100000.0\n",
            "99                   ERP-системы на базе 1С    744       100000.0\n"
          ]
        }
      ],
      "source": [
        "with pd.option_context('display.max_rows', None, 'display.max_columns', None):\n",
        "    print(top_skills_salary)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 66,
      "metadata": {
        "id": "3NcAx7dzti05"
      },
      "outputs": [],
      "source": [
        "lst = ['SQL', 'Linux', 'Git', 'Python', 'JavaScript', '1C программирование', 'PostgreSQL', 'Adobe Photoshop', 'Java',  'Работа с большим объемом информации', 'Аналитическое мышление', 'ООП', 'MS SQL', 'HTML', 'MySQL']"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s5ej4Rvrbwbk"
      },
      "source": [
        "Отфильтруем датаврейм топ-навыков с зарплатой по списку навыков ИТ, построим барплот с топ-15 навыков, а также барплот с зарплатами по топ-15 навыков"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 67,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "Nwj_ONSrXwnA",
        "outputId": "bb87f768-abc1-4d93-898c-b9c8efcc97b7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        key_skills_list  count  salary_median\n",
              "0                                   SQL   6391       100000.0\n",
              "1                                 Linux   4940        87000.0\n",
              "2                                   Git   4581       111264.0\n",
              "3                                Python   3249       120000.0\n",
              "4                            JavaScript   2767        90000.0\n",
              "5                            PostgreSQL   2565       139200.0\n",
              "6                       Adobe Photoshop   2402        43500.0\n",
              "7                                  Java   2305       130500.0\n",
              "8   Работа с большим объемом информации   2135        45000.0\n",
              "9                Аналитическое мышление   2068        60000.0\n",
              "10                                  ООП   1811       100000.0\n",
              "11                               MS SQL   1751        90000.0\n",
              "12                                 HTML   1745        60000.0\n",
              "13                                MySQL   1731        90000.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-67ff226f-5671-4386-9a7d-9d46589159fd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>key_skills_list</th>\n",
              "      <th>count</th>\n",
              "      <th>salary_median</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>SQL</td>\n",
              "      <td>6391</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Linux</td>\n",
              "      <td>4940</td>\n",
              "      <td>87000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Git</td>\n",
              "      <td>4581</td>\n",
              "      <td>111264.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Python</td>\n",
              "      <td>3249</td>\n",
              "      <td>120000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>JavaScript</td>\n",
              "      <td>2767</td>\n",
              "      <td>90000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>PostgreSQL</td>\n",
              "      <td>2565</td>\n",
              "      <td>139200.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Adobe Photoshop</td>\n",
              "      <td>2402</td>\n",
              "      <td>43500.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Java</td>\n",
              "      <td>2305</td>\n",
              "      <td>130500.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Работа с большим объемом информации</td>\n",
              "      <td>2135</td>\n",
              "      <td>45000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Аналитическое мышление</td>\n",
              "      <td>2068</td>\n",
              "      <td>60000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>ООП</td>\n",
              "      <td>1811</td>\n",
              "      <td>100000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>MS SQL</td>\n",
              "      <td>1751</td>\n",
              "      <td>90000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>HTML</td>\n",
              "      <td>1745</td>\n",
              "      <td>60000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>MySQL</td>\n",
              "      <td>1731</td>\n",
              "      <td>90000.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-67ff226f-5671-4386-9a7d-9d46589159fd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-67ff226f-5671-4386-9a7d-9d46589159fd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-67ff226f-5671-4386-9a7d-9d46589159fd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ],
      "source": [
        "top_skills_salary_new = top_skills_salary[top_skills_salary.key_skills_list.isin(lst)].reset_index(drop=True)\n",
        "top_skills_salary_new"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 68,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "AoXKKCyHVaFr",
        "outputId": "6d31195c-547d-416b-b026-fd07f409f43d"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "chart = sns.barplot(x=top_skills_salary_new.key_skills_list, y=top_skills_salary_new['count'], palette=sns.color_palette(\"crest\", n_colors=len(lst)))\n",
        "chart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')\n",
        "chart.set_ylim(ymin=1000, ymax=7000)\n",
        "chart.axes.set_title(\"Топ-15 навыков в ИТ-сфере\", fontsize=16)\n",
        "chart.set_xlabel(\"Навыки\", fontsize=14)\n",
        "chart.set_ylabel(\"Количество вакансий с навыком\", fontsize=14)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "seuviUJyS8rw"
      },
      "source": [
        "***В топ-15 навыков из сферы ИТ вошли языки SQL, из которых самый популярный - Postgre, далее - MS SQL и MySQL. Из языков программирования в топ-15 - Python, JavaScript, Java. Также требуется знание ООП, система управления версиями Git, знание Linux, Работа с большим объемом информации и аналитическое мышление***"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 69,
      "metadata": {
        "id": "NK5EFMx5ZM0i"
      },
      "outputs": [],
      "source": [
        "sorted_top_skills_salary = top_skills_salary_new.sort_values(by='salary_median', ascending=False)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 70,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "M8vBd6qDZqP5",
        "outputId": "90755352-3f04-4cf1-ace2-044e8e50aefe"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAw0AAAIeCAYAAAD51ONhAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdebgcVZn48e9LAgIqshgUWQwK4gDKiMgiinHDoI7ghuACKMqAOKP+nFFEERSYQVFQFFFGEFAUHTcYRTACcQdBFAVEiRg0yB5kkR3e3x/nNKl0+tbtTu5Nd8L38zz3ud2nTlW9XVvXW+dUdWQmkiRJkjSWFYYdgCRJkqTRZtIgSZIkqZVJgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSp1cglDRGxV0Rk4+/2iLgkIt4REVOHHZ+0PIqIzSJiXkT8U0Q8KiIOi4iPDTsuSZIGFREz6jnki3oMO7cOO6m+n9113jnW3/QJjvFFdbozJnK6k2mUT8JfC8wDVquvPw2sDXxomEFJy6PMvCwifgpcXov+Cjx/iCFJkjShIuLFLPrd9nbKuWbHQcCzgFd01bt2EkNbJoxy0vCbzJxTX/8gIjYC3olJgzQpMnO3iHgP8GjgT5l537BjkiRpAh0O/A54bKcgMy9vVoiIG4F7M/P8pRzbyBu57kktLgRWi4i1ASJit9rEdGNE3BERv46IPbtHioipEfG+iLg8Iu6u9c+KiKfW4TPGaY56a2NaJ9UuHM+OiAvr9OZGxL/1mO+GEXFqnd89EfGbiHhlrw9Wp9lr3hstwTR7fp6uOqtGxEcj4s8RcW/9/4GIWKFRp2cTX0RMH2P5zO6q99xab+6g8x7jc01vfJ4ZXcO2a1l2+9RubndHxE0RcUJErNlj+m8dY9l9uave3Ig4pKvsoGaTZy2bFhGfj4g/RsSdEfHXiPhKRKzbNe4hddypXeV7dX+eOu+F4qnls6O0FjTLNomIb0fE3yPirog4PyJm9pj3XIDMvCYzrwCeWJdV60/GR8Rj6nyvr+vxmog4PiJWX4Jl8LSIOK/WvTYiPjLGNjnuPlvrTx+j3txGnZUj4uiIuDTK8eS6iPi/qMeJrnUx5l+jbkbEYS3LbXb3vtKjzqCf841d2/iXImKdtnk0Yvlpj/KTImJeV9mHI+LiiLitzuPciNh2nLjvjHKsel0/820MP6RrmXbW44xG2TY1ls/V96+udbYY43O2ngTUfasT9wNRjs2fjohVxhnvVRHx2xrLnRHxu4jYu6vOjhFxZt2m76zb2nsiYsqgMXS2xa7x1ojy3bBIN4qIeFtdb3dFxC0R8aOIePZYy7WW/7CW79UoO6mWze6xDM6O3sfKreu07oiIf0TEORGxdY/xnxcRsyLi1lrvks4y7Fomvf4OqfUeOpY1prtR9HEsq3VXjNI1c26U49nc+n7FrmXV9jejZfqL7FONuBc6/kfpkv2LiJgf5fh9fkS8rGu87njujogrIuId/cy3MbxzbJveKOte9xtFxN+iHBdXbJSPu34b203n78aI+E5EPGmsmLri6PzdFxFXRTkODXz+GuV86VmUloQHBx2/j+mPuQ3X4dPq8rsrIi4COt/rm0Q5Rt4Z5bvxUV3TnRYRn4vy/XpPXcf7dNXprMMd6rK9IyJujohjo+v4FYt5/gWj3dLQbUPgAeCO+v5JwDeAIygrfwfgCxGxSmZ+rjHeacAuwCeBHwIr17rrAFc06v07JTHpWAf4Vo84VgO+BnwUmAPsBhwTEbdn5kkAEbE+cAFwA/Bu4EbgdcA3I2KXzDyjx3TPBA6tr18GfLA5cDGneQLwhfr6rUBz450KnA1sWuf7O2Bbys60JvCeHtMbSJQvw2Mp661ZPhHzng/sB8xulO1XyxdKBiLiiDrNY4D/BNYFDgM2j4hnZ+ZC8VWvYkFT5LfHCyYingi8n67PWmO5uw67EXhCjeVnEfHUzLx7vGkvroh4AvBT4HbgHcCtwP7A9yLi5Zn5/ZbRj6G/48MDlP3kSsq+uQFwCHAcsHutM+gy+A5wIvDfwEtYcIA/pKtev/tsx2HA9+rrg4DNGsMeQWlhOYyy3tekNFn/IiL+KTOvq+Nu1xjn27XsC0yucT9n/QL5POXY9H7KMv4vYJuI2DIz72BirAscTek6+kjgjcCPI+KZmfm7rrr7AxcDjwH+A/hKRFyWmZdORCAR8QzgLMp62K8Wnw78DfhXyvrr1H0q8DzgzX1MunMsngrMAD4M3Am8r2Wc64GPU5ZL5/vo+IiYl5ln1zpPAs6hdLW9G9iKsk1PAw6YgBgOB9boLoyIj1P2txOAg2t821L21Z/3mlBE7Frn28sdwHYRsWnnCm2UixozgNu6pvN04EeUbo97AUn5rD+KiG0z85Jab2fgm8DPKOvuJsr++cQ6qVdS9lFY8P3Y3BfHPCGm/2MZwMnArpR956fAs4EPUNbd6ynHhuZ8D6Lsj29vlC101XoJTKccW+ZS4v8X4LsRsVNmntVVt3NsW5XyXf/piPjTOMf4vtXvt3OAy4DXdFqh+12/1XWU9RjAUyj7y1eBbfoIoXMu84g6jQ/V6R03wGdYgbJP/TIzT4+IY/sdt8/pj7cNA3wJ2BLYF7ifch4JcCDwXsr+eyRwFLBPne5qlG1xFcrx4s+U78XjIuIRmfnprlC+DHwd+CywNWVZPZKyfpb8/CszR+qPBRveJpQdZY26Ah4AvjPGOCvUuv8DXNIof0Gd1r+3zG9GrfOirvLptfytjbKTatluXXVnAVcDUd+fQDk5WqtHvd/0iOEG4IQey2CjRlnf0wRWquN/sFF2SFndD71/U62zQ9e4HwDuBdZezOUzu/H+nZQvmC8Acwed9xjrqzPfo4B7gMfV8rWAu4BPNJddrf8A8KGu6Wxf6+3SVf72Wr5+o2wu8OWuenOBQxrvv005QfoxcFJL/FOA9es8Xtm9foCpY+wPG7XFU8tnAz9tvP845cC0Udf8/wBc3DXv5vrZuS6zTze3mXH22xWAFSnJ/Xk09sPFWAYHdNX/H0ris/qg22Qtf0otf2PXtjp3nBhXrfN99xh1FtoGuoYlcFjL9GfT2FfGqNPX56yxXg+c11XvOYxz/Ou13XQto3njLKOpdXv6VI+4ZzTKnl7Ldh9vvt3bQ4/PPYPyhXcjJUma0mO8W4FHNsqOAm4BVhlnWcyla/+l7Ndn97kfTK3bzQsox6Oxtp2odT9Q41phkBiox4XG+y0p++yn6jKaXss3quVHtcT80HKt7x9JuaepM629ureJutyPaZQfSTlhmkvj2ES5sPd36r5by1ajXNz5VmNZzAUuai6HlngX+uw91v3cxvu+j2XA5vXzHtJV/sFa/vQx9pHW/biffYoxjv+N4Z1znB8Ap/dYd811tFote/948+1epp3tppZlLX8C5QLpj4FVu8Ybd/025j+3a9yjgLv7WGa91sl84PPjjDeDxvGTBecdnffzGOO7erzl1aP+uNswC46Br2mUvaGW7doo+3+Uc5tp9f1BlIsMG3dN738oicnUrnX4ua56H6j7wFO6lsPA51+ZOdLdk64A7qNsHJ8FTgXe0hkYERtHxFcj4ppa7z5Khr1JYxo7UhbO/0xgXA9QDo5Np1Gu2nS6W8ykXCm6NUr3qKmN7G6Lmjk2PZJyFanNINPsNEW1XcWeSUl0ft41vR9QTv627aq/Qle9KbSIiMdRro4dyqJXgQaddy+XA7+grHMoVxAvpmTNTS+mHHBP7ZrXBZQTwh266neaBcdbHw+J0t1nZ0rCsUiTZ0TsV5sp76CcxP+lDtqkuy4wpSvOsfbRaNardaOrzg7A+bng3iCytKp8FfjnHtshtRnzk8DxwK9aPna3b1EOOFdRmn8PbQ4ccBl8vev9aZT1svkA8TT1sz8QEbtGxAUR8fca4z/qfHvF2I/OOprs4+wmlIdEnNoszMyfUvaz5/UzkT62J6I87eO8iLiZsozuoyRlbdvymsDbKMt/ke5BtU7r8aTLRpRW4weBN+WiLYXHU07cd6/TXxnYEzglM+/qY/qd9bZy3bf/iYVbNMcaaXXK8vgH5arslcBXGsPXidJN72rKvnIf5Qrx6pT1t1gxRERQWnR/wKKtoi+iHEOOHy/+hg9RjsNt9w8eB+xRuzk8gnL8/VyPejsA383Mv3cKMvM24AwWbJebUK7GfiEzJ6zLyGIcyzrfBd1dPzvv+9qP+tFjX1vkGBERz4yI70bE9SzY115M732t8/28GqWF70HKSX6v+Q6yr02j7GvrU052u78X+1m/3fNfMSI2A15KaaXoR+fzrRoRb6JcTJ7d74eI0p3qEMqFlR/2O94Y0+ped9DfNrxl/d/8zNfX/zc0yn5CufDbaQmfSTlf+XOPc7+1KBdQmnp9f65AaXXoTG+xz79GOWno9D17KuWK0R6ZOR8gSn+vWcAWlKaw59a6J7KgCRPKAp3f5xdFv27JRW8Q7az4TtKwNrAHC5KZzt+RjbiAh75oVmX8u/L7nmbj9c3jTO+JPab3yx7Tg7KBNuvNod2RlObDoydg3mM5DtinbvD/Su+mys6X8Zwe83t0j3k9gZLlz+8ngPqF+WnKFYteJ0T/Rkl6f0jp8rQ1C3bKlXtM8u6uGE8YY9av7/F5uhOgNem9XV1HOSFcpCsDpWvLoyhXHQbxHkqz/dsoXxh/6AxYjGVw/Rjv1+2u2Kdx94eI+BfK1dPfU5btNpRjyo1jxNiPAynr5f6IuCEivhYRGyzmtNp0uuONta4XuXenh+1ZdHvao1khIrakXLi4g9LVcVvKMrqE3svoh3U6N9f678jMP48x3/uj9AP+UUQ8d5xYj6Vc1eu0Qi8kM/9G6aa0by16LWUZfH6c6XZ0jrN3Ad+nfNcc1cd4t1OWx/Mp3WbPonbXqYnjGcDLKYnCC2rdw+u43ctvkBjeDDyD0o2tW2fbb+u+85Ao3bjeDbw3M28dq15mzqZ0A3s9pTvPLZT13a3tGNQ5/gwU4wAGPZaNtR9d1zV8Sa3LovvaQc0KUbojn1Pn+W+UblLPomxTvfa1E+p0bqVcsDkkM382xnzvj9Lf/cKI2GWcWA+r44zVNa6f9dvR+c6/F7iUckH37fTnIBYk5KewoCtmv95K6WJ24ADjLCLKPR8Lrbta1s82/Pj6//ZxZtMZ/rj6f23Kd3v3NvO/dXj3Ocx4359LdP41yvc0XNq8QtplO8qHfm69mgY81Fer6SZgzSj3OUxU4rBGRKzYlTh0Vu419f/NlGzxo/T2t8brp9X/4/XzHWSaG9f/fxpnen+mHPB7mdv1fn8WbFRQ+nH2uo+CiHgOpa/zjpl5b7kQtkTzHsu3KE3on6QcoP6XBf3om/OC0up0S49pdJ9IPg24PGt7XR/+g/IUhrH6Gu8GnJOZD/UTjIgNW6a3LQvfF/FySj/kbt9n0SuB3SdF81lwoGp6POWAvdDyiIgnU/pVviMz5/dYb2PKzD9RtrfzI+Ju4OyIWL9eBR50GTyO0mLRfA8L9q9B9bM/7AbMycy9OgX16tSSnCicSElkp9QYjqRceX7OEkyzl06CO9a67ucq6yUsaLXrOJhyMtrxasoVz1c1j38RsQali0K3feu8V6J85uMi4r7MPGWM+T6ecoJ3Zj1pGssvgJ0o9ycdERFnZeaVXXU+C5wTEc+kJBY/ya4npLT4LqWVNCgtyIdRkqUXto1Ut/WL6tvZEfHDOp33Ak+m3MPwpsx86Ep2TVYXO4Z60ekI4OOZeWV0PVyA8h0I5YThD4zv08AFXetoLJ+j3EtyD6WrSPY4ZrQdgzrHn2aME2Ixj2XN/ah5rHh81/AldQPlvoymfSgXXDpmUu4F2jUzHzoRjYhVx5jmhynbzFTKxdSPRwSZ2Wzxbc53DUr34f+NiKcxtjmUbe6lwBcj4juZ+ZPG8H7Wb8e1LHiE6RqUJPdnEfG0zLyxJQYovUWOp1zo3pjS9XZFGvdptliF0sXsu70u7A3ob5Tkrbusc7G6bRvutCasRft3WeekvbNMbq7jvnOM+t379eMo954038PC56eLff41yklDm86O0/3FtXNXvR9QWiLeSjkYToQplC/P0xplu1G6W3RWylmUxOayPpKVl1Gy+Nnj1Btkmi+v07yopc5ZlM9xR5an5Yznj5n50PRi7B85mQJ8BvhmSzPgoPPuKTPvi4gTKFcPPp6Z9/T4cphFaardIDNntU2vfgFvTzkg9WMDys3o72056K1K182BtN+M+avMvL8R01hdcuY310etezsL79M/At4VEdMzc26tM6XG/OvajNz0KcpJ3FitG/16JCWpXItysBt0GexKORHq2I1ydbu761m/Xg5cnZl/aamzKuWEuOlNjNMNbxzXNtbRBfVK/b5tIyymP1CuJu1GY91FeTrOEyn3+Yznjh7bU3dCvSoloc1GnRdQ9oPuFgSAPzSm+fOI2L3G2DwhvaPruLICpZXgKS2xHpKZd0XEf1FuDj05Ip7b7KaUmedGxBWUq/PbU/oO9+vmRkwXRsR6wCcjYu3MvKFtxC6rsqBLXa/vrBVb4uo3hsMox/r/GmM6nW5c+zD+AyZeQ2kl2XKceh0nUx5WMIWyHnr5EfDSiHh0Zt4OEBGPrvVn1zp/pJyovDUijh/ggk2bxTmWdbrz7MaCFiBYsI5mL3lYANzXY197eVedXtvLUyjbcq+r2XMb0+w8IW93Fu4mel/XvnY95fzj6S2xHpmZNwGnRMSrgJMiYotc8GCFftZvx71d878B+A1lm+vuUtPtb41xfxkRW1EuBvSTNLyD8n30wfEqjicz76XHeVVE9LMNd24Kn8GCrqTN1oSOHSjfRZ2LHGdRWpv+0ufxZ1fg3Mb73SjHgAsa01vs869lNWn4OeUk5NiIOJhykvJByhWLx3QqZeZ5EfFN4Kh65epcSna6A/C92sQ6qNuBj0XEYyl9Vnen9Bvdq7GhfIhyVf7HEfEZFjSlbw48KTPfUru17ELZGGYDmzZOeJ9c//9zRNxQT+76meZ6lKbl/YFP9Oh/2HQq5cTtnIj4BGWDXqnO+xWUG4T77tffsB2li81YXyITPe+PU268/XWvgZn5p4j4KPCZiNiEcpC7m9JH88WUPojn1StTH69x/DoWfozkI4DHRuNpIdUewG9pf4LDWcD7IuJAyvp7AeXLeWk4mnJz1Ky6n9xGaQ5+Cote6VqPsky2HuRLuzZvb0O5+ns75WrqB4GLGge4QZfB2+rJ44WUp0S8lXKiOGZ3iTFieyrlosHLKV8cbc4CdomIoylX7Lai7Ju9rqD3a60awwqUfvivYeGnIE2IzHwgIj4EfD7K4y6/TLnidTjlGHXiBM3qLOBdlBOHL1K2o4MY+6rZprXVqdPS8LQ6jaZVYsFjbdeu07+dkgi9tC2YzLw/ymO2L6ZcVf7vrirHUU4eb2LR+9DaTKv7f1D2ibdTriaOeTW0bjd/rH8rU040t2PBdvd7Sj/iwyPiAcrJ4LsnIIZ9gdeOdbysx7+jgf9XT+bOoCR+WwNXZGazi8e+wLGZ+duWuJrTvjUidqDc+DlW179DKfvfOfU4nJRW2VWBj9TpZES8i9JyfG6Ux+feSLmPY+3M7NXS2maxjmWZeWlEfBU4pPZa+DllHR4EfDUXfTrYZPoh5cTxlPoduQ6lNeEv9O5W/uS6vXRaGl4M/F9XnamNfW11yvZ3P+XE/dl9xLQP5Qr2J1jQLXDc9dvwiMb36hqU4+sDLHxVfCzr1XE7LQ27s+AkfDw7Al/LhZ/kNKH62YYz81cRcR7wifr99iALjlkfi3IC+BhKt7qvZHliH5Tv8dcBP6n78h8o57xPpfS26b5Y/tKIOJJy0XxrSovxKY3W2CU7/8o+7w5fWn/0eFrMGPVeQDlRvIvSlPjvdD1to9brPKHij5S+dDdSmnk3yR532DfGm07vpwPNo+xgF1JOPq+mx9NJKAeuL1C+UO+lNM3Noj7BpTH98f5mDDDNvSjdnN5N1x38YyyblWv5FSzox39hLZu6mMsnWfTpN4ew6JMTxp33GOt9kfn2s/1QrhqfT+kTeQflS/wzwHpdsbf9zW5Mby5lp9+uaz6zaTyRgdI0ehxlu7udckK6IV1PhGCMp2f0+jz0+fSkWrYJ5RGmt7LgRtSZvbYNFn3qwl7d20yPeW5PecTc31mwL36S+uSHxVwGm1MSwbsofWMPZeGny8ygv6cKHVS3qT17xH0SCz9lZQXKVdu/Ua7c/ojSNWcuYz9hYy60Pj2p8/cAZV89lQXb22wm6OlJjfI3Ur4A7qE0QX8JWKdtHmNtN41lNK+r7N8orQp31WX7ou7P0oi783cPpbvZR4GVuubbrDef0o97+17HLLqe8tMof0+dx9O7ytep9Y8cbxl0rdNOPA9SWsrOADYfZ7wPUb5j7qJ0y/gl8JauOv9MeXTinZTvkY9QEuJk4afWjBsDC44LZ42xzUzvKt+XcoGjc6ydTT12NZbr9cBjemzHe7VtEz2WX/eT5rahnATfwYKbxLfuMe4LKPv9HfXvEuDNPertxRjHJZbgWFbrrUQ5DlxNSeyuru9XHKP+SUzS05MoV4yvoBy3L6NcMT6JhY9bnXXX+buP8uSrz7HwE41O6qp3K+VCzyu6tqfmdrjQuq9lr67lOw2yflvmv3Mfy2ysY+n644w3o45zP/XJQV3DJ+zpSf1uw5Rj0vfrOv0lJRFLSte0iynHj/9l0f1wDUry8GfKud8NlO7q7+pxTNiB0lp7B2VfP5aup8axmOdfmfnQI0LVhyg/2vWizFxvAqY1HfhzZo7Z2TIi5lBODGYv6fzUrq7buZl5yBjD30hZFzOWYlgPK1F+oOlgyhd0d1chaSAR8TbKfT5PybHvj5OkoYjyo7mzgOcv6XlelB/i+yLl0ayTdrxbVrsnLQ/uYUEfs7H8mkX7gmty/In2J1jdyMT9aI+kSRIRm1Ka2j9M+W0fEwZJmgAmDUOSmdcyzvNwM/O1Symch71c+CkTvYafTXnsrKTR9llKF9KfM/69LJKkPtk9SZIkSVKrUf5xN0mSJEkjwO5JY3jsYx+b06dPH3YYkiRJWs796le/uikzpw07jjYmDWOYPn06F13U9ttokiRJ0pKLiKuHHcN47J4kSZIkqZVJgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSplUmDJEmSpFYmDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkViYNkiRJklottaQhIk6MiBsi4tIew94TERkRj63vIyKOiYg5EfHbiNiyUXfPiLiy/u3ZKH9mRPyujnNMREQtXzMiZtX6syJijaXxeSVJkqTlxdJsaTgJmNldGBHrAzsCf2kU7wRsXP/2AY6rddcEDga2AbYGDm4kAccBb2uM15nXAcA5mbkxcE59L0mSJKlPSy1pyMwfA/N7DDoaeC+QjbKdgVOyOB9YPSLWAV4CzMrM+Zl5CzALmFmHrZaZ52dmAqcAuzSmdXJ9fXKjXJIkSVIfhnpPQ0TsDFyTmZd0DVoX+Gvj/bxa1lY+r0c5wOMy89r6+jrgcS3x7BMRF0XERTfeeOOgH0eSJElaLg0taYiIVYEDgQ8trXnWVohsGX58Zm6VmVtNmzZtaYUlSZIkjbSpQ5z3k4ENgUvqPcvrARdHxNbANcD6jbrr1bJrgBld5bNr+Xo96gNcHxHrZOa1tRvTDYsb8PHnfX5xR51U+zz/X4cdgiRJkpZjQ2tpyMzfZebamTk9M6dTuhRtmZnXAWcAe9SnKG0L3Fq7GJ0N7BgRa9QboHcEzq7DbouIbetTk/YATq+zOgPoPGVpz0a5JEmSpD4szUeufhX4BbBJRMyLiL1bqp8JXAXMAf4HeDtAZs4HDgUurH8fqWXUOl+o4/wJ+H4tPwJ4cURcCbyovpckSZLUp6XWPSkzdx9n+PTG6wT2H6PeicCJPcovAjbvUX4z8MIBw5UkSZJU+YvQkiRJklqZNEiSJElqZdIgSZIkqZVJgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSplUmDJEmSpFYmDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkViYNkiRJklqZNEiSJElqZdIgSZIkqZVJgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSp1dRhB6Cl52NnHjvsEHp670v3H3YIkiRJamFLgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSplUmDJEmSpFYmDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkViYNkiRJklqZNEiSJElqZdIgSZIkqZVJgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSplUmDJEmSpFYmDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkViYNkiRJklqZNEiSJElqtdSShog4MSJuiIhLG2VHRsQVEfHbiPh2RKzeGPb+iJgTEX+IiJc0ymfWsjkRcUCjfMOIuKCWfy0iVqrlj6jv59Th05fOJ5YkSZKWD0uzpeEkYGZX2Sxg88x8OvBH4P0AEbEpsBuwWR3nsxExJSKmAMcCOwGbArvXugAfBY7OzI2AW4C9a/newC21/OhaT5IkSVKfllrSkJk/BuZ3lf0gM++vb88H1quvdwZOy8x7MvPPwBxg6/o3JzOvysx7gdOAnSMigBcA36jjnwzs0pjWyfX1N4AX1vqSJEmS+jB12AE0vAX4Wn29LiWJ6JhXywD+2lW+DbAW8PdGAtKsv25nnMy8PyJurfVv6g4gIvYB9gHYYIMNlvDjaCK9/xvHDDuEMf33a/592CFIkiRNqpG4EToiPgDcD5w6zDgy8/jM3Cozt5o2bdowQ5EkSZJGxtBbGiJiL+DlwAszM2vxNcD6jWrr1TLGKL8ZWD0iptbWhmb9zrTmRcRU4DG1viRJkqQ+DLWlISJmAu8FXpGZdzYGnQHsVp98tCGwMfBL4EJg4/qkpJUoN0ufUZON84DX1PH3BE5vTGvP+vo1wLmN5ESSJEnSOJZaS0NEfBWYATw2IuYBB1OelvQIYFa9N/n8zNw3My+LiK8Dl1O6Le2fmQ/U6bwDOBuYApyYmZfVWbwPOC0iDgN+DZxQy08AvhQRcyg3Yu826R9WkiRJWtoKv8cAACAASURBVI4staQhM3fvUXxCj7JO/cOBw3uUnwmc2aP8KsrTlbrL7wZeO1CwkiRJkh4yEjdCS5IkSRpdJg2SJEmSWpk0SJIkSWpl0iBJkiSplUmDJEmSpFYmDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkViYNkiRJklqZNEiSJElqZdIgSZIkqZVJgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSp1dRhByA9HOx/ytHDDqGnY/d497BDkCRJywBbGiRJkiS1MmmQJEmS1MqkQZIkSVIrkwZJkiRJrUwaJEmSJLUyaZAkSZLUyqRBkiRJUiuTBkmSJEmtTBokSZIktTJpkCRJktTKpEGSJElSK5MGSZIkSa1MGiRJkiS1MmmQJEmS1MqkQZIkSVIrkwZJkiRJrUwaJEmSJLUyaZAkSZLUyqRBkiRJUiuTBkmSJEmtTBokSZIktTJpkCRJktTKpEGSJElSK5MGSZIkSa1MGiRJkiS1MmmQJEmS1GqpJQ0RcWJE3BARlzbK1oyIWRFxZf2/Ri2PiDgmIuZExG8jYsvGOHvW+ldGxJ6N8mdGxO/qOMdERLTNQ5IkSVJ/lmZLw0nAzK6yA4BzMnNj4Jz6HmAnYOP6tw9wHJQEADgY2AbYGji4kQQcB7ytMd7MceYhSZIkqQ9LLWnIzB8D87uKdwZOrq9PBnZplJ+SxfnA6hGxDvASYFZmzs/MW4BZwMw6bLXMPD8zEzila1q95iFJkiSpD1OHPP/HZea19fV1wOPq63WBvzbqzatlbeXzepS3zWMREbEPpWWDDTbYYNDPIi239vj8x4cdQk+n/Ot/9FXv1UcfMcmRLJ5vvtuGT0nSsmFkboSuLQQ5zHlk5vGZuVVmbjVt2rTJDEWSJElaZgw7abi+di2i/r+hll8DrN+ot14taytfr0d52zwkSZIk9WHYScMZQOcJSHsCpzfK96hPUdoWuLV2MTob2DEi1qg3QO8InF2H3RYR29anJu3RNa1e85AkSZLUh6V2T0NEfBWYATw2IuZRnoJ0BPD1iNgbuBrYtVY/E3gpMAe4E3gzQGbOj4hDgQtrvY9kZufm6rdTntC0CvD9+kfLPCRJkiT1YaklDZm5+xiDXtijbgL7jzGdE4ETe5RfBGzeo/zmXvOQJEmS1J9hd0+SJEmSNOJMGiRJkiS1MmmQJEmS1MqkQZIkSVIrkwZJkiRJrUwaJEmSJLUa6JGrEfEU4DXABsBKzWGZ+ZYJjEuSJEnSiOg7aYiIlwHfBH4NPJPyA2tPBh4B/GRSopMkSZI0dIN0T/oI8OHM3A64B3gTMB34ITB7wiOTJEmSNBIGSRo2Ab5WX98HrJqZd1OSiXdNdGCSJEmSRsMgScPtwMr19bXARvX1VGCNiQxKkiRJ0ugY5EboC4DnAJcD3wM+ERFbAK8EfjEJsUmSJEkaAYMkDf8PeFR9fQjwaODVwB/rMEmSJEnLob6Thsy8qvH6TmC/SYlIkiRJ0kjp+56GiLgqItaazGAkSZIkjZ5BboSeDkyZpDgkSZIkjahBkgaAnJQoJEmSJI2sQW6EBvh2RNzba0BmvmAC4pEkSZI0YgZNGn4B3DEZgUiSJEkaTYMkDQkcmZk3TFYwkqRF7XT44cMOoafvf+ADfdV73kGHTnIki+dHhx40bp2t/+PDSyGSxfPLjx887BAkPYwMck9DTFoUkiRJkkbWIEnDh7FrkiRJkvSwM8iPu41uG60kSZKkSTPQjdAR8WZgd2ADYKXmsMx80gTGJUmSJGlEDPKL0P8JfAL4FeWH3r4DXAqsCZw4GcFJkiRJGr5B7ml4G7BPZr4fuA/4TGa+gpJIPHEygpMkSZI0fIMkDesBv6yv7wJWq6+/Crx6IoOSJEmSNDoGuafhOuCxwF+Aq4HtgN8AG1F+w0GSJI2QLd4xmr/lcMlnfLaKtKwZpKXhXOAV9fUJwFERcR7wNeBbEx2YJEmSpNEwSEvDPtQkIzM/FxG3ANsD3wQ+PwmxSZIkSRoBg/xOw4PAg433X6O0MkiSJElajvWdNETEq9qGZ6ZdlCRJkqTl0CDdk77RMiyBKUsYiyRJkqQRNNAvQgOPz8wbJiUSSZIkSSNpkKcngY9WlSRJkh52Bm1p2K8+NekfwN+A32TmdRMfliRJkqRRMUjS8BfgLcCKwGOAVYGMiO8Dr8/M2yYhPkmSJElD1nf3pMycXv/WzcxHAasDOwEbAx+brAAlSZIkDdeg9zQ8JDNvy8wfAG+nJA+SJEmSlkOD3tOwiMw8B3jiBMQiSZIkaQQN8uNuO7QMzsz8yQTEI0mSJGnEDNLSMJvyyNXoMcwfd5MkSZKWU4Pe07A5MK3H39pLEkREvDsiLouISyPiqxGxckRsGBEXRMSciPhaRKxU6z6ivp9Th09vTOf9tfwPEfGSRvnMWjYnIg5YklglSZKkh5tBk4abM7Pn3+IGEBHrAv8ObJWZm1NaLHYDPgocnZkbAbcAe9dR9gZuqeVH13pExKZ1vM2AmcBnI2JKREwBjqXcrL0psHutK0mSJKkPi/30pAk2FVglIqZSfv/hWuAFwDfq8JOBXerrnet76vAXRkTU8tMy857M/DMwB9i6/s3JzKsy817gtFpXkiRJUh8GSRqy/k2ozLwG+Djlx+OuBW4FfgX8PTPvr9XmAevW1+sCf63j3l/rr9Us7xpnrPJFRMQ+EXFRRFx04403LvmHkyRJkpYDgyQNAVwVEbf1+lvcACJiDcqV/w2BJwCPpHQvWuoy8/jM3Cozt5o2bdowQpAkSZJGziBPT3rzJMXwIuDPmXkjQER8C9geWD0iptbWhPWAa2r9a4D1gXm1O9NjgJsb5R3NccYqlyRJkjSOvpOGzDx5/FqL5S/AthGxKnAX8ELgIuA84DWUexD2BE6v9c+o739Rh5+bmRkRZwBfiYijKC0WGwO/pLSQbBwRG1KShd2A10/SZ5EkSZKWOwP9InRErEw54e48fehy4KuZedfiBpCZF0TEN4CLgfuBXwPHA98DTouIw2rZCXWUE4AvRcQcYD4lCSAzL4uIr9eY7gf2z8wHatzvAM6mPJnpxMy8bHHjlSRJkh5uBvlF6C2B7wKrAL+rxW8BDo+Il2XmxYsbRGYeDBzcVXwV5clH3XXvBl47xnQOBw7vUX4mcObixidJkiQ9nA1yI/TxwE+B9TJzh8zcgXKvwI/rMEmSJEnLoUG6J20G7JGZ/+gUZOY/IuIjlHsQJEmSJC2HBmlpuIJyg3G3dYA/Tkw4kiRJkkbNIC0NHwSOqS0L59eybWv5ARGxZqdiZs6fuBAlSZIkDdMgScP/1f9fYcEvQ0f9f3rjfVKeUiRJkiRpOTBI0vD8SYtCkiRJ0sga5MfdfjSZgUiSJEkaTQP9uBtARDwB2ABYqVmemT+eqKAkSZIkjY5BftztCZT7GXag3LfQuX+hw/sYJEmSpOXQII9c/STwALApcCfwXMovM/8emDnxoUmSJEkaBYN0T3oe8LLMvCIiErgxM38WEfcAhwKzJiVCSZIkSUM1SEvDKsBN9fV8YO36+nLg6RMZlCRJkqTRMegvQj+1vv4NsG9EPBHYH7hmogOTJEmSNBoG6Z70KeDx9fVHgLOA1wP3AHtMcFySJEmSRsQgv9NwauP1xRExndLy8JfMvGms8SRJkiQt2/rqnhQR+0XEaRGxZ+c9cCnwTeDNkxifJEmSpCEbt6UhIt4AHAmcDRwRERsC7wY+RvlthoMi4k+Z+a1JjVSSJEnSUPTTPWk/YL/M/FJEPAv4BbB/Zn4eICKuBd4BmDRIkiRJy6F+uidtCvwcIDMvBB4Ezm8M/xE+clWSJElabvWTNKxM+QXojnuA2xvv7wRWnMigJEmSJI2OfpKGvwHTG+/3Bq5rvN8YmDtxIUmSJEkaJf0kDecDr+q8ycyvZ2az5eHNLNxdSZIkSdJypJ8bod80zvADgb9PQCySJEmSRtC4SUNm5jjD501cOJIkSZJGTV8/7iZJkiTp4cukQZIkSVIrkwZJkiRJrUwaJEmSJLUyaZAkSZLUyqRBkiRJUiuTBkmSJEmtTBokSZIktTJpkCRJktTKpEGSJElSK5MGSZIkSa1MGiRJkiS1MmmQJEmS1MqkQZIkSVIrkwZJkiRJrUwaJEmSJLUyaZAkSZLUyqRBkiRJUiuTBkmSJEmtRiJpiIjVI+IbEXFFRPw+IraLiDUjYlZEXFn/r1HrRkQcExFzIuK3EbFlYzp71vpXRsSejfJnRsTv6jjHREQM43NKkiRJy6KRSBqATwFnZeZTgS2A3wMHAOdk5sbAOfU9wE7AxvVvH+A4gIhYEzgY2AbYGji4k2jUOm9rjDdzKXwmSZIkabkw9KQhIh4D7ACcAJCZ92bm34GdgZNrtZOBXerrnYFTsjgfWD0i1gFeAszKzPmZeQswC5hZh62WmednZgKnNKYlSZIkaRxThx0AsCFwI/DFiNgC+BXwTuBxmXltrXMd8Lj6el3gr43x59WytvJ5PcoXERH7UFov2GCDDRb/E0mSpCW22d4HDTuEni474dC+6m3+hgMnOZLFc+mp/zXsELQMGnpLAyVx2RI4LjOfAfyDBV2RAKgtBDnZgWTm8Zm5VWZuNW3atMmenSRJkrRMGIWkYR4wLzMvqO+/QUkirq9di6j/b6jDrwHWb4y/Xi1rK1+vR7kkSZKkPgw9acjM64C/RsQmteiFwOXAGUDnCUh7AqfX12cAe9SnKG0L3Fq7MZ0N7BgRa9QboHcEzq7DbouIbetTk/ZoTEuSJEnSOEbhngaAfwNOjYiVgKuAN1MSmq9HxN7A1cCute6ZwEuBOcCdtS6ZOT8iDgUurPU+kpnz6+u3AycBqwDfr3+SJEmS+jASSUNm/gbYqsegF/aom8D+Y0znRODEHuUXAZsvYZiSJEnSw9LQuydJkiRJGm0mDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkViYNkiRJklqZNEiSJElqZdIgSZIkqZVJgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSplUmDJEmSpFYmDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkViYNkiRJklqZNEiSJElqZdIgSZIkqZVJgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSplUmDJEmSpFYmDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkViYNkiRJklqZNEiSJElqZdIgSZIkqZVJgyRJkqRWU4cdgCRJkkbPFq8+YNgh9HTJN48YdggPS7Y0SJIkSWpl0iBJkiSplUmDJEmSpFbe0yBJkqTlzpYve8+wQ+jp4u99YtghLBZbGiRJkiS1MmmQJEmS1MqkQZIkSVIrkwZJkiRJrUwaJEmSJLUamaQhIqZExK8j4rv1/YYRcUFEzImIr0XESrX8EfX9nDp8emMa76/lf4iIlzTKZ9ayORExmj9vKEmSJI2okUkagHcCv2+8/yhwdGZuBNwC7F3L9wZuqeVH13pExKbAbsBmwEzgszURmQIcC+wEbArsXutKkiRJ6sNIJA0RsR7wMuAL9X0ALwC+UaucDOxSX+9c31OHv7DW3xk4LTPvycw/A3OArevfnMy8KjPvBU6rdSVJkiT1YSSSBuCTwHuBB+v7tYC/Z+b99f08YN36el3grwB1+K21/kPlXeOMVb6IiNgnIi6KiItuvPHGJf1MkiRJ0nJh6ElDRLwcuCEzfzXsWDLz+MzcKjO3mjZt2rDDkSRJkkbC1GEHAGwPvCIiXgqsDKwGfApYPSKm1taE9YBrav1rgPWBeRExFXgMcHOjvKM5zljlkiRJksYx9JaGzHx/Zq6XmdMpNzKfm5lvAM4DXlOr7QmcXl+fUd9Th5+bmVnLd6tPV9oQ2Bj4JXAhsHF9GtNKdR5nLIWPJkmSJC0XRqGlYSzvA06LiMOAXwMn1PITgC9FxBxgPiUJIDMvi4ivA5cD9wP7Z+YDABHxDuBsYApwYmZetlQ/iSRJkrQMG6mkITNnA7Pr66soTz7qrnM38Noxxj8cOLxH+ZnAmRMYqiRJkvSwMfTuSZIkSZJGm0mDJEmSpFYmDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkViYNkiRJklqZNEiSJElqZdIgSZIkqZVJgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSplUmDJEmSpFYmDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkViYNkiRJklqZNEiSJElqZdIgSZIkqZVJgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSplUmDJEmSpFYmDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkViYNkiRJklqZNEiSJElqZdIgSZIkqZVJgyRJkqRWJg2SJEmSWpk0SJIkSWpl0iBJkiSplUmDJEmSpFYmDZIkSZJamTRIkiRJamXSIEmSJKmVSYMkSZKkVkNPGiJi/Yg4LyIuj4jLIuKdtXzNiJgVEVfW/2vU8oiIYyJiTkT8NiK2bExrz1r/yojYs1H+zIj4XR3nmIiIpf9JJUmSpGXT0JMG4H7gPZm5KbAtsH9EbAocAJyTmRsD59T3ADsBG9e/fYDjoCQZwMHANsDWwMGdRKPWeVtjvJlL4XNJkiRJy4WhJw2ZeW1mXlxf3w78HlgX2Bk4uVY7Gdilvt4ZOCWL84HVI2Id4CXArMycn5m3ALOAmXXYapl5fmYmcEpjWpIkSZLGEeU8ejRExHTgx8DmwF8yc/VaHsAtmbl6RHwXOCIzf1qHnQO8D5gBrJyZh9Xyg4C7gNm1/otq+XOB92Xmy3vMfx9K6wXAJsAfJuWDFo8FbprE6U824x+eZTl2MP5hM/7hWZZjB+MfNuMfrsmO/4mZOW0Sp7/Epg47gI6IeBTwTeBdmXlb87aDzMyImPTsJjOPB46f7PkARMRFmbnV0pjXZDD+4VmWYwfjHzbjH55lOXYw/mEz/uFa1uOfCEPvngQQEStSEoZTM/Nbtfj62rWI+v+GWn4NsH5j9PVqWVv5ej3KJUmSJPVh6ElD7Xp0AvD7zDyqMegMoPMEpD2B0xvle9SnKG0L3JqZ1wJnAztGxBr1BugdgbPrsNsiYts6rz0a05IkSZI0jlHonrQ98CbgdxHxm1p2IHAE8PWI2Bu4Gti1DjsTeCkwB7gTeDNAZs6PiEOBC2u9j2Tm/Pr67cBJwCrA9+vfsC2VblCTyPiHZ1mOHYx/2Ix/eJbl2MH4h834h2tZj3+JjdSN0JIkSZJGz9C7J0mSJEkabSYNkiRJklqZNEiSJElqZdIgSVVEjPQP6yzPovnjPJKkkWPSoId0vrQjYoXuMk2+iHhMRDy+vt4wIlYedkwPJxHxMuCaiNht2LEMKiIeGRGb1ddbRMQThx3ToOqPeE4ZdhxLYnk5XtbfTlpm9Fruy8u6WFY0zh8eOexYllTzHEgLG4VHri43ImJDYK3MvGjYsQwqIqJ+af8LsENErAK8JzPvGXZsg+h8jmHHsZi2ATaKiI0oP1T4piHHM7CImJqZ9w87jkFFxEsoj3o+FDg4Ih7IzP8dcliDWBP4cERcB2wG7DfkePpWH5W9RWa+IjMfiIgpmfnAsOPqV22dmgGcnpn3LuPHICLiVZTHmZ+1LHyWZow18V+V8rtPlw43ssEsC8u6TT1/eBGwV0QclZkXDzumfjTOfbYC1gCuXda2naXJbGpiPZ9yoN1m2IEMqu40LwM+AnyR8iX4/YhYv3XEEVM/x04R8emIeFNN5EZaRGwVEU8B/gi8HtgdODkz7x5uZP2LiP8EyMz7l7WrxRHxUuAw4IDMPBR4D/CxiNi1fczRkZl/BX4G7AVcmJlX1B/AXBaO8YcCT4qIkwE6icMytB29DNgJeE1ErFiPQQ9d5R71K949WpifSfktJFgGzhEaCcN+wAeAdYCLImK7oQbWp4h4TkRsvSwnDA1Pomw7r4yIHYYdTD8ayc7pwCuBMyPiDbb09zbyB4RlSWaeSDlofblzwIqIFToH44hYe5jxtYmIqZRf0X4rZcefD1wPnL4sdHVofPH9E3AQcDvwDOCAekI+kmqLzgbAbcBNwKcov3r+tGbyWdfPKHtDRPwQFpz0wTJxwrQxcDTwpcz8Sb3qdCblSv1HRz1x6Fq+v6AkPDMiYp8sHoyIVYcUXquIWDEiHp+Z91L21adFxJehbEOd1oaa/K8xzFjH8RXgx5QfKn1dI3Ho7LOPGl5o42ucrD4/Ih4NXEE59rMstPjU5Hhj4MWU77B/UBLoCxp1Rvlc5xnAd+qV7oeM+rGzKSI2q8eZWcCfKC1VL4qIbYcb2fgiYlPKhbo3ZebbgX0oF19eNMy4RtUo70jLhIjYKCLeGBEHRcSTMvPzwMHAlyLi2Zn5YP3ingGcNIpX7uuJ9nOA91GShQOBnTNzd2Bt4JhRz7rrl/SzKV/gh2bmgcDJwF+B90TEU4caYA8R8RzgdcBfgCnA9yhf2AdSupv8S0RMj4gdgZG+apOZ/wzcHxHn1vcPRMTKjauA6w41wLE9CHwXeFREbN+JNzPPoiQOh0XEyHYTq9v9jIg4gLLNnAq8C3hbROwWEU+mdLcaqcQhIo4FTgFmRcThwHrAs4CnRsRXGvVmA9tn5i1DCXQMEfGkiNgzIvYCtszMk4CfA9sBu0XEKrXVbUfgNxGx5qiduHa1hjwG+CDlosV+wEci4t8i4q0R8c8xYg8IaMZe99m5wMXAJ4BdgZn1e/ddEbFOZj44nEjHFhHPi4hnZOanKS38p0bEs+qwKY1j55OHGed4IuIRwDuBY4GrgTOBa+vg3SJi+2HF1qZe0J1CSRC2pVy0WKke+08B3ls/mxpG6iC2rImIzYFvA5tQrhYcERFHUK4Ufwg4OcoNrc+kfJl/oXYjGBlRbnh7FfC82h3mduBvwFNq3GcDH1tGuspcDjye2p87My8BvgPcCLxvlE6cImIm8BnKSeujKFdm/o/SVeMJwFGUROITwEmU5GekRMR+EbFvRLy7HmxnAv+IiPMAOttMRHyTEbtqExGr1C/mP1GW9SOBVzSvjNUvj/+gJJ2PHlKoPTVacp4HHEeJ/93A+4H7KF/iH6Aci36UmXcOKdRFROmGtC5wAOWq3jrAfwJbUb68N4uIL0bEN4C/Zea+dbyRuPJaL7KcDWwOvJxyL8kpmXkqJXHYlnJf2Isp+/iBmTl/1E5cGyelW1PuA3gxpaX5AOAGSgvoM4D3AiPVdaYR++tqq9p9wHTKxa9XZeZ9tZVwL2CloQU6hohYCzgN+HREbJGZn6MkbF+OiG0arWxvBY6OiNWHGO6YImLzet/jfwH3AJ+jbEtzKdv+nZQW9JHROI48qi7nA4EvA0+h7LtQugr/fQjhjb7M9G8x/oDVgZ8CuzfKZgBHAEfW9/tSTlhvAl7ZOc4NO/ZGvCvU/08D/gC8hHKiegjliv08yhWbocc6RvxR/z8J2LS+fhRlhz+2Ue9pwEbDjrcRz/OAOcA2XeUzKC0P/0e5mTWALYAnDjvmHp/hy8APKFe1f0pJbGbWYWcCZ9bX3wK+Nex4/397dx6v61i2cfx3bNuYoRQikQZTyVwq0WROkVm9hhTKUBGVoUG8KZEioSRplqFJSCih0GioDJV5LJm22fH+cV4Pj9Xe+xV77/teax3fz2d/9lrPc6+9r7XW/dzPfV7XeZ7XiLGv387vnwCfbj/3OYAD2ut3lRHHP6PrMQ+N5blDH78EOA3YqH2+FBUofKR9Pj/wkq7HPGL8ywI/G/HYAtTq7Ofb57MAfwN+MnTMhK7H3sYxD3ARsF37fCYqYPs18I322LbUDeG91A1sr677wz/Tdr08tZ33Cw899xlqBQVg7q7HOvI8oJq4PBv4cztXNm2v4TOomrxvAr8FXtb1mKfwfcxOrYRfC3wVWL49/p72/rUolTJzDdUkoPMxT+Z7eD7wIPDV9vki7Tz6I/D99ticXY9zCmNfGzirnSv7t8c+Afy8PXY+sEHX4+zjn84HMFr/ULNjpwNzAzMNPf5aamlrifb5lsCa7ePevHEAS1OzMIu0z7cBPtE+fm67IPTyYjXi+9igvWGfA3yZKsKaA7gEOKbr8U1hzO8H3jfisc9QecT7AW8FfgGs1PVYpzL+Hw99PjM1I3/04E26XZAfBb49dFznN37t/Pgz1bTgre28v5VabRsEDvsDrx36ml68bqkb1MOGri2va+f+ScDs7bGVqJvaBbse7xS+hxdQq38TqOBgcBO4AHAhj0+uTBj6ms7Pm6GxPIfqkjT4fOb29+xUEPqq9nrYdnAO9eX8mcz3MtfQ7+Tb1E3Tou2xbwD79u3nPzT2wfn+AWo19pvAVu1n/ypqYmDRrsc5mXFr6OPFqRvUE6gi3OHA4R7gBuDlXY95KuN/NjVhNAn4bntsEeBEapZ+jj6e+1Sh/2VU4PCydg39cnvuo+21sHHX4+zrn6Qn/ZckzdZyU+8D7gdmc+Vvzwxg+1wq+n5b+/xbts/oy9L6kJWB5YAfSnojtfz8Yknz2b7Z9nWu9J7ekvQc6mZ1W+rnfToVRCxK1QCs0Qq0evGzHxrHi4D5hh5fhwrUNgDe0T4+llaM2EMzAWcDSJrTlRpwJLU8vT2A7TcAu7jqYpA0wR2nZ7SUnncAu9k+2/YPXLnoW1L5uCtQqT5zUMXEs8ETCkU75VpK351KAfui7XOoNKTbqPxbUW/Wpmepp6oOYXNQ58gywHquAmhLmsP2LVSq56AA99H2der6vGnjGNR03QnM12oVcKXBTLR9H3WT98L2evhaey/oJVWThYNaHd4/qHq2ZYG9JS0AHAUcD4//Lro0uHaqvAq4RdVY5M/U9fTLVKDwPtsX2P6R7Wu6G/F/UnXouUDSppJeYPsK4A/URNE5wAGSlrP9Jeo69Ubbf+puxP/JtiWtLOkttv9JpSC9EZhX0om2r6WCnnVtT+rLDogdRwAAIABJREFUtXOEicDPbZ9m+1Lbg5TIN1GpqtdSRdwr9+XeoU969cbSdy2X9UBgSdv/poKGQbePh4aKZi4E/qUqzKU9765eQO1CO7joLiFpcdvH2X4/9SLZkIq+t6Bmm0aL2YHZgDts/4u6kX2QuiG5g3oDv6wvF66hcZwCvFLSCu3zM4F32b4A+Ap143e8+1f/soOqS8mc1IwStu9pN033UF2IXj7I/7f9xfZ1nQcMzczUuB/r7NTqGs6kzvvX276eumE60j2q4xl681qGum4vI+mztn9DzbKuSqVjHEnNEN/QzUj/k6RjgN2AZ9m+iaq72FfSOu2yOKi3WIPK8d5taBKm89euqonCkZKWbgHBWcDKasX9fnxfkkuAmSS9fnjcPfkeRr7Xm5rNfm8LHK6lCqE3AzYBftOCiV4Y+hk+e+g6eTbwe+r3cSVwDHX9mbdvN3uqDoQrUQX/WwHfVhUILwR81PbnqA5cn5f0ctun2P5LdyOeqqWBfVrgvCDwDttrUHWQP7J9q+3zoR91SPrPzoOPUEHBcHOOc6hUqnuo1ebbgGv78NrtmwQNT5KqLdc3qFz0qwBsbwY8KulMVevMRyQtSy1xfYieFH8OAhbVPgynAHtIukjS82x/nSq+/RKV23pSl2N9MtTaL7ab6rOp72eBNvPxO2DhdqHo6wv+11RLwM1V/bkfcm0KtQVVWHmhe9bqUNKRwMZUkfwJwAaStm1PDwKCu6nZ1pUkvXDwtV0HDJIWbqtSE6k84iUkzdPeEAbnyF1UHQm2/2r7tm5GO3nt9ftaagVqNirAX0a1idIvqTbDv6bOndOhN2/YR1EpnNsMBTInAl8AviJpb1UXolOo2q9jqfSfh7oZ8RNJWoJKV/gNde5DrYi8gtrE6rXtuFWpCaV3Ua+TXhlauXmVqoHH74AjgIeBXVTdkeajVmt/2FaBeqVNwh0jaUXbuwE/pdJMNgEWcjUu2NFVdN6ba79qH5h9qaYEh1IpPRdSKZKPAutKWtX2gVSNUq86hQ1IWlHSQraPo9Ikd6PuhSYA2F6Geg08psvfQzuncXUxW0/S5yVtSQX3R1GrPmuqNrRdn1awbfsuKpDr60p/p9Sj11ZvtaXpb1MFnce3N+NZqZnue6kTcGHqBuTZwN7tAtapFkkfaXt91S7DP6Ty+FagAqA/AVsOZpQGM8ItJaA3J0ZbLl/J9k9UqTy7Uas8H6IKE9dqf46lZjHf3WaPe6v9brYD3kDNlt1H3WxsYPvyLsc2kqSPU7m1bxt6bD1qZvJIqujt3nbjtxRVI7CZ7Rsn9+/NSJLeyuPdYOajXrO/pG44ft1WDGkB0KrUTUcvbliHtdfv4VSx7TfaYwtTdSTX2t5R1a1nC+BS4HNdv4ZV7aW/aPst7fOlqaYFC1E3rZOo1MKHgXtt79/VWCdHlU71A+Bk20cMrouSnkHNsO5EdRe6l7r+f6gP1/1hw9dySTtRnZDOo96n3kKlQu5EXYdmoV63f+5ouP8vSZ+gVsX3sf0HSbsBn6UK6ffv+pwfqc3GfwrYyfavJS1E1VFNpNprn94+P6PPP3cASUdTqwyb2L5J0tZUOurLgK1tn9LpAIe0lbWLqXN9f+p1fDbVtGAilea5MVWDOh/V2fIn3Yx2dEnQ8CS0N4nvUYXCF0ranZppWozqOrQNdRGeG3jE9t+H3mA6vQGXdB71pvZWqojvpVQO5erUTfZKwBrDY+5qrJOjykN/O7Xr6q+ovP+9qdml+alc1r9QM/RzApfaPqub0f532urUClRaxg3AObav7HZUT9Quvl8AzrJ9kmq/kZdRNTFzUTfap1M3Hzfa3lrVo/6+rsY8IOn1VEC/BdVh5VlUCsOzqTeQf1Jtep8N7EIF0L3JIR66hkygWgHuS81MvsNt34J2Y/41YAcqF3c14JI+zJK11+43qbzz26hdk+emZuznB/a0/dsRX9OXVLbBuX8YddN3I9UAYDmqmP7TVMD8MNU+9mHb/+jLdR/qfcv2ve3j1YDNqRvrG9vK4VJUx7P7JL0cuL0Pgf5IqvqLB23/XtL/Au+kXr+fboHDXsApPZxsWYtaub/c9spDjz+XCpYXAE6wfV5HQ3xShq/nqv1VXgy80/YNbZb+M8C2tn/d5ThHUtW8nENNTuxr+6eSlqPSseej9nO6SdKsth/ow2t2NEjQ8CRJ2pF6Y55IvTmf1f58ELjYlZPYG8NvvpJOo7pNrC5pF2B+2/tK2piaLd7G9h+6HO/kDL0Bz0ctH65KdfLYpj2/NzXz8RXbZ3c30rGtzShtQe0VsRyVqjGp/XkOdQM11+BNuy83fu38uNP24aqN5u5vM33fo+objgA2olYhDrV9aYfDfYKhc//NVIC/NxXgb0KlgR0ytEoyq6tXeu+01Y+3U0HPAcAFtq+SdAhwtu0fdTrAKRj6+R9NNVZ4PpWKcTaVBvZ14LOuzTx7R1WHsRqVjjcHFdjfQ93s/aMdcwR1br1iEFz0wYjVkfmoYPmf1H5IE21v2gKFV1N7YPQm0B9Q1SscRd0z7A/82/aGQ88vAGxNFXGf0NeVcUnLUIXOPxlMaLXXxHxUsHC57Tvb47246R5x/jyTqvX60+Dn376nLamgbRfgvj68X40WCRqmYuSLQNW1YRnqpuNeV/HzXsAk24d2Nc4pmUzgMJFKcViTyt97E9Vt4qLuRjl5LSVsVdtnSlqMeoOYk0rpOcj2Ce24T1C/k+3cs11jxwpJc1MrPZtQN9p/sn2rajfcF9veZ+jYzt84hm74vgTcYvvjkkQFnI+0NJnDqZQ2qFni3l0IW2rDp6l0x1PbY6+nUgwnAAcMAoe+G571bp+fDnzP9jEdDmuq2uz7LdTN6qJULc8E25Pa5Itsf6HLMU6Jqm7hRurG6A5qVfCLVE3b8bbvbscdAnzBPSl6HnHDN3tbBXkelU7yRmCHwYy2pI9SbbV7U/QPjwVsb6XaUl/WHvsNcIOfmOK5ILX6803bt3Yy2P9HW6HalUrpPNX2Ve3x06ig9DJge9u/726Ujxu69q8LLGX7YFU92++BE13NXwav7UmD7yeevAQNUzB08r2eyvf8A/B7238bOmZ5amOW3fuaEjMicDiZygfdk+plfY7tk7sc35RImpdahl6XmtVYi0qz2pSacT3d9knt2Be5dvaN6WgyQfQJwBW29+5wWFOkaiX8YeDDtn/b0k1molJjDgO2cnXL6IV2zj86tIKwH5VqdMLQEvoEan+GDYDDXW0be0HSJ6ki5ouHHhu+CZyZShE7gloB2q6bkT457YZ6Uapn+/B5/2qqe89OfVrhnMzr85nUTr3/prrkLUCd9ydStTF3djLQJ0FVq7AyVTtyALXh2XuoAOhXfU3paa/h3almBR8c8fv4NZXCORw4zOQeNb0Yuu95CXCr7TtbAPphqg7paKp+54j22B1UyvMP+zJb39LCDgHe42oSgap5yrnA+ba373J8o126J01Be+GsQ11kr6AuBFtLmknSPC1l47tUlX0vAwaorhntRoO2PHcRdbP0Ptsn6z9b8fWCq4XqTcCSwD9s39je5E6jvocNJG3ejk3AMAO018Sskl4o6SfAXYOAoc3k982gS9Vmklay/airyPk11M3ryFZ8nWmzk2dQrTznbA8vQo2VofSjpandSvftWcBwNDUhMWn4mjJiBWdhKh3g34OAoU/Xn8mcwwdQ16AXtuefL+nd1ETRnn0KGJpBK+GJAC34/Hp7fBdq1WRnajJm056+ZpG0FTVJtBW1r8cOrj0Xvk29JlZv16HejH9oLHdQtXf3Ax8fei3j2g9gfklnDj3Wm4ABHrvGvxn4FvAxSQdTWQkHUCv6n6J2O/+07QtbytKP+xAwqMxCpYR9wvYvVV2TPkHV4b0GWEfS0n267ow2+cFNgapzxquoZcarqZmDo9qLfA7geqpLz4/6dPGanBGBw0bAA5J2HTzX6eCmQNIi1IzwDsAVkr6s2kjsOipo+CXVOi1mrAnAy4E/Dt/49TG9p6XDfJlaoTpY0oFt9v7jwPv7ktrTZvW+S9Xm/Gxo9eMAasPFXdtxr6a6gCzZp1liSR8Dnmt7XduXt+vNHJM59BpqdeRd7ev6UvuyiKTXDFaWJW3VVi//SdW+bAWPtXi+i9pT5cd9uu63FIyrJM3rajE5C0BL5TmJes/aiaoNeDvVracXr9nJ/BxnpTrjvZ8q/N+yvX/9DTiIep080JfxNzO1v2X7p1RnwnWA3STNMzjI9qrUhoYLdzDG/5eklalGKRtQHf3eRNUu3E11qVoI2MP26YPfmx/fp6RTLg9SKwqbSfo59Tt4NtXx6U5q76bL+3DdGa2SnjQZkt5AXQRWoV40s1JL1NerWk1C5feNqh+eHm+p+hEqN/eArsc0JZJ2AFa3vaWq3eRu1A3rCVRR9CGuDYliBhteUu/Ljd/UqLpUrUTNXt4O/NT2X7sdVWk3Q3tTdRWfarPEC1EzY3dSmxUeTt1wL0WlWvWqNaCkPajaka+3lLCVqdnsb1BFnv/RSnJkKk0X2k3PXFQHvDup9pF3UWkXD1INL35IbVq4Vd9XNFWdbA4CXmX7Dkkzt5U1VPsHvZv6ng7uywz3iPS15VzdkHYFdqTSgd/entuVWvHZvS9jH2gB28VUQfmtqmYLJwB/pFLDHqaK5u/qcJhTNOJ38GoqWJiPWlXYjZq4mw3Yg6rLuL8Pr194QjrVK6hUwuuoAOe51DXpUkmrU2l6b6E2gu31+1XfZaVhBFVl/c7UjMyPqN0Dj28BwypUrtx9fXjB/LdawDAr9UbZq1qGwUrIYIbS1ZVkPknvchUrHUpdzI4AzkzA0J3hN+3RcAG2fZ/tc23vY/vQvgQM8NjP7xZqh/DnAQdTM3tHAB+gGgCsRt3IvrVPAYOkt7QP7wTWl/Q1avzzUUW3y1M7DP+HPlw/28zkXVTL2uuAvahdqzcH3kd1TNqWSrtaDvqVTjWSqxPVB4CLJT3L1ahjlvb0ROom9ti+3HSPuFl9L3Bym9A6jFrJf7CtAu1ABXRH9WXsw2zfTqV/naXK/z8e+Jbt91Iph7NTqT5zdTjMKWo33a+RtJbt811FzWsAu9r+BfXa+De1Y/L9g6/pcMiPaWNfk2pOszxVa7Qm8PcWMLyBupb+r+1/job3q77LSkPTZp0WoGb0vmF7uzaDsAnVtWFuKl1mX/e0TeCTJWliX5YUVT2r5wD+ReWZbw5cZ/sbkjailhMPGj7e9s19memIeKqGZskWpyYqNqS6fHyJ6kqyPLBWu/noFVXR897UysdnJL2N2nPkx8Df2ozrK6mbqXcNbjb6YsQs/FpUOsZPqSDh27a/1557NvA/1Cz9a121Vr2mqsU7nNoQ8w5JO1NB0OttX9/t6P6Tat+j9agVnc2oWfvDqD1VHqSC0L3ds30YRpK0NnAq1Qb2wPbYTFS2wmuBz7tnO823IHg24B9UGvbnbH9PVaO0MNW97TCqLfvvOhvoCEPXzpmp/aa+40oZXIFapbqYmgzYBbjM9mm5Z5g2xn3QMHTyzePqFLA9dcFd1bWR22zUTpmLAve4p5ugjUaq4s/jqVmMv1G55+dRs6onAc+kNm3bxq0tbH72MRZM7jyWtLxrA6tBGuFG1MaRm1PtAXtz3qs6xx1KvWYvsf2hyRxzAtXEYI8ZPb6padedvahZ97PbhNE3qRunC6m2zl+zfeLQ1xxHFVf+bTL/ZO+0wOHT1I3Tu4Et3LO9eNrPfRZaGpjtd7c0kz2pDkmHtuPmsD2pw6E+aap9SQ4DXumhuqO+fQ8jrz8t/WsFatL097ZPaSuHc1A35Cd1M9InUm20+1zbV7dVnX9Qe03dS7Viv7+tLnyKCtTknu5hM1r1pntIF4YChlcCe0v6rO2j2+zAGZLWtH0h1QnhsaLbPr15j1aqXvnfpHImr6TyDV9q+0RJF1BtJWelchM3k/RH4KH87GO0G7rurM/j5/nuLS1gkEb4RuCj1Ex+bzbeGnIDle5yMbCkpMNs7wIgaUVqQ67bBwFDz4L9+YF3AC9V7Yz8KPARagPD31AzrztJol2PVqRqYnqxOvtkuHa/nUCl2C5v+49dj2lyXG2Elwd+KemjtvdT7fq8n6rxxf5UWuqoYPtnkj4AXCjpVYOVqT4FDPBYWs+qVO3mJcAvqKYvlwCrtdfrNurfbskLAgdJ+jNVc/oeavO2V1LdkX5OdTz7JzCr234kMe30Nj9zRmgvnHWome3nAcdIerXtL1E7PV+g6iYQ0968wLK2z25L5mcBL5K0kKu96rdsfxx4L9UHevaeXLQinpZ23VmP6lJyDBU4nKpq6TlrS3P4LLCPqxNLL0j6rKSPqArhbwXOoXLNTwdmUu1rAFUzdb6f2CWpN69dV+/21ah2zjdSBbbfoa41CwPfp7puXdO+5BrgDR5ldVSu+pc5+xgwtPN/2XYu3UhtWLiepE1bGszHqNa2o26Srr1m9wTOlDShraj0Squv+ArVte1oamL0KmoC72pgDUkLDmbp+/I7cNU3/oFKtzvLVZ/2E6quaitJP6baxR6TgGH6GJfpSUMzfc+nchC3cW3+tA9Vv7Cv7V+pirOusn1GpwMeo9rN0RG2XyhpQ2rWYGPbd+mJm9KdThXB9WKJNOLpUHVIOpjqob8gdYNxA7A48DbgHmBe21f2ZYavXSsHN9F7tb9PolIArgZuo/ayecj2DkNf19vuWq2W4VCqhfDy1I3rebZ/rlb31efxjyZD77mDvw+mOoTtDgza9L4XeKbt/+12tNNGWynp0+aRI38Hr6RqSFYBjmofn0pdl+ZxtRjuheHrYLtvWIZaGTzQj9cfLQE8g+pE96e+XDvHmnGVnqRqveiW97YAtYR1KW3Z2fb+khYDjpW0ge0j2tfl5JsOXMVJO0u6B/gLsJrtSe3nPdhbYn6qz3LvZssi/luSlqIaLnyIChgOA9ZzFazeAHwe2Ny1R0CfZviuk/RSqhvM4lRq4Xep95Czbe8q6XAqL3r463p7w+3qNf9Bqqf+Kq4atpnbc4P3hN6OfzQZOo/fSHW/2121Z8qBVGrYJcBDVKrbTNTO6L0495+qPgUM8NgK5xrAayXdSa2ufZ9Kj3y+7XWHDu9Ne9gRQc7i1IrI56h7t09J+he1QrKZ7f0GXzfaz5++GjfpSe0GdCXgQ5I2pS5Wz6d2cFxF0nzt0OOopa6vDL2B5OSbTmyfStUzPHco73Om9tyjtm+mun70ukd6xP+nXU/eRu0/cj/VT/xGYPGWN38arZivw2FOkWu/hfWpTkPzUGlVXwT+pmrl/AfbX4He7hD+H1oKzweoDSSf5dZRKaaNwXkgaab2Hvw1Sd8FsP1RKtVkv1bXcBWVkvdI3nOnPdUeDIdRxcPrUx3bZqaK5V8h6YB23ExT+Cc60QKGtakdwZen9lzYm2oFuw/VUvWnVH1VTGfjKj1J0jOpfLdXAlu7WnS9hqppuIpq77Ym1WJvD+Djtv/e1XjHk3ZR+DqwhO07uh5PxLSkxzsiLUPN7u0KnEkVDC9O5di/y/ZpHQ7zSVF1uDmD2lX7axra7G+0ajn299o+p+uxjEWSlrD91xZcXkR13Bps3HYO1f1mQ9eOvjGNqdo6fxS4yPbnVbtUf5iqedmlvaYf6Gn9y6xUGuEpbXVwBapo+1bbX2zZIbN5MptIxrQ3LlYahma97qHyb38OvFnS/LbPo2aafk3N/G1FpcOsRF3IYgZoN0vbAMt2PJSIaUrVKWwrSYvYvoRqB/jqdqN9JJWqtN5oCBgAXB3l3gQcIql3O/Q+FbZ/Yvuc0bJC0nfDP0dJiwCnS9q2Fda+Elhe0pGSXgc8AHwoAcN09QKqhfkbJb3I1Q52P+A1khazfWGfAobh86edMxOAtVuq0u+oLmdbqFrl/z0Bw4wz5oOGoXy4DahZvQ9Sy3KTqA4lUPl7t7jauz2L6miyuatDSMwgtk/NG3eMQStTOwr/UNVK1cCLJc1n+2bb1/XpDfvJsH0xtYfKS7oey7SUtJhpY6hodRFX16mdgV0kbe3aoX1pakX/GGrn4Us7HO6YM5QW9iJJCwG/pLInrgE2aUXDC1PpSb0J+odTwtvYBzVSx1HjHOww/3dqf6depVKNB+MiPaktPX+S2qnxtPaCWozq1vNqKlDY3tUxaU7gObb/0dmAI2JUGrxZtze9JdqHV7TntgJeQe0LsDNwpHu42/NTkWYRMay9Dl5EpeDt3FKB1+XxwuebgEOA92SWePpoKb+fo/YxWJ6qY5gfeD+wBHALcKh7sltyqyt9B9Vk4WXUKux9VDrbXlTt45pUPdWCVPp4OirOYGM+aGjFV4cCPwZ+T7UXW5+qbbgEWAe4zvYvxkJubkR0r01UfBb4FbXKsIHtG1rXtnmBg6g37DM7HGbEdDFUw/M/1Aaee9s+td3IfpNqNrKOq89+TGOSFgZOpDaN/JWkPamVnTWB5wA7UE0YPu+ebB4paSVgR6pQe0XgI7b/IukM6l5tP2qVdlngtvZc58HOeDMmg4aRJ5KkT1KR9QLUJmKLA/f4if3Ec/JFxFMi6XnUysH6kl4M/JDq+78C8A2qreeWgxXMoZuqXHdiTJO0EZUavIdrx+Q3AtcnYJi2hq8lkuag9l7YB7i2rXweAszcCp/XBjaiWpkf1WXXMNUeMEsCf6U22d0IWBV4r+3fqVrln0jtBfPu1L50a8zVNAzVMLxO0laS3gF8gtr18D22PwHsD7ysnaxAclkj4qmzfQMwb5sVuwFYC1iaWlafD7iW2iF2scGXtK/LdSfGDEnvlPTC9vEBkk6m0klOBo6RtLbtnydgmHYkPQMeS4l8tqS5XO3LZ6M6Ug2uMRdQ6T6DxiPfBU7oOGBYgmo1vS1wHnWtPA64jCp8XsL2fVQgsRA1+RsdGlNBw1DAsCbwJWoZ7n3AV22faftySW+lWh5+2j3a8TAiRqeWAont11D1Cqe1a8tLgNPbm973qe5t87RjEyzEqDeZphULA7+V9FXq/P8clYt+IXVjeMWMHeHYJmku4DRJr29Fw2cBx0vanWrrvIWkQyXtQ606/GLwte2e6JZOBs5jKww/o/am2ZLqIvcl4HbgWKqL5QaSlm7X0DVb97no0JjYEVrSc4E5gPupPL2NgUNsf5lqC3iqpG+6+kIvAbzP9plJDYiIp6ulGU1wbUa4tqTTJJ0JHA4spdr59k3U0vofuh1txLQzlA6zHXC17f0k3UZt+rec7T9JWh3YwvZWXY51LLJ9t6RDqaLyfwLvpjY9O5vqLPRGYBMqNfv9ts/u0X3PElR61MQ2pm9JejMwX6vDmAnYFNhQ0jXUKkkfxj2ujfqgQdKS1KZgdwLXSfoBtVHbsC2Ar7cZwYMHxc49eeFExCg3mcDhZOALwJ7Aq6jZtIu6HWXEtCdpbqpm4UpJD9n+UkuZ+aGkLwOvpWa9Y/q4mbrneR0wv+0LVbs/XwBcZfvY4YN7dN9zLjA7Vfv1bkkTqa6WtwC05jQTgJv7UqwdozxoUG2a9E2qO8OV1C6Br2sf7yDpt9Q29UsCz6W6lvyzk8FGxJg2InDYUNKJwFa214XHi587HmbE0zKZmer7gO8A61GbGMr2Z9tN4MeAFWz/pYuxjnWtRupLVPv4XwH7ty6QP5B0BC0dsm/aOfKApJ9RafJbAK8HXmn7Fkmz2n7A9tndjjRGGtVBAxUELDs4sSSdRe2s+oGWankgVZS4HPAx27d3NtKIGPNGBA4bSTpZ0q62v5CAIcaCoZSk7alZ7nOpdpgTqJnj90ma2faBko60/e/uRjvmTaTSsi+yfZ6kG4HDJS1DtZP/ZKejm4JWeyrb90s6DXiI2mT3DZKOd+0CHT00qoOGlve2rqS/2X4htaIwq6Q5bR8h6RyqMHFm25f0KJcvIsao4cCBKgCdq+sxRUxLrcXwe6kOPZdTqTAPUXU8mwDbSPp1AobpQ9JywFy2z22TpftLOtj2Ca2l7dbAEa6N23q5wtkCh5naisPPqRqMDanJ4M92O7qYklEdNEC1DpO0s6R7gL8Aq9me1AKEy0ccm4AhIqa7FjjMSgUM3+h6PBHTkmujwr2pQtubqJ2GFwA2sn2wpOe0jjcxfbwZWFnSozy+J8yxkr4OLAIcBuwh6TLbZ3Q4TuAJnS1XpoqZZ7F9vu1HRqQqzUSll0dPjZnN3SS9Afi67YXb5xNtP9zxsCJiHMt1KMaa4ZlrSZsDy1CBw4m2b+p0cGOcpHlt/6t9fBq10rMvcA3V2nYJ4Keu3bc3BP5o+2+dDXiIpHWAz1ANIj4NbGL75+25QVCRbJCeG/UrDQO2z5L0Lkm3AkvYvqPrMUXE+JaAIUazyd3EtVW0WWw/aPs7kh4C1gUekHRMHZIbv2lN0kuA7SQdD6xI1Y/8DtgOONb24YNJivZ7O7nL8Q6TNB/wQWB9YAXgamoDN+DxLJCcN/03ZlYaBiStC0yyfU7XY4mIiBiNhgMGSdtSaSXz2P78ZJ5/C/Abd7hZ2Fg0NAM/BzAntQHaC4GXASvavkvSAcBSwHZ9mywdMf6PUZv7vRPY1vYVkt4GXGo7m/6NEmNqR2gA26faPkf6j50qIyIi4kkYCgh2pnZzvhr4RAsgHitkbR//MAHDtNd+xq8Bfgw8C9ifuvE+HViwHbM3sEefAobWbhdqV2dsTwKeA3wZWKcFDK8APgLM2s0o46kYc0HDQJa5IiIinjpJcwIrA2u2v8+lNkqdDcBto9SY9oYmPpenNog8GFicqgf4F/AeSasC2L66k0GOIOklktZoKVLrAz+T9FVJBwHvB04Evi1pL+AoYH/bl3Q55vjvjNmgISIiIp68yazQG5gZ+CJ147pZCxTeKWn1GT2+cWa59vdXge8C3wb2AV5AFRPfD9zWycimbHHgdEnvpuoXPgwcATwTOIbaxO2HVOH2+9omdMkKGUXGXE1DRERE/HdG1Ci8HLgVuB14O3AssJgtd4oeAAAZGUlEQVTtayRtSeXWv8X2NZ0NeIyT9FvgFtvrSjoJ+Am179TWwO7An2w/1OUYhw3VL7wF+CZwpu0NWwrbROA44Gu2T+t0oPG0jJnuSREREfHUDAUMOwHbAH+lctJ3B3YFzpD0C2oG/O0JGKYv2ytKulDSV6h9F2YFzgDmACb0KWCAJ3RA+qGkTYBTJa1v+0fAI5JuARbqdJDxtGWlISIiIpC0ArWqsA61w/P6wI7U5mGLAg8Cd9m+rrNBjgOSZh4EBZLOA5YFTgO2BB7pUy3J0ArDKsCrqU12fwasRo35o8CvqPSkHW2f1dlg42lL0BARETEOjdyHQdJSwD62395yzQV8DjjX9ve7Gud4IGnB4c3xhjeGlPRLqiB6Mdu3dzXGKWkbt30BOJkKLv8N7Ee1gj0D+BFV9HxRZ4OMaSKF0BEREePQUErSmyQtCVwPLCdpX5dH26HP72yQ44CkZYDr274FQG0MOWhdans1YO2+BAyS5pM0f/tYwBuAXWzvSRVrXwZsb/tMaqfqLyZgGBsSNERERIwjg441kiZImpXarfeZtu+mbvI2kXS0pD2oNJMfdzfasUvS4B5sFuBGYE9J6w2eb4HDzO3j89rXdNptqBU2HwTsL+m5LfCcG9gMwPaVwB+AV0may/aPbZ/R9bhj2kjQEBERMY4MpSS90PYDwN+BO9tzVwNrAP8AZqKKnq/sYpzjwMIAtn8LHEh1q/rfESsOTyh47nIPqpbO9ojtbYD5gJ3bXh6HAJMk7doOvY26v5xz8LXZO2tsSPekiIiIcWBEW9VFge9I+gDwIuBASRdThax/t/2/HQ51zJO0PHCupK9ShcKXAH+m2qoeK2lC3+pIhs6dVah6l/dQNQwfB04FdpL0ZuB5VG3MTVP4p2KUSiF0RETEGDciYHgdtbvz24GtgNmBi9tj6wPPAN5v+/puRjv2taDhQGpW/hbg5cBzgHWp3bfvsH1udyOcvFZ/cQKwEbXB3GHApdT3chfwUuAe21ePLLSP0S9BQ0RExDjRVhbeTBWqXi1pA2Bv4FjbR7RjcrM3jQ21Jl2autm+i9pz4QDgTCo9bBLw80FL1T7+HtrGf/sDm9q+X9KzgAuowGEn27d0OsCYrlLTEBERMQ5IegWwKbBxq13A9inAZ4HtJK3TxxvVsaAFDGsD36OCtHOBF1OpPa8DFgP+YvuRQYF0178HSUtI2lzScPese4G7gRUkzWn7Dmq1YXGGahhibEpNQ0RExPjwDODOdqP32F4Atr8r6W7g8q5vVMei1jlofmrvgp1s/0LSm4DvA2sBRwAfAE4CGGp125k25u2p3cC/L+lm4MNtdeocquPWryT9m+qctMMgEI2xKysNERERY8xwi0tJc7cPr6D2A1i97Tr8sKStJH3U9qm2r+lmtGPT4HfQArFbqZ//pe2xM6k9DTZtexjs0qeffxvzacBvqHEuBhwk6ePA19ofgDWBT9u+YMaPMma01DRERESMUZLeRxWnPgwcD6wDzEXtDXAF1QHnrbb/2tkgxzBJqwFL2P6ypBOASba3bs/9D/Ba29u3bkmdrzCMJOkU4Le2PylpK+Ao4HfAd4ELBpu2Ja1tfEh6UkRExBgkaUtgQ6rw+XLgOqrwdjWqQ89zgA0TMEx7rS5hZuBoYHZJ91P1JL+UdBJwIbAF8GHoR0rSsKEg4ADgLZKWBfYEdqJ2Dn8t1R4W6L7+ImaMrDRERESMAUMdemZqBbV7UZ1tXgRsQq0o3C9pDtuT+jq7PZoN/Q4m2H5U0sbAm4BHgD/ZPqrN2D8D+Kvts/o8Sy9pfmqFajWqDe9R7fHZbd/X6eBihkvQEBERMYZIWtj29ZK2Bbajut2s225m9wIm2t6vzzero1nbB2Nh4AxgXqoA+nvUjfd1tg/qbnT/PUkrA18A3mb7pgSb41cKoSMiIsYISUsC50l6DXXT+gi1GddLJG1GrTh8H5JSMq2pzAwcBHydutGei2pF+izgZ8BSkl7U3Sifkj8AlwGvTcAwvmWlISIiYgwYSkvanipw/h9qt+f/ARYFBOxl+9IOhznmDKUkzdbSvxYE9gJeD+zQ/vyWKiKe0/btHQ73KWmrDTPbPr/rsUR3EjRERESMcpJWpzbY+pbteyUdCKwLvMP2nyTNRt303d3pQMcoSWsBbwWuAs6jis4PA66xvVuXY4uYVpKeFBERMcoM78PQLAqsCOzQdh5ei0qHOVXS6rbvT8AwfbS2qp8DjgO2Bt4O3Ay8F1hO0rHtuJk6G2TENJCWqxEREaPMoB5B0tbAcrY/IOl2ah+GDYB9bP9E0sXUrHdMBy14WwV4P1U/8hBwUOucdC+wJVUUje1HOhtoxDSQ9KSIiIhRYrilJ7VB29eBjYGDbe/RjlnA9i3pjjRjSNoQ2B2YA3iz7RslbQIsZPvz3Y4uYtpJelJERMQoMRQELGj7fuBI4DPA8yV9qx1zi6SJCRimnxa0DVwN3AEcC9wpaQXgo8CVXYwtYnpJ0BAREdFzwzUMkhYB/tT2A7gNWAL4UHvuJADbD3cwzDFt+HcwaDsq6XnAX6gVn0WoNreHUOlhp06m9iRi1ErQEBER0WOtN/6ghuG9VO78h4DDgZmA3wDzAO8D7pO0UFdjHataO1tLWkPS59pj76aChTOAf1FtVjcFNrf9g6SHxViTmoaIiIieGr7xlLQDsD2woe1r234MHwJuAr5q+6vZfGvaagHYA7b/KWlNahVhEjBz+3sNah+MTYANbN/T2WAjprOsNERERPTUUMCwI/Al4OQWMEywfTSwJ/BqYA1JswKZCZxGJC0FfBNYuj00L7Cj7VcANwL/tD0JOBt4BrXrc8SYlZWGiIiInhmxwrAZsC+wH9Xa8xu2jxg6dkPgUtspvJ1GJM0DfAf4X6pm4fnA7bavbc/PD3yxPT4R+KTtH3Q03IgZIvs0RERE9MxQwPB84HrgdbZvl3QrcIikh2x/uR17codDHavmAC4FZqdqRs4G3ijpA8BPbN8qaWfga8BRqWGI8SBBQ0RERA9J2hZ4N/AJ27cD2D5H0q7A8ZIetn1sp4Mcux4EXgSsAGxr+xeS3gbsBPwbOLu1tn2L7YcSMMR4kJqGiIiIfrodeB7wupaCBIDtX1E7DZ/T0bjGg3uBm4EFgNla96STgFOAD0maCGD7ofZ3AoYY8xI0RERE9IiktSUtAVxEBQ6TgFUkrTc4xvYFtv/e1RjHosGeCpKe2TbO+wDwJ+ANwKCN7e+AG4B0qIpxJ4XQERERHRpukyppFqrgeUlgO2BjqqZhCaqLz/dtn9bVWMe6Fph9BLgT+ANwKNVmFSp4exXwUdundDPCiO4kaIiIiOjIiC5JGwPnUzen7wOWoXLrfwx8H9gR+K7tWzoa7pgm6eXAccAuwD+o7knnU5u2vQF4AXCZ7fNSwxDjUYKGiIiIjrV9GI6gZrfXA+4HtgG2AO6wvVbLq3+ku1GObS1o2M32Nu3zCdTv49O2v9nl2CL6IDUNERERHZK0BZU//xzgpPZnNqqd50XAipKeQfLopzcBC0laEqCljB0HPNzpqCJ6IkFDREREtxYDfg/Ma3t/4NfAd6m9Aj4AvNz2vUmHmT7aigK2/0jtx/AVSW+XtCXwLiDpYBEkPSkiImKGmVIuvKRPUrsLf8T2TZKOpdqtrpOUpGlr8DuQtAhwve1HJc08aJ8qaTsqkHshcJzt07scb0RfJGiIiIiYAUYUPa8GXAcwaJ0q6Thgbtsbts8XSNHz9CFpFeBE4HCqZuEJgUM7ZqLtpCZFNElPioiImAGGAob3A5+idhf+iKRV2yHvBOaVNF87PgHD9HM9tQfGisAnWpH5Q4NN25qs8EQMSdAQERExg0haB1jf9muAuYCXAjtKeg0wd3sss9vTiaT5JT3L9vXAD4AzqQLoj7bA4bGffWpIIp4oQUNERMSMcx2wXWux+mKqrepswMfa56+zfUd3wxu7JL0C+BtwpKQXAzcDq1N7MSwEfLy70UX038T//5CIiIh4OloNw9LAl20/ImkJYGfbV0q6ltrE7Qbbd3U60DFmROH5pcCpwKpUsHYjsAgVSHwLuLWLMUaMFgkaIiIiprGhDj0TgJmpVYSlgS2B44HZga+14uc1qS5JN3Y24DGq/Q7WAN5he2tJ7wI+A6wEbAzcb/svwF+6HGfEaJD0pIiIiGlsaHb7ubYfsP1VYHHgHZI2t70jNeu9OLCl7eu6Gus48HLgfyR9vK3k7AHcARzTfi+P7dUQEVOWlqsRERHTgaRlgEOB9wHrU/nzJwAvAy4BjoUU3E4vkhYE7qT2W/g8sABwnu0dJM0FfBU40PZvOxxmxKiRyDoiImIakLTAiIduB34EfB/YyPbato8BrgSWoPZkSMAwHUh6DvA5YDNgEvV7WA14gaTjbN8NbJaAIeLJS01DRETE0yRpSeBySZ8H/mz76Laz89HALMDqkpa2fTm1wjCL7Tu7HPNYJemF1D4M3wE2BO4G3gRcC2wEnC3pZbYv7W6UEaNPgoaIiIin7x6qdefNwMaSXgt8Dzjb9mck3QMcJemDtn8D3NfhWMcsSc8EdqF+H/sBBtajOiMta/skSavYzsZtEf+l1DRERERMA5IOAZ4HvJ3qzLMlMA+wO7UXw0LABSl6nj4kzWP7TkmrU4HCXVSnpNWAg6jfxYrA3cObuEXEk5OgISIi4mkYaq86C/B14P3AklSh7c+A+YEbgL2TkjR9SHoJ8F7gRNu/krQq8DaqruRgYBXgQdsXdDjMiFEt6UkRERFPQwsY1D69krpJXRHYzfYpkhYHbkvAMG2N2LjtduBR4K2SHgHOo1KSPkH9Hj7V0TAjxox0T4qIiHiaXB4EvgG8Efim7VPac1fYvqPTAY5BLVhbWdK72s93f+AhYFNqM71nAssDWV2ImAYSNEREREwjtv8KfBiYSdIcXY9nHJgH2EHSti1wOIQqRv80cBSwq+1zOhxfxJiR9KSIiIhp69dUPn1MJ5Im2H7U9pmSDOwraWbbR0v6HbAz8G7bZ3Q81IgxI4XQERER05ikOWxP6nocY5GkiYPuR5Jmt32fpBWp1YXfU0XPn7R9xoi6h4h4GhI0RERExKgg6WXAwrZPk7QdsBbVWvVLgIDDgY/ZPr3DYUaMSQkaIiIioreGVwsk7QS8ErgTeAXwIaq97bK23yPpmbb/nRWGiGkvNQ0RERHRO4M2tq1L0uuB19jev+2uvRPwRdvnSJobWF/S7FQwQQKGiGkvQUNERET0UgsY1gIOBW6QNJftD0maFVhR0gLA+sCnbN/X6WAjxrikJ0VEREQvSXoF1Y1qOeDvVM3CzS1weC/wTmCfVuOQlKSI6ShBQ0RERPSSpJmAPwM/sr172117T+Be2++TtKDtmxIwREx/2dwtIiIiesn2I9Qqw+skHWj7CipVaR5JS9q+qR2XgCFiOstKQ0RERHRusFogaRWqM9LlwLW2r5C0GHAksC9wMTCH7Xs6HG7EuJNC6IiIiOhcCxjWAb4A/BB4FXCHpG/YPl/SdcDcth8FEjBEzGAJGiIiIqITkuazfVv7eCbgjcDOtk9v9QtrAW+S9EfgUeDu7kYbMb6lpiEiIiJmOElLAb+W9HJ4rH5hbmDT9vkVwCXAKsADwJ62f9PRcCPGvQQNERERMUNJejZwCLA98DdJr5Y0L5WadIekXduhtwKzAs+2/e9uRhsRkPSkiIiImPEM/JyavDwX+BdwDXADcD6wjaR1gUWAvW3f0tVAI6IkaIiIiIgZ7VnANlTQsJHtP0taG1iNCig2Bl4O/Nv2VdmHIaJ7SU+KiIiIGcr21cCxVPAwT3v4l8AjwCq2H7R9se2r2vEJGCI6lqAhIiIiuvBD4PvAtpKWsT0JuBCYT9JsktTt8CJiWDZ3i4iIiE60zknrAVsAJwLbAjvaPq3TgUXEf0jQEBEREdPN0E7PKwI3275hxPNzAG8CFgQut31uF+OMiKlL0BARERHTlaS1gC9RKwoXtV2dI2IUSdAQERER042khYGTgQ/a/kXX44mIpyaF0BERETE93Qf8ZRAwSJq1/T3PVL8qInolQUNERERMT/cBL5O0D4DtByS9FjhQ0mzdDi0inqxs7hYRERHThaQJtidJ2gj4UUtV+j3wHuDjtu/vdoQR8WSlpiEiIiKmG0kz2X5E0oLA+4E7gN/a/ll2eo4YPRI0RERExNMy1Fb1NcDywAVUHcO97fmJth/udJAR8bSkpiEiIiKelhYwrAN8BZgZOB54l6RF2/MPZ4fniNEtNQ0RERHxtLTUo12p3Z1fAMwGrALMLOlbtm9MGlLE6JaVhoiIiPivDVYOJC0P3ArsADwD+DSwDPBdYE9gU0mzdzXOiJg2EjRERETEf2WohmEt4DhgSdvXAgsCt7dahr9RnZLOsH1fh8ONiGkg6UkRERHxpA0FDGtSqwnvtX1Ze/o3wGySfgS8BHi/7cu7GmtETDvpnhQRERH/lRYwHAGcDxjY3/aV7bkFgbWBK2yf190oI2JaStAQERERT5qkmYE9gF8AFwIfAZYF9rR9dZdji4jpJ0FDRERETNVQStILgbuAeQYBQmur+nZgVWCXBA4RY1NqGiIiImKKhgKG9YF9gFuAf0r6me1v2b5G0jeo/Rnm6XSwETHdZKUhIiIi/sPwLs6SFgBOA7YB7qDSkbYDvmD7rHbMrLYf6Gi4ETGdpeVqREREPIGklwGflDRXe2gW4E7bf2ytVX8JXEZ1SAIgAUPE2JagISIiIh4jaTHgGOA3tu8GsH0d8A9JR7XP7wRuA5ZoX6OOhhsRM0hqGiIiImLYq4GDgL9LOg24AbgCOBzYXNLZwJHAe9ofnFzniDEvNQ0RERHxGEm7Aa8AXgzsBTyTqmFYGNidChTuBS6zfXpX44yIGSsrDRERETHsXGBr4He2z2j7MlwMfAxY1PYnOx1dRHQiNQ0REREBPNZe9SKqpmFNSWvZfsj234BHgRd2O8KI6EpWGiIiIsaxoX0YVgFeIOkPVM3CvcAHJS1IdUpaHvhSh0ONiA5lpSEiImKckjShBQzrAMcBzwd+DmwInAp8Adge+DCwn+0LOxtsRHQqKw0RERHjjKQ5bE8CJkh6DlWvsB6wCPAIsCMwl+2vtA5KE2w/MFiV6G7kEdGVBA0RERHjiKQlgUMkXUO1Uv0CsAEVMHwGWAzYEjha0n3AdwcbtyVgiBi/kp4UERExTkhaGvgKcBLwO2BxYDvbN1OpSX+3/QhVw3A+1Vb14a7GGxH9kZWGiIiIcUDSLMCPqEDgK5ImAM8GlmqH/BF4h6RvAcsBO9n+QzejjYi+yUpDRETEOGD7QWBzYBVJ77X9KHAfMGcLIK6jahvOB3a2fXZ3o42IvsmO0BEREeOIpJWAnwG/AOYGtrF97WSOS9FzRDwmKw0RERHjiO2LgdcDqwNn275W0sS22jB8XAKGiHhMahoiIiLGGdt/kPQm4KeS7rH9ua7HFBH9lvSkiIiIcUrSK4EzgZcC17c6h4iI/5CgISIiYhyTNLftu7oeR0T0W2oaIiIixre7oQqfux5IRPRXVhoiIiIiImKqstIQERERERFTlaAhIiIiIiKmKkFDRERERERMVYKGiIiIiIiYqgQNERFjnKSvSfrxZB5fSZIlvWDGjyoiIkaTBA0RERERETFVCRoiIgJJM0k6RtLfJd0n6UpJe0qaMHTM19rKhCU9JOkqSe8Zen4bSfdM4d9/Qfu6ldrnr2ufP6d9PrekiySdLGlie+wcSYcP/RtLtP/30un1c4iIiMlL0BAREVDvBzcAmwJLAXsDewHbjjjuTGBB4EXA14EjJD3/6fzHkmYHfgTcAWxu++EpHHoQcP/T+b8iIuKpmdj1ACIiYoZYezKrAI9NHNl+CPjo0HP/kLQCsAVwzNDjD9i+GUDS9dRN/NO5kZ8FOB6YCdjA9gOTO0jS64BXA18B1nga/19ERDwFCRoiIsaHXwLbj3jsZcDJg08k7Qi8C1gUmB2YGbhmxNcMgo+ZAQPvtn3b0PPPaM8buBX4CbDnVMb1deCNwIG2J03uAEkCDgY+ATx7Kv9WRERMJwkaIiLGh0m2rxp+QNIzhz7eDDgU+CBwPnAXsBOw4Yh/ZxB8TKRu9o+U9Dvblw3+H2A5QMDiwLHAnTxxtWLYQsAGwPcknWj74skc8w5gTuBIKm0qIiJmsAQNEREBsCrwG9vDhccvmsxxw8HHXyTtAawDDIIGDz1/paSfAMtP5f/dwPYVkg4DjpO0wogUpdmBA4BdbT9Uiw4RETGjpRA6IiIArgBWkLSOpJdI2hdYfTLHzSrpuZIWlvQO4PnAX4YPkDSbpNklLQu8AZhat6N/tb/3od6T9hvx/GbA322f8hS+p4iImEay0hAREQBHUWlF36JSi06k6gjeOeK4NwE3AY8A1wJ72R7eOO4ZwH1UTcNtwI+BTwLzTe0/t32/pK2BcyWdbPvX7ak5gN2fxvcVERHTgGx3PYaIiIiIiOixpCdFRERERMRUJWiIiIiIiIipStAQERERERFTlaAhIiIiIiKmKkFDRERERERMVYKGiIiIiIiYqgQNERERERExVQkaIiIiIiJiqv4PFmUKkMo+ikgAAAAASUVORK5CYII=\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "chart = sns.barplot(x=sorted_top_skills_salary.key_skills_list, y=sorted_top_skills_salary.salary_median, palette=sns.color_palette(\"crest\", n_colors=len(lst)))\n",
        "chart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')\n",
        "chart.set_ylim(ymin=20000)\n",
        "chart.axes.set_title(\"Распределение медианной зарплаты по навыку в зависимости от навыков в ИТ-сфере\", fontsize=16)\n",
        "chart.set_xlabel(\"Навыки\", fontsize=14)\n",
        "chart.set_ylabel(\"Зарплата\", fontsize=14)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "j0xY5L88Um5h"
      },
      "source": [
        "***Самые высокооплачиваемые навыки из сферы ИТ - языки SQL, Git, java, javascript, Python, владение ООП, а также - аналитическое мышление, работа с большим объемом информации.***"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eQL6CIbNSnMi"
      },
      "source": [
        "Выберем топ-15 навыков, связанных с ИТ, отфильтруем по полученному списку датафрейм salary_new, чтобы посмотреть распределение зарплат"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 71,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "k2WeRRe7PQEd",
        "outputId": "f278b063-2984-4ef4-c52a-c62ef687b2ed"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                           key_skills_list  salary_min\n",
              "0                                      Git       21750\n",
              "1                                      SQL       21750\n",
              "2      Работа с большим объемом информации       23490\n",
              "3      Работа с большим объемом информации       35700\n",
              "4      Работа с большим объемом информации       30450\n",
              "...                                    ...         ...\n",
              "14739                               Python       17400\n",
              "14740                                  ООП       17400\n",
              "14741                                MySQL       17400\n",
              "14742                                Linux       17400\n",
              "14743                                 Java       17400\n",
              "\n",
              "[14744 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-347b424c-180e-4415-8926-b7853a6f180d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>key_skills_list</th>\n",
              "      <th>salary_min</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Git</td>\n",
              "      <td>21750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>SQL</td>\n",
              "      <td>21750</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Работа с большим объемом информации</td>\n",
              "      <td>23490</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Работа с большим объемом информации</td>\n",
              "      <td>35700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Работа с большим объемом информации</td>\n",
              "      <td>30450</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14739</th>\n",
              "      <td>Python</td>\n",
              "      <td>17400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14740</th>\n",
              "      <td>ООП</td>\n",
              "      <td>17400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14741</th>\n",
              "      <td>MySQL</td>\n",
              "      <td>17400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14742</th>\n",
              "      <td>Linux</td>\n",
              "      <td>17400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14743</th>\n",
              "      <td>Java</td>\n",
              "      <td>17400</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>14744 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-347b424c-180e-4415-8926-b7853a6f180d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-347b424c-180e-4415-8926-b7853a6f180d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-347b424c-180e-4415-8926-b7853a6f180d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ],
      "source": [
        "salary_new_top = salary_new[salary_new.key_skills_list.isin(lst)].reset_index(drop=True)\n",
        "salary_new_top"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 72,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "ery9nNt9ecFR",
        "outputId": "e4db6081-81d1-4fa5-cc7f-54605d537621"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "boxplot = sns.boxplot(x='salary_min', y='key_skills_list', data=salary_new_top)\n",
        "boxplot.axes.set_title(\"Распределение зарплаты в зависимости от навыков\", fontsize=16)\n",
        "boxplot.set_xlabel(\"Навыки\", fontsize=14)\n",
        "boxplot.set_ylabel(\"Зарплата\", fontsize=14)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "O9k42KIMVwPP"
      },
      "source": [
        "***   Наибольшее количество выбросов приходится на работу с большим объемом информации и Adobe Photoshop, остальные навыки имеют небольшое количество выбросов, которое может быть обусловлено комбинацией навыков, опыта работы, региона и других переменных.***"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Q--H-aEo9pAH"
      },
      "source": [
        "Наиболее дорогие навыки, попавшие в выбросы по boxplot"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 73,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TXaCcyNLt9ZS",
        "outputId": "21d32228-22d0-4a46-fbd4-8e7aea2b0b94"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "key_skills_list                      salary_min\n",
              "Git                                  400000        3\n",
              "Python                               400000        3\n",
              "                                     450355        3\n",
              "HTML                                 426300        2\n",
              "Java                                 400000        2\n",
              "JavaScript                           426300        2\n",
              "Linux                                400000        2\n",
              "PostgreSQL                           450000        2\n",
              "Работа с большим объемом информации  450000        2\n",
              "JavaScript                           400000        1\n",
              "PostgreSQL                           400000        1\n",
              "                                     500000        1\n",
              "Работа с большим объемом информации  440000        1\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 73
        }
      ],
      "source": [
        "salary_new_top[salary_new_top['salary_min']>=400000].value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GvdSCmdRASs2"
      },
      "source": [
        "Обработаем колонку spezialisations, создадим список специализаций для каждой вакансии"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 74,
      "metadata": {
        "id": "uaqdnOtHjteh"
      },
      "outputs": [],
      "source": [
        "def get_id(lst):\n",
        "  try:\n",
        "    spec_id = []\n",
        "    if lst != 0:\n",
        "      list_dicts = ast.literal_eval(lst)\n",
        "      for dict in list_dicts:\n",
        "        if dict.get('profarea_id') not in spec_id:\n",
        "          spec_id.append(dict.get('profarea_id'))\n",
        "    return spec_id\n",
        "  except:\n",
        "    return []\n",
        "df['profarea_id'] = df['specializations'].apply(get_id)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 75,
      "metadata": {
        "id": "1fBkZuTHCjy8"
      },
      "outputs": [],
      "source": [
        "def get_name(lstn):\n",
        "  try:\n",
        "    spec_name = []\n",
        "    if lstn != 0:\n",
        "      lists_dicts = ast.literal_eval(lstn)\n",
        "      for dict in lists_dicts:\n",
        "        if dict.get('name') not in spec_name:\n",
        "          spec_name.append(dict.get('name'))\n",
        "    return spec_name\n",
        "  except:\n",
        "    return []\n",
        "df['spec_name'] = df['specializations'].apply(get_name)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 76,
      "metadata": {
        "id": "klrYTPWpEfkI"
      },
      "outputs": [],
      "source": [
        "def get_int(list):\n",
        "  if len(list) == 1:\n",
        "    return list[0]\n",
        "df['area_id'] = df['profarea_id'].apply(get_int)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DMdoMusHZH62"
      },
      "source": [
        "Создадим список самых популярных специализаций с помощью explode "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 77,
      "metadata": {
        "id": "xKXLZ_ptWTiq"
      },
      "outputs": [],
      "source": [
        "top_area = df[['profarea_id', 'spec_name']]\n",
        "top_area = top_area.explode('profarea_id')\n",
        "top_area = top_area['profarea_id'].value_counts().to_frame()[:10]\n",
        "list_top = top_area.index.to_list()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 78,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "uagzvV9gWvq8",
        "outputId": "904b0779-2393-48aa-ef21-2402567aed50"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  profarea_id  count\n",
              "0           1  50344\n",
              "1          12  13277\n",
              "2          17  12093\n",
              "3           3  11579\n",
              "4           6   8471\n",
              "5          20   6194\n",
              "6          11   2916\n",
              "7          24   1607\n",
              "8           9   1307\n",
              "9          15    500"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-90f942ac-6775-46d1-83c2-aee2be57e674\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>profarea_id</th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>50344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>12</td>\n",
              "      <td>13277</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>17</td>\n",
              "      <td>12093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>11579</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>6</td>\n",
              "      <td>8471</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>20</td>\n",
              "      <td>6194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>11</td>\n",
              "      <td>2916</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>24</td>\n",
              "      <td>1607</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>1307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>15</td>\n",
              "      <td>500</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90f942ac-6775-46d1-83c2-aee2be57e674')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-90f942ac-6775-46d1-83c2-aee2be57e674 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-90f942ac-6775-46d1-83c2-aee2be57e674');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 78
        }
      ],
      "source": [
        "top_area = top_area.reset_index().rename(columns={'index': 'profarea_id', 'profarea_id': 'count'})\n",
        "top_area"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hlSuhz3fZqK1"
      },
      "source": [
        "Для того, чтобы получить название каждой специализации, выберем все одиночные ненулевые значения id специализаций в profarea, с помощью explode раскроем список названий, по id выберем название для специализаций из списка list_top топ-10 самых популярных специализаций."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 79,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ivz89Yl5F_Nc",
        "outputId": "6ec375a0-4d56-43df-a8cb-34d7ccace535"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/pandas/core/generic.py:6619: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  return self._update_inplace(result)\n"
          ]
        }
      ],
      "source": [
        "profarea = df[['area_id', 'spec_name']]\n",
        "profarea['area_id'].replace('None', np.nan, inplace=True)\n",
        "profareas = profarea[profarea['area_id'].notna()]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 80,
      "metadata": {
        "id": "I92XGsKyWyB4"
      },
      "outputs": [],
      "source": [
        "area_id = profareas['area_id'].value_counts().to_frame().reset_index()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 81,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "wX8VwnTXXguv",
        "outputId": "18dadfd1-8f51-4fa4-a7bd-70b835ec6d84"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   area_id  count\n",
              "0        1  37416\n",
              "1        6   8432\n",
              "2        3   1602\n",
              "3       24   1589\n",
              "4        9    611\n",
              "5       17    170\n",
              "6       20    112\n",
              "7        4     33\n",
              "8       12     28\n",
              "9       18     25\n",
              "10      14     24\n",
              "11       2     20\n",
              "12       8     20\n",
              "13      11     17\n",
              "14       5     17\n",
              "15       7     11\n",
              "16      15      9\n",
              "17      13      7\n",
              "18      23      4\n",
              "19      21      3\n",
              "20      25      2\n",
              "21      22      2\n",
              "22      19      1\n",
              "23      26      1\n",
              "24      16      1"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e9a780ea-1b9a-4f24-9e75-bdd661c07a58\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>area_id</th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>37416</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6</td>\n",
              "      <td>8432</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>1602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>24</td>\n",
              "      <td>1589</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>9</td>\n",
              "      <td>611</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>17</td>\n",
              "      <td>170</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>20</td>\n",
              "      <td>112</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>4</td>\n",
              "      <td>33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>12</td>\n",
              "      <td>28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>18</td>\n",
              "      <td>25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>14</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>2</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>8</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>11</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>5</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>7</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>15</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>13</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>23</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>21</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>25</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>22</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>19</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>26</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9a780ea-1b9a-4f24-9e75-bdd661c07a58')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e9a780ea-1b9a-4f24-9e75-bdd661c07a58 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e9a780ea-1b9a-4f24-9e75-bdd661c07a58');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 81
        }
      ],
      "source": [
        "area_id = area_id.rename(columns={'index': 'area_id', 'area_id': 'count'})\n",
        "area_id"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 82,
      "metadata": {
        "id": "rgNhTig5WknU"
      },
      "outputs": [],
      "source": [
        "profareas_ex = profareas.explode('spec_name')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 83,
      "metadata": {
        "id": "F2y2oufkYuYu"
      },
      "outputs": [],
      "source": [
        "profareas_ex['area_id'] = profareas_ex['area_id'].astype('category')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 84,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_I9IhTybV0Zg",
        "outputId": "906d0ff6-68ee-42f3-aebf-af4b1e109b4a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['1', '12', '17', '3', '6', '20', '11', '24', '9', '15']"
            ]
          },
          "metadata": {},
          "execution_count": 84
        }
      ],
      "source": [
        "list_top"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 85,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "NscNPKRROMMA",
        "outputId": "68caed68-9017-4dac-f203-0c6812598f35"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      area_id                                         spec_name\n",
              "5993       15                                           Продажи\n",
              "6088       15                                           Продажи\n",
              "14243      15                             Управление персоналом\n",
              "38986      15                                           Продажи\n",
              "54290      15                                           Продажи\n",
              "54290      15                                  Консультирование\n",
              "56755      15                                           Продажи\n",
              "56773      15                                           Продажи\n",
              "63722      15                                           Продажи\n",
              "63722      15                        Финансы, Банки, Инвестиции\n",
              "65657      15  Информационные технологии, Интернет, Мультимедиа"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f0ab305f-f644-4ae0-922c-3d769a11233d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>area_id</th>\n",
              "      <th>spec_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5993</th>\n",
              "      <td>15</td>\n",
              "      <td>Продажи</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6088</th>\n",
              "      <td>15</td>\n",
              "      <td>Продажи</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14243</th>\n",
              "      <td>15</td>\n",
              "      <td>Управление персоналом</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38986</th>\n",
              "      <td>15</td>\n",
              "      <td>Продажи</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54290</th>\n",
              "      <td>15</td>\n",
              "      <td>Продажи</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54290</th>\n",
              "      <td>15</td>\n",
              "      <td>Консультирование</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56755</th>\n",
              "      <td>15</td>\n",
              "      <td>Продажи</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56773</th>\n",
              "      <td>15</td>\n",
              "      <td>Продажи</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63722</th>\n",
              "      <td>15</td>\n",
              "      <td>Продажи</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63722</th>\n",
              "      <td>15</td>\n",
              "      <td>Финансы, Банки, Инвестиции</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65657</th>\n",
              "      <td>15</td>\n",
              "      <td>Информационные технологии, Интернет, Мультимедиа</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0ab305f-f644-4ae0-922c-3d769a11233d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f0ab305f-f644-4ae0-922c-3d769a11233d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f0ab305f-f644-4ae0-922c-3d769a11233d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 85
        }
      ],
      "source": [
        "profareas_ex[profareas_ex['area_id']=='15'].head(20)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 86,
      "metadata": {
        "id": "xINRsh2-a6zH"
      },
      "outputs": [],
      "source": [
        "list_of_spec = pd.DataFrame({'profarea_id': [i for i in list_top],\n",
        "                             'spec_name': ['IT', 'Консалтинг', 'Оптовая торговля', 'Маркетинг', 'Персонал', 'Недвижимость', 'Телекоммуникации, графика', 'Тренерский состав', 'Другое', 'Продажи']})"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xsJ9hLKCbDI_"
      },
      "source": [
        "Соединим с помощью merge top_area и list_of_spec. Проанализируем полученный список топ-10 самых востребованных специализаций с количеством вакансий по этим специализациям"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 87,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KYcDQcbeUxXJ",
        "outputId": "3974947b-25e5-4ef6-b07c-e2ad79dc69f5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 10 entries, 0 to 9\n",
            "Data columns (total 3 columns):\n",
            " #   Column       Non-Null Count  Dtype \n",
            "---  ------       --------------  ----- \n",
            " 0   profarea_id  10 non-null     object\n",
            " 1   spec_name    10 non-null     object\n",
            " 2   count        10 non-null     int64 \n",
            "dtypes: int64(1), object(2)\n",
            "memory usage: 320.0+ bytes\n"
          ]
        }
      ],
      "source": [
        "top_list = list_of_spec.merge(top_area, how='left', on='profarea_id')\n",
        "top_list.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 88,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "ZAyfVLMfdU9J",
        "outputId": "8348c5bf-564f-43a4-ccc9-b5a6d0f2a1d1"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.pie(top_list['count'], labels = top_list['spec_name'], explode=(0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1), \n",
        "        autopct='%1.0f%%',  pctdistance=0.9, labeldistance=1.1)\n",
        "plt.title('Доли самых востребованных специализаций на рынке труда', fontsize=16)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ba14AufLk7mu"
      },
      "source": [
        "***Большая часть востребованных специализаций (46 %) - Информационные технологии, что превышает число специализаций из других областей почти в 4 раза. ***"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cfZyzENazzKF"
      },
      "source": [
        "Вытащим в отдельный столбец значения с опытом работы"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 89,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "-d24pwBHzyDF",
        "outputId": "a9b3403d-b025-4658-e33c-ef210ae15426"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                                          0  \\\n",
              "Unnamed: 0                                                                0   \n",
              "id                                                                 49059633   \n",
              "premium                                                               False   \n",
              "name                                Младший специалист ручного тестирования   \n",
              "department                                                              NaN   \n",
              "has_test                                                              False   \n",
              "response_letter_required                                              False   \n",
              "area                      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "salary                                                                    0   \n",
              "type                                     {'id': 'open', 'name': 'Открытая'}   \n",
              "address                                                                 NaN   \n",
              "response_url                                                            NaN   \n",
              "sort_point_distance                                                     NaN   \n",
              "published_at                                       2022-05-23T09:11:18+0300   \n",
              "created_at                                         2022-05-23T09:11:18+0300   \n",
              "archived                                                              False   \n",
              "insider_interview                                                       NaN   \n",
              "url                         https://api.hh.ru/vacancies/49059633?host=hh.ru   \n",
              "alternate_url                                https://hh.ru/vacancy/49059633   \n",
              "relations                                                                []   \n",
              "employer                  {'id': '1740', 'name': 'Яндекс', 'url': 'https...   \n",
              "snippet                   {'requirement': 'Внимательны и наблюдательны. ...   \n",
              "contacts                                                                NaN   \n",
              "schedule                       {'id': 'remote', 'name': 'Удаленная работа'}   \n",
              "working_days                                                             []   \n",
              "working_time_intervals                                                   []   \n",
              "working_time_modes                                                       []   \n",
              "accept_temporary                                                      False   \n",
              "description               <p>В некоторых проектах Яндексу помогают компа...   \n",
              "experience                      {'id': 'noExperience', 'name': 'Нет опыта'}   \n",
              "key_skills                                                               []   \n",
              "specializations           [{'id': '1.172', 'name': 'Начальный уровень, М...   \n",
              "region                                                 Астраханская область   \n",
              "immediate_redirect_url                                                  NaN   \n",
              "region_id                                                                15   \n",
              "region_name                                                       Астрахань   \n",
              "salary_min                                                              NaN   \n",
              "salary_max                                                              NaN   \n",
              "currency                                                                NaN   \n",
              "gross                                                                   NaN   \n",
              "key_skills_json                                                          []   \n",
              "key_skills_list                                                          []   \n",
              "profarea_id                                                         [1, 15]   \n",
              "spec_name                 [Начальный уровень, Мало опыта, Тестирование, ...   \n",
              "area_id                                                                None   \n",
              "\n",
              "                                                                          1  \\\n",
              "Unnamed: 0                                                                1   \n",
              "id                                                                 54653519   \n",
              "premium                                                               False   \n",
              "name                                                        Тестировщик.Net   \n",
              "department                                                              NaN   \n",
              "has_test                                                              False   \n",
              "response_letter_required                                              False   \n",
              "area                      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "salary                    {'from': 25000, 'to': 50000, 'currency': 'RUR'...   \n",
              "type                                     {'id': 'open', 'name': 'Открытая'}   \n",
              "address                                                                 NaN   \n",
              "response_url                                                            NaN   \n",
              "sort_point_distance                                                     NaN   \n",
              "published_at                                       2022-04-28T17:36:03+0300   \n",
              "created_at                                         2022-04-28T17:36:03+0300   \n",
              "archived                                                              False   \n",
              "insider_interview                                                       NaN   \n",
              "url                         https://api.hh.ru/vacancies/54653519?host=hh.ru   \n",
              "alternate_url                                https://hh.ru/vacancy/54653519   \n",
              "relations                                                                []   \n",
              "employer                  {'id': '1245158', 'name': 'МФК Саммит', 'url':...   \n",
              "snippet                   {'requirement': 'Мы ищем талантливого и амбици...   \n",
              "contacts                  {'name': 'Синанова Мария', 'email': 'sinanova....   \n",
              "schedule                           {'id': 'fullDay', 'name': 'Полный день'}   \n",
              "working_days                                                             []   \n",
              "working_time_intervals                                                   []   \n",
              "working_time_modes                                                       []   \n",
              "accept_temporary                                                      False   \n",
              "description               <p><em><strong>Мы ищем талантливого и амбициоз...   \n",
              "experience                {'id': 'between1And3', 'name': 'От 1 года до 3...   \n",
              "key_skills                [{'name': 'Git'}, {'name': 'SQL'}, {'name': 'Т...   \n",
              "specializations           [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "region                                                 Астраханская область   \n",
              "immediate_redirect_url                                                  NaN   \n",
              "region_id                                                                15   \n",
              "region_name                                                       Астрахань   \n",
              "salary_min                                                          21750.0   \n",
              "salary_max                                                            50000   \n",
              "currency                                                                RUR   \n",
              "gross                                                                  True   \n",
              "key_skills_json           [{'name': 'Git'}, {'name': 'SQL'}, {'name': 'Т...   \n",
              "key_skills_list                           [Git, SQL, Тестирование, C#, API]   \n",
              "profarea_id                                                             [1]   \n",
              "spec_name                 [Программирование, Разработка, Инженер, Тестир...   \n",
              "area_id                                                                   1   \n",
              "\n",
              "                                                                          2  \\\n",
              "Unnamed: 0                                                                2   \n",
              "id                                                                 55116066   \n",
              "premium                                                               False   \n",
              "name                                                              Пентестер   \n",
              "department                                                              NaN   \n",
              "has_test                                                              False   \n",
              "response_letter_required                                              False   \n",
              "area                      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "salary                                                                    0   \n",
              "type                                     {'id': 'open', 'name': 'Открытая'}   \n",
              "address                                                                 NaN   \n",
              "response_url                                                            NaN   \n",
              "sort_point_distance                                                     NaN   \n",
              "published_at                                       2022-05-20T10:07:33+0300   \n",
              "created_at                                         2022-05-20T10:07:33+0300   \n",
              "archived                                                              False   \n",
              "insider_interview                                                       NaN   \n",
              "url                         https://api.hh.ru/vacancies/55116066?host=hh.ru   \n",
              "alternate_url                                https://hh.ru/vacancy/55116066   \n",
              "relations                                                                []   \n",
              "employer                  {'id': '719820', 'name': 'SearchInform', 'url'...   \n",
              "snippet                   {'requirement': 'Глубокие знания клиентских и ...   \n",
              "contacts                                                                NaN   \n",
              "schedule                           {'id': 'fullDay', 'name': 'Полный день'}   \n",
              "working_days                                                             []   \n",
              "working_time_intervals                                                   []   \n",
              "working_time_modes                                                       []   \n",
              "accept_temporary                                                      False   \n",
              "description               <p>Лидер на рынке систем информационной безопа...   \n",
              "experience                  {'id': 'between3And6', 'name': 'От 3 до 6 лет'}   \n",
              "key_skills                [{'name': 'SQL'}, {'name': 'Linux'}, {'name': ...   \n",
              "specializations           [{'id': '1.221', 'name': 'Программирование, Ра...   \n",
              "region                                                 Астраханская область   \n",
              "immediate_redirect_url                                                  NaN   \n",
              "region_id                                                                15   \n",
              "region_name                                                       Астрахань   \n",
              "salary_min                                                              NaN   \n",
              "salary_max                                                              NaN   \n",
              "currency                                                                NaN   \n",
              "gross                                                                   NaN   \n",
              "key_skills_json           [{'name': 'SQL'}, {'name': 'Linux'}, {'name': ...   \n",
              "key_skills_list           [SQL, Linux, Информационная безопасность, Рабо...   \n",
              "profarea_id                                                             [1]   \n",
              "spec_name                 [Программирование, Разработка, Инженер, Тестир...   \n",
              "area_id                                                                   1   \n",
              "\n",
              "                                                                          3  \\\n",
              "Unnamed: 0                                                                3   \n",
              "id                                                                 54031261   \n",
              "premium                                                               False   \n",
              "name                       Ведущий Специалист по информационным технологиям   \n",
              "department                {'id': 'pochta-4352-office', 'name': '«Почта Р...   \n",
              "has_test                                                              False   \n",
              "response_letter_required                                              False   \n",
              "area                      {'id': '15', 'name': 'Астрахань', 'url': 'http...   \n",
              "salary                    {'from': 26000, 'to': None, 'currency': 'RUR',...   \n",
              "type                                     {'id': 'open', 'name': 'Открытая'}   \n",
              "address                   {'city': 'Астрахань', 'street': 'улица Черныше...   \n",
              "response_url                                                            NaN   \n",
              "sort_point_distance                                                     NaN   \n",
              "published_at                                       2022-05-23T07:46:16+0300   \n",
              "created_at                                         2022-05-23T07:46:16+0300   \n",
              "archived                                                              False   \n",
              "insider_interview                                                       NaN   \n",
              "url                         https://api.hh.ru/vacancies/54031261?host=hh.ru   \n",
              "alternate_url                                https://hh.ru/vacancy/54031261   \n",
              "relations                                                                []   \n",
              "employer                  {'id': '4352', 'name': 'Почта России', 'url': ...   \n",
              "snippet                   {'requirement': 'Средне-профессиональное или в...   \n",
              "contacts                  {'name': 'Данилова Екатерина Александровна', '...   \n",
              "schedule                           {'id': 'fullDay', 'name': 'Полный день'}   \n",
              "working_days                                                             []   \n",
              "working_time_intervals                                                   []   \n",
              "working_time_modes                                                       []   \n",
              "accept_temporary                                                      False   \n",
              "description               <ul> <li>Администрирование компьютерной сети</...   \n",
              "experience                      {'id': 'noExperience', 'name': 'Нет опыта'}   \n",
              "key_skills                [{'name': 'Пользователь ПК'}, {'name': 'Работа...   \n",
              "specializations           [{'id': '1.110', 'name': 'Компьютерная безопас...   \n",
              "region                                                 Астраханская область   \n",
              "immediate_redirect_url                                                  NaN   \n",
              "region_id                                                                15   \n",
              "region_name                                                       Астрахань   \n",
              "salary_min                                                          22620.0   \n",
              "salary_max                                                             None   \n",
              "currency                                                                RUR   \n",
              "gross                                                                  True   \n",
              "key_skills_json           [{'name': 'Пользователь ПК'}, {'name': 'Работа...   \n",
              "key_skills_list           [Пользователь ПК, Работа в команде, 1С: Предпр...   \n",
              "profarea_id                                                             [1]   \n",
              "spec_name                 [Компьютерная безопасность, Сетевые технологии...   \n",
              "area_id                                                                   1   \n",
              "\n",
              "                                                                          4  \n",
              "Unnamed: 0                                                                4  \n",
              "id                                                                 55243040  \n",
              "premium                                                               False  \n",
              "name                                        Специалист по защите информации  \n",
              "department                                                              NaN  \n",
              "has_test                                                              False  \n",
              "response_letter_required                                              False  \n",
              "area                      {'id': '15', 'name': 'Астрахань', 'url': 'http...  \n",
              "salary                    {'from': 20000, 'to': 20000, 'currency': 'RUR'...  \n",
              "type                                     {'id': 'open', 'name': 'Открытая'}  \n",
              "address                   {'city': 'Астрахань', 'street': 'улица Молодой...  \n",
              "response_url                                                            NaN  \n",
              "sort_point_distance                                                     NaN  \n",
              "published_at                                       2022-05-06T10:18:54+0300  \n",
              "created_at                                         2022-05-06T10:18:54+0300  \n",
              "archived                                                              False  \n",
              "insider_interview                                                       NaN  \n",
              "url                         https://api.hh.ru/vacancies/55243040?host=hh.ru  \n",
              "alternate_url                                https://hh.ru/vacancy/55243040  \n",
              "relations                                                                []  \n",
              "employer                  {'id': '6694236', 'name': 'ГБПОУ АО Астраханск...  \n",
              "snippet                   {'requirement': 'Медицинская комиссия, справка...  \n",
              "contacts                  {'name': 'Трубицына Елена', 'email': 'info@ast...  \n",
              "schedule                           {'id': 'fullDay', 'name': 'Полный день'}  \n",
              "working_days                                                             []  \n",
              "working_time_intervals                                                   []  \n",
              "working_time_modes                                                       []  \n",
              "accept_temporary                                                      False  \n",
              "description               <strong>Обязанности:</strong> <ul> <li>Обеспеч...  \n",
              "experience                      {'id': 'noExperience', 'name': 'Нет опыта'}  \n",
              "key_skills                [{'name': 'MS Dos'}, {'name': 'Диагностика ПК'...  \n",
              "specializations           [{'id': '1.110', 'name': 'Компьютерная безопас...  \n",
              "region                                                 Астраханская область  \n",
              "immediate_redirect_url                                                  NaN  \n",
              "region_id                                                                15  \n",
              "region_name                                                       Астрахань  \n",
              "salary_min                                                          20000.0  \n",
              "salary_max                                                            20000  \n",
              "currency                                                                RUR  \n",
              "gross                                                                 False  \n",
              "key_skills_json           [{'name': 'MS Dos'}, {'name': 'Диагностика ПК'...  \n",
              "key_skills_list           [MS Dos, Диагностика ПК, Компьютер, Работа в у...  \n",
              "profarea_id                                                             [1]  \n",
              "spec_name                 [Компьютерная безопасность, Сетевые технологии...  \n",
              "area_id                                                                   1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-90b5d717-d13e-43a3-b7ea-99fe6f93d0f9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>id</th>\n",
              "      <td>49059633</td>\n",
              "      <td>54653519</td>\n",
              "      <td>55116066</td>\n",
              "      <td>54031261</td>\n",
              "      <td>55243040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>premium</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>name</th>\n",
              "      <td>Младший специалист ручного тестирования</td>\n",
              "      <td>Тестировщик.Net</td>\n",
              "      <td>Пентестер</td>\n",
              "      <td>Ведущий Специалист по информационным технологиям</td>\n",
              "      <td>Специалист по защите информации</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>department</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>{'id': 'pochta-4352-office', 'name': '«Почта Р...</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>has_test</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>response_letter_required</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>area</th>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "      <td>{'id': '15', 'name': 'Астрахань', 'url': 'http...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>salary</th>\n",
              "      <td>0</td>\n",
              "      <td>{'from': 25000, 'to': 50000, 'currency': 'RUR'...</td>\n",
              "      <td>0</td>\n",
              "      <td>{'from': 26000, 'to': None, 'currency': 'RUR',...</td>\n",
              "      <td>{'from': 20000, 'to': 20000, 'currency': 'RUR'...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>type</th>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "      <td>{'id': 'open', 'name': 'Открытая'}</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>address</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>{'city': 'Астрахань', 'street': 'улица Черныше...</td>\n",
              "      <td>{'city': 'Астрахань', 'street': 'улица Молодой...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>response_url</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sort_point_distance</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>published_at</th>\n",
              "      <td>2022-05-23T09:11:18+0300</td>\n",
              "      <td>2022-04-28T17:36:03+0300</td>\n",
              "      <td>2022-05-20T10:07:33+0300</td>\n",
              "      <td>2022-05-23T07:46:16+0300</td>\n",
              "      <td>2022-05-06T10:18:54+0300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>created_at</th>\n",
              "      <td>2022-05-23T09:11:18+0300</td>\n",
              "      <td>2022-04-28T17:36:03+0300</td>\n",
              "      <td>2022-05-20T10:07:33+0300</td>\n",
              "      <td>2022-05-23T07:46:16+0300</td>\n",
              "      <td>2022-05-06T10:18:54+0300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>archived</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>insider_interview</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>url</th>\n",
              "      <td>https://api.hh.ru/vacancies/49059633?host=hh.ru</td>\n",
              "      <td>https://api.hh.ru/vacancies/54653519?host=hh.ru</td>\n",
              "      <td>https://api.hh.ru/vacancies/55116066?host=hh.ru</td>\n",
              "      <td>https://api.hh.ru/vacancies/54031261?host=hh.ru</td>\n",
              "      <td>https://api.hh.ru/vacancies/55243040?host=hh.ru</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>alternate_url</th>\n",
              "      <td>https://hh.ru/vacancy/49059633</td>\n",
              "      <td>https://hh.ru/vacancy/54653519</td>\n",
              "      <td>https://hh.ru/vacancy/55116066</td>\n",
              "      <td>https://hh.ru/vacancy/54031261</td>\n",
              "      <td>https://hh.ru/vacancy/55243040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>relations</th>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>employer</th>\n",
              "      <td>{'id': '1740', 'name': 'Яндекс', 'url': 'https...</td>\n",
              "      <td>{'id': '1245158', 'name': 'МФК Саммит', 'url':...</td>\n",
              "      <td>{'id': '719820', 'name': 'SearchInform', 'url'...</td>\n",
              "      <td>{'id': '4352', 'name': 'Почта России', 'url': ...</td>\n",
              "      <td>{'id': '6694236', 'name': 'ГБПОУ АО Астраханск...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>snippet</th>\n",
              "      <td>{'requirement': 'Внимательны и наблюдательны. ...</td>\n",
              "      <td>{'requirement': 'Мы ищем талантливого и амбици...</td>\n",
              "      <td>{'requirement': 'Глубокие знания клиентских и ...</td>\n",
              "      <td>{'requirement': 'Средне-профессиональное или в...</td>\n",
              "      <td>{'requirement': 'Медицинская комиссия, справка...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>contacts</th>\n",
              "      <td>NaN</td>\n",
              "      <td>{'name': 'Синанова Мария', 'email': 'sinanova....</td>\n",
              "      <td>NaN</td>\n",
              "      <td>{'name': 'Данилова Екатерина Александровна', '...</td>\n",
              "      <td>{'name': 'Трубицына Елена', 'email': 'info@ast...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>schedule</th>\n",
              "      <td>{'id': 'remote', 'name': 'Удаленная работа'}</td>\n",
              "      <td>{'id': 'fullDay', 'name': 'Полный день'}</td>\n",
              "      <td>{'id': 'fullDay', 'name': 'Полный день'}</td>\n",
              "      <td>{'id': 'fullDay', 'name': 'Полный день'}</td>\n",
              "      <td>{'id': 'fullDay', 'name': 'Полный день'}</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>working_days</th>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>working_time_intervals</th>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>working_time_modes</th>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>accept_temporary</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>description</th>\n",
              "      <td>&lt;p&gt;В некоторых проектах Яндексу помогают компа...</td>\n",
              "      <td>&lt;p&gt;&lt;em&gt;&lt;strong&gt;Мы ищем талантливого и амбициоз...</td>\n",
              "      <td>&lt;p&gt;Лидер на рынке систем информационной безопа...</td>\n",
              "      <td>&lt;ul&gt; &lt;li&gt;Администрирование компьютерной сети&lt;/...</td>\n",
              "      <td>&lt;strong&gt;Обязанности:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;Обеспеч...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>experience</th>\n",
              "      <td>{'id': 'noExperience', 'name': 'Нет опыта'}</td>\n",
              "      <td>{'id': 'between1And3', 'name': 'От 1 года до 3...</td>\n",
              "      <td>{'id': 'between3And6', 'name': 'От 3 до 6 лет'}</td>\n",
              "      <td>{'id': 'noExperience', 'name': 'Нет опыта'}</td>\n",
              "      <td>{'id': 'noExperience', 'name': 'Нет опыта'}</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>key_skills</th>\n",
              "      <td>[]</td>\n",
              "      <td>[{'name': 'Git'}, {'name': 'SQL'}, {'name': 'Т...</td>\n",
              "      <td>[{'name': 'SQL'}, {'name': 'Linux'}, {'name': ...</td>\n",
              "      <td>[{'name': 'Пользователь ПК'}, {'name': 'Работа...</td>\n",
              "      <td>[{'name': 'MS Dos'}, {'name': 'Диагностика ПК'...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>specializations</th>\n",
              "      <td>[{'id': '1.172', 'name': 'Начальный уровень, М...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>[{'id': '1.221', 'name': 'Программирование, Ра...</td>\n",
              "      <td>[{'id': '1.110', 'name': 'Компьютерная безопас...</td>\n",
              "      <td>[{'id': '1.110', 'name': 'Компьютерная безопас...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>region</th>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>Астраханская область</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>immediate_redirect_url</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>region_id</th>\n",
              "      <td>15</td>\n",
              "      <td>15</td>\n",
              "      <td>15</td>\n",
              "      <td>15</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>region_name</th>\n",
              "      <td>Астрахань</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>Астрахань</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>salary_min</th>\n",
              "      <td>NaN</td>\n",
              "      <td>21750.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>22620.0</td>\n",
              "      <td>20000.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>salary_max</th>\n",
              "      <td>NaN</td>\n",
              "      <td>50000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>None</td>\n",
              "      <td>20000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>currency</th>\n",
              "      <td>NaN</td>\n",
              "      <td>RUR</td>\n",
              "      <td>NaN</td>\n",
              "      <td>RUR</td>\n",
              "      <td>RUR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gross</th>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>key_skills_json</th>\n",
              "      <td>[]</td>\n",
              "      <td>[{'name': 'Git'}, {'name': 'SQL'}, {'name': 'Т...</td>\n",
              "      <td>[{'name': 'SQL'}, {'name': 'Linux'}, {'name': ...</td>\n",
              "      <td>[{'name': 'Пользователь ПК'}, {'name': 'Работа...</td>\n",
              "      <td>[{'name': 'MS Dos'}, {'name': 'Диагностика ПК'...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>key_skills_list</th>\n",
              "      <td>[]</td>\n",
              "      <td>[Git, SQL, Тестирование, C#, API]</td>\n",
              "      <td>[SQL, Linux, Информационная безопасность, Рабо...</td>\n",
              "      <td>[Пользователь ПК, Работа в команде, 1С: Предпр...</td>\n",
              "      <td>[MS Dos, Диагностика ПК, Компьютер, Работа в у...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>profarea_id</th>\n",
              "      <td>[1, 15]</td>\n",
              "      <td>[1]</td>\n",
              "      <td>[1]</td>\n",
              "      <td>[1]</td>\n",
              "      <td>[1]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>spec_name</th>\n",
              "      <td>[Начальный уровень, Мало опыта, Тестирование, ...</td>\n",
              "      <td>[Программирование, Разработка, Инженер, Тестир...</td>\n",
              "      <td>[Программирование, Разработка, Инженер, Тестир...</td>\n",
              "      <td>[Компьютерная безопасность, Сетевые технологии...</td>\n",
              "      <td>[Компьютерная безопасность, Сетевые технологии...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>area_id</th>\n",
              "      <td>None</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-90b5d717-d13e-43a3-b7ea-99fe6f93d0f9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-90b5d717-d13e-43a3-b7ea-99fe6f93d0f9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-90b5d717-d13e-43a3-b7ea-99fe6f93d0f9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 89
        }
      ],
      "source": [
        "df.head().T"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 90,
      "metadata": {
        "id": "VYsMrMgJzw62"
      },
      "outputs": [],
      "source": [
        "def get_exp(exp):\n",
        "  try:\n",
        "    if exp != 0:\n",
        "      dict_exp = ast.literal_eval(exp)\n",
        "      experience = dict_exp.get('name')\n",
        "    return experience\n",
        "  except:\n",
        "    return []\n",
        "df['experience_name'] = df['experience'].apply(get_exp)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 91,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3Tn_Ls4O2s-x",
        "outputId": "3dfde206-0720-41e4-d944-8e929c622b33"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0                 Нет опыта\n",
              "1        От 1 года до 3 лет\n",
              "2             От 3 до 6 лет\n",
              "3                 Нет опыта\n",
              "4                 Нет опыта\n",
              "                ...        \n",
              "69651         От 3 до 6 лет\n",
              "69652    От 1 года до 3 лет\n",
              "69653    От 1 года до 3 лет\n",
              "69654         От 3 до 6 лет\n",
              "69655           Более 6 лет\n",
              "Name: experience_name, Length: 69505, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 91
        }
      ],
      "source": [
        "df['experience_name']"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nY5O3VHD27CL"
      },
      "source": [
        "Вытащим график работы в отдельный столбец:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 92,
      "metadata": {
        "id": "ItSIJ9XV25zY"
      },
      "outputs": [],
      "source": [
        "def get_shed(shed):\n",
        "  try:\n",
        "    if shed != 0:\n",
        "      dict_shed = ast.literal_eval(shed)\n",
        "      shedule = dict_shed.get('name')\n",
        "    return shedule\n",
        "  except:\n",
        "    return []\n",
        "df['shedule_name'] = df['schedule'].apply(get_exp)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 93,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EBhVF31G3gg7",
        "outputId": "a10d69ed-7f10-4fe7-8423-7e7960e0c7d5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        Удаленная работа\n",
              "1             Полный день\n",
              "2             Полный день\n",
              "3             Полный день\n",
              "4             Полный день\n",
              "               ...       \n",
              "69651         Полный день\n",
              "69652         Полный день\n",
              "69653         Полный день\n",
              "69654         Полный день\n",
              "69655         Полный день\n",
              "Name: shedule_name, Length: 69505, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 93
        }
      ],
      "source": [
        "df['shedule_name']"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rskO4Q7c307S"
      },
      "source": [
        "### Статистика"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 94,
      "metadata": {
        "id": "UojPknbnC40w"
      },
      "outputs": [],
      "source": [
        "def get_it(area):\n",
        "  try:\n",
        "    if '1' in area:\n",
        "      return 1\n",
        "  except:\n",
        "    return 0\n",
        "df['it'] = df['profarea_id'].apply(get_it)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 95,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 956
        },
        "id": "FxOL5_9R35Xu",
        "outputId": "d294cb3a-570f-479c-8ff9-e8e24bb4ff8b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                    name  \\\n",
              "0                Младший специалист ручного тестирования   \n",
              "1                                        Тестировщик.Net   \n",
              "2                                              Пентестер   \n",
              "3       Ведущий Специалист по информационным технологиям   \n",
              "4                        Специалист по защите информации   \n",
              "...                                                  ...   \n",
              "69651                                   Программист Java   \n",
              "69652                                     Программист 1C   \n",
              "69653         Начальник отдела информационных технологий   \n",
              "69654            Технический директор (DevOps, технолог)   \n",
              "69655  Начальник отдела по защите информации и информ...   \n",
              "\n",
              "                     region region_id region_name  salary_min  \\\n",
              "0      Астраханская область        15   Астрахань         NaN   \n",
              "1      Астраханская область        15   Астрахань     21750.0   \n",
              "2      Астраханская область        15   Астрахань         NaN   \n",
              "3      Астраханская область        15   Астрахань     22620.0   \n",
              "4      Астраханская область        15   Астрахань     20000.0   \n",
              "...                     ...       ...         ...         ...   \n",
              "69651      Тульская область        92        Тула         NaN   \n",
              "69652      Тульская область        92        Тула    130000.0   \n",
              "69653      Тульская область        92        Тула     50000.0   \n",
              "69654      Тульская область        92        Тула     85000.0   \n",
              "69655      Тульская область        92        Тула         NaN   \n",
              "\n",
              "                                         key_skills_list profarea_id  \\\n",
              "0                                                     []     [1, 15]   \n",
              "1                      [Git, SQL, Тестирование, C#, API]         [1]   \n",
              "2      [SQL, Linux, Информационная безопасность, Рабо...         [1]   \n",
              "3      [Пользователь ПК, Работа в команде, 1С: Предпр...         [1]   \n",
              "4      [MS Dos, Диагностика ПК, Компьютер, Работа в у...         [1]   \n",
              "...                                                  ...         ...   \n",
              "69651                                                 []         [1]   \n",
              "69652  [1С: Управление Торговлей, 1С: Предприятие 8, ...         [1]   \n",
              "69653  [Организаторские навыки, Работа в команде, Упр...      [9, 1]   \n",
              "69654                                                 []      [9, 1]   \n",
              "69655  [Информационная безопасность, Аудит безопаснос...      [9, 1]   \n",
              "\n",
              "                                               spec_name     experience_name  \\\n",
              "0      [Начальный уровень, Мало опыта, Тестирование, ...           Нет опыта   \n",
              "1      [Программирование, Разработка, Инженер, Тестир...  От 1 года до 3 лет   \n",
              "2      [Программирование, Разработка, Инженер, Тестир...       От 3 до 6 лет   \n",
              "3      [Компьютерная безопасность, Сетевые технологии...           Нет опыта   \n",
              "4      [Компьютерная безопасность, Сетевые технологии...           Нет опыта   \n",
              "...                                                  ...                 ...   \n",
              "69651  [Программирование, Разработка, Системы управле...       От 3 до 6 лет   \n",
              "69652  [Программирование, Разработка, Системы управле...  От 1 года до 3 лет   \n",
              "69653  [Информационные технологии, Интернет, Мультиме...  От 1 года до 3 лет   \n",
              "69654  [Информационные технологии, Интернет, Мультиме...       От 3 до 6 лет   \n",
              "69655  [Информационные технологии, Интернет, Мультиме...         Более 6 лет   \n",
              "\n",
              "           shedule_name   it  \n",
              "0      Удаленная работа  1.0  \n",
              "1           Полный день  1.0  \n",
              "2           Полный день  1.0  \n",
              "3           Полный день  1.0  \n",
              "4           Полный день  1.0  \n",
              "...                 ...  ...  \n",
              "69651       Полный день  1.0  \n",
              "69652       Полный день  1.0  \n",
              "69653       Полный день  1.0  \n",
              "69654       Полный день  1.0  \n",
              "69655       Полный день  1.0  \n",
              "\n",
              "[50344 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9c67c77c-734a-4d11-943d-7ca448efa9e0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>region</th>\n",
              "      <th>region_id</th>\n",
              "      <th>region_name</th>\n",
              "      <th>salary_min</th>\n",
              "      <th>key_skills_list</th>\n",
              "      <th>profarea_id</th>\n",
              "      <th>spec_name</th>\n",
              "      <th>experience_name</th>\n",
              "      <th>shedule_name</th>\n",
              "      <th>it</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Младший специалист ручного тестирования</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>NaN</td>\n",
              "      <td>[]</td>\n",
              "      <td>[1, 15]</td>\n",
              "      <td>[Начальный уровень, Мало опыта, Тестирование, ...</td>\n",
              "      <td>Нет опыта</td>\n",
              "      <td>Удаленная работа</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Тестировщик.Net</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>21750.0</td>\n",
              "      <td>[Git, SQL, Тестирование, C#, API]</td>\n",
              "      <td>[1]</td>\n",
              "      <td>[Программирование, Разработка, Инженер, Тестир...</td>\n",
              "      <td>От 1 года до 3 лет</td>\n",
              "      <td>Полный день</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Пентестер</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>NaN</td>\n",
              "      <td>[SQL, Linux, Информационная безопасность, Рабо...</td>\n",
              "      <td>[1]</td>\n",
              "      <td>[Программирование, Разработка, Инженер, Тестир...</td>\n",
              "      <td>От 3 до 6 лет</td>\n",
              "      <td>Полный день</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Ведущий Специалист по информационным технологиям</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>22620.0</td>\n",
              "      <td>[Пользователь ПК, Работа в команде, 1С: Предпр...</td>\n",
              "      <td>[1]</td>\n",
              "      <td>[Компьютерная безопасность, Сетевые технологии...</td>\n",
              "      <td>Нет опыта</td>\n",
              "      <td>Полный день</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Специалист по защите информации</td>\n",
              "      <td>Астраханская область</td>\n",
              "      <td>15</td>\n",
              "      <td>Астрахань</td>\n",
              "      <td>20000.0</td>\n",
              "      <td>[MS Dos, Диагностика ПК, Компьютер, Работа в у...</td>\n",
              "      <td>[1]</td>\n",
              "      <td>[Компьютерная безопасность, Сетевые технологии...</td>\n",
              "      <td>Нет опыта</td>\n",
              "      <td>Полный день</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69651</th>\n",
              "      <td>Программист Java</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>NaN</td>\n",
              "      <td>[]</td>\n",
              "      <td>[1]</td>\n",
              "      <td>[Программирование, Разработка, Системы управле...</td>\n",
              "      <td>От 3 до 6 лет</td>\n",
              "      <td>Полный день</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69652</th>\n",
              "      <td>Программист 1C</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>130000.0</td>\n",
              "      <td>[1С: Управление Торговлей, 1С: Предприятие 8, ...</td>\n",
              "      <td>[1]</td>\n",
              "      <td>[Программирование, Разработка, Системы управле...</td>\n",
              "      <td>От 1 года до 3 лет</td>\n",
              "      <td>Полный день</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69653</th>\n",
              "      <td>Начальник отдела информационных технологий</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>50000.0</td>\n",
              "      <td>[Организаторские навыки, Работа в команде, Упр...</td>\n",
              "      <td>[9, 1]</td>\n",
              "      <td>[Информационные технологии, Интернет, Мультиме...</td>\n",
              "      <td>От 1 года до 3 лет</td>\n",
              "      <td>Полный день</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69654</th>\n",
              "      <td>Технический директор (DevOps, технолог)</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>85000.0</td>\n",
              "      <td>[]</td>\n",
              "      <td>[9, 1]</td>\n",
              "      <td>[Информационные технологии, Интернет, Мультиме...</td>\n",
              "      <td>От 3 до 6 лет</td>\n",
              "      <td>Полный день</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69655</th>\n",
              "      <td>Начальник отдела по защите информации и информ...</td>\n",
              "      <td>Тульская область</td>\n",
              "      <td>92</td>\n",
              "      <td>Тула</td>\n",
              "      <td>NaN</td>\n",
              "      <td>[Информационная безопасность, Аудит безопаснос...</td>\n",
              "      <td>[9, 1]</td>\n",
              "      <td>[Информационные технологии, Интернет, Мультиме...</td>\n",
              "      <td>Более 6 лет</td>\n",
              "      <td>Полный день</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>50344 rows × 11 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c67c77c-734a-4d11-943d-7ca448efa9e0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9c67c77c-734a-4d11-943d-7ca448efa9e0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9c67c77c-734a-4d11-943d-7ca448efa9e0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ],
      "source": [
        "df_stat = df[['name', 'region', 'region_id', 'region_name', 'salary_min', 'key_skills_list', \n",
        "              'profarea_id', 'spec_name', 'experience_name', 'shedule_name', 'it']]\n",
        "df_stat = df_stat[df_stat['it']==1]\n",
        "df_stat"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pk66oPDS7Qr7"
      },
      "source": [
        "Типы данных для датасета df_stat:\n",
        "\n",
        "\n",
        "1. name (наименование вакансии) - категориальный тип \n",
        "2. region_id (id региона) - категориальный тип\n",
        "3. region (регион, в котором размещена вакансия) - категориальный тип\n",
        "4. region_name (город, в котором размещена вакансия) - категориальный тип \n",
        "5. salary_min (мингимальная зарплата) - количественный тип\n",
        "6. key_skills_list (список навыков, требуемых в вакансии) - категориальный тип \n",
        "7. profarea_id (id специализации) - категориальный тип \n",
        "8. spec_name (специализация) - категориальный тип \n",
        "9. experience_name (требуемый опыт работы) - категориальный тип\n",
        "10. schedule_name (график работы) - категориальный тип"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E_A77rn8Bi6o"
      },
      "source": [
        "Распределение зарплаты по количеству вакансий"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 96,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 465
        },
        "id": "0_7t_tYQ6a3x",
        "outputId": "8b9e1566-617d-404c-a2fe-a4014145aca3"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "df_stat['salary_min'].hist(bins=20)\n",
        "plt.title(\"Распределение минимальной зарплаты по количеству вакансий\", fontsize = 16)\n",
        "plt.ylabel('Количество вакансий', fontsize = 14)\n",
        "plt.xlabel('Минимальная зарплата, руб.', fontsize = 14)\n",
        "plt.xlim(0)\n",
        "plt.ylim(0)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9NYdoIfmU1qy"
      },
      "source": [
        "Гистограмма распределения заработной платы по внешнему виду не соответствует кривой нормального распределения (колоколу Гаусса)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hXJIEcznBuWY"
      },
      "source": [
        "Распределение вакансий по городам миллионникам"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 97,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "id": "VAgQC7w8Gmu6",
        "outputId": "f5a53890-9ece-4953-a27e-181a0b7680d3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 region_name\n",
              "Москва                 15587\n",
              "Санкт-Петербург         6533\n",
              "Новосибирск             1968\n",
              "Екатеринбург            1874\n",
              "Казань                  1487\n",
              "Краснодар               1107\n",
              "Ростов-на-Дону           965\n",
              "Самара                   882\n",
              "Воронеж                  873\n",
              "Красноярск               675\n",
              "Пермь                    630\n",
              "Челябинск                623\n",
              "Уфа                      610\n",
              "Омск                     496\n",
              "Волгоград                367"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-561a079c-b40a-4056-ab8f-c710687d744a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>region_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Москва</th>\n",
              "      <td>15587</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Санкт-Петербург</th>\n",
              "      <td>6533</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Новосибирск</th>\n",
              "      <td>1968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Екатеринбург</th>\n",
              "      <td>1874</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Казань</th>\n",
              "      <td>1487</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Краснодар</th>\n",
              "      <td>1107</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ростов-на-Дону</th>\n",
              "      <td>965</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Самара</th>\n",
              "      <td>882</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Воронеж</th>\n",
              "      <td>873</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Красноярск</th>\n",
              "      <td>675</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Пермь</th>\n",
              "      <td>630</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Челябинск</th>\n",
              "      <td>623</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Уфа</th>\n",
              "      <td>610</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Омск</th>\n",
              "      <td>496</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Волгоград</th>\n",
              "      <td>367</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-561a079c-b40a-4056-ab8f-c710687d744a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-561a079c-b40a-4056-ab8f-c710687d744a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-561a079c-b40a-4056-ab8f-c710687d744a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ],
      "source": [
        "million_region = df_stat[df_stat['region_name'].isin(million)]\n",
        "million_region = million_region['region_name'].value_counts().to_frame()\n",
        "million_region"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 98,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 471
        },
        "id": "xEQCKx-uB1YV",
        "outputId": "21c78937-34fa-45c7-c13c-972769c0eaa9"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "chart = sns.barplot(x=million_region.index, y=million_region['region_name'], palette=sns.color_palette(\"crest\", n_colors=20))\n",
        "chart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')\n",
        "chart.axes.set_title('Распределение вакансий по городам-миллионникам', fontsize=16)\n",
        "chart.set_xlabel('Города-миллионники', fontsize=14)\n",
        "chart.set_ylabel('Количество вакансий', fontsize=14)\n",
        "chart.set_ylim(ymin=100)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 99,
      "metadata": {
        "id": "eMd7QwlmMBqW"
      },
      "outputs": [],
      "source": [
        "region = df_stat['region'].value_counts().to_frame()\n",
        "region = region[region['region']>500]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 100,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 508
        },
        "id": "GEjn5H_uNIr_",
        "outputId": "b0418f34-8ddc-42e2-c6ce-589664275630"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "chart = sns.barplot(x=region.index, y=region['region'], palette=sns.color_palette(\"crest\", n_colors=30))\n",
        "chart.set_xticklabels(chart.get_xticklabels(), rotation=45, horizontalalignment='right')\n",
        "chart.axes.set_title('Распределение вакансий по регионам (число вакансий больше 500)', fontsize=16)\n",
        "chart.set_xlabel('Регионы', fontsize=14)\n",
        "chart.set_ylabel('Количество вакансий', fontsize=14)\n",
        "chart.set_ylim(ymin=100)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "c_9tVItzOYdS"
      },
      "source": [
        "Распределение вакансий по опыту работы"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 101,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        },
        "id": "2Q3IGblfOd6v",
        "outputId": "acd32a63-cf78-472c-db6d-5980bcf1446e"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "experience_count = df_stat['experience_name'].value_counts()\n",
        "\n",
        "plt.pie(experience_count, labels = experience_count.index, explode=(0.1, 0.1, 0.1, 0.1), \n",
        "        autopct='%1.0f%%', pctdistance=0.9, labeldistance=1.1)\n",
        "plt.title(label = \"Количество вакансий по опыту работы\", fontsize = 14)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4aqm9-4SQL-H"
      },
      "source": [
        "Распределение вакансий по графику работы"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 102,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        },
        "id": "H88Yn_JrPfJM",
        "outputId": "ec22402e-787f-4d67-a4fb-d3e301f2fd70"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "shedule_count = df_stat['shedule_name'].value_counts()\n",
        "\n",
        "plt.pie(shedule_count, labels = shedule_count.index, explode=(0.1, 0.1, 0.1, 0.1, 0.1), \n",
        "        autopct='%1.0f%%', pctdistance=0.9, labeldistance=1.1)\n",
        "plt.title(label = \"Количество вакансий по графику работы\", fontsize = 14)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "czmhkE_CQa-P"
      },
      "source": [
        "Проверим гипотезу о нормальном распределении заработной платы"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 103,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZyY2QYOOQ-6k",
        "outputId": "4f575853-6831-40c8-90a4-ab176ae79c28"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False    20171\n",
              "Name: salary_min, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 103
        }
      ],
      "source": [
        "salary = df_stat['salary_min'].dropna()\n",
        "salary.isnull().value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LnMXktERVbQ4"
      },
      "source": [
        "Проверим нормальность распределения зарплаты по коэффициенту ассиметрии и коэффициенту эксцесса\n",
        "Коэффициент ассиметрии у нормально распределенной выборки равен 0 (возможны отклонения ±1)\n",
        "\n",
        "Коэффициент эксцесса у нормально распределенной выборки равен 3 (возможны отклонения ±1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 104,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zNL9OwUzVTV1",
        "outputId": "0692f848-f5e3-4a42-8254-740f6541a09a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.7705544811130771"
            ]
          },
          "metadata": {},
          "execution_count": 104
        }
      ],
      "source": [
        "#Коэффициент ассиметрии\n",
        "salary.skew()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 105,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AtoY_7sQV6nF",
        "outputId": "66d67dbe-a633-424a-94dc-18e8304a22d1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4.167024854320528"
            ]
          },
          "metadata": {},
          "execution_count": 105
        }
      ],
      "source": [
        "#Коэффициент эксцесса\n",
        "salary.kurtosis()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dFAqJssVVS_i"
      },
      "source": [
        "Коэффициент ассиметрии = 1.77, что больше 0 (±1)\n",
        "Коэффициент эксцесса = 4.16, что больше 3 (±1)\n",
        "Это говорит об отсутствии нормального распределения."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hCFY2BpwXGtE"
      },
      "source": [
        "Гипотеза H0: значения заработной платы имеют нормальное распределение\n",
        "Проверим с помощью теста д'Агостино"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 106,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wx8hDCx2QZnq",
        "outputId": "52ec2b14-8b8e-46d8-a057-7b80ffad6f71"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NormaltestResult(statistic=7072.722804735163, pvalue=0.0)"
            ]
          },
          "metadata": {},
          "execution_count": 106
        }
      ],
      "source": [
        "stats.normaltest(salary)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3HMDixQ3UPv2"
      },
      "source": [
        "Так как pvalue стремится к нулю, гипотезу о нормальном распределении заработной платы отвергаем."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nnXgEIp-Xjxy"
      },
      "source": [
        "Проверим зависимость заработной платы от опыта работы. Закодируем значения опыта работы. Используем критерий Краскала-Уоллиса"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9F3RL0laxsun"
      },
      "source": [
        "Гипотеза H0: Опыт работы не влияет на уровень зарплаты"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 107,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hYzkeD1qZMYg",
        "outputId": "1ee22540-02d6-4cc6-9cd2-522bf1dd72d3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "От 1 года до 3 лет    26143\n",
              "От 3 до 6 лет         16538\n",
              "Нет опыта              6000\n",
              "Более 6 лет            1663\n",
              "Name: experience_name, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 107
        }
      ],
      "source": [
        "df_stat['experience_name'].value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QkCHBhawtRJG"
      },
      "source": [
        "Закодируем опыт работы"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 108,
      "metadata": {
        "id": "ljyrSyLuXdjb"
      },
      "outputs": [],
      "source": [
        "def get_code(experience):\n",
        "  if experience == 'Нет опыта':\n",
        "   code = 0\n",
        "  elif experience == 'От 1 года до 3 лет':\n",
        "    code = 1\n",
        "  elif experience == 'От 3 до 6 лет':\n",
        "    code = 2\n",
        "  else: code = 3\n",
        "  return code\n",
        "df_stat['experience_code'] = df_stat['experience_name'].apply(get_code)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 109,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_zWbCxHV5EHr",
        "outputId": "4ea2346d-07a4-4b60-fcc3-ad4ee05991d2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0            NaN\n",
              "3        22620.0\n",
              "4        20000.0\n",
              "5        15000.0\n",
              "7        23490.0\n",
              "          ...   \n",
              "69564    50000.0\n",
              "69566        NaN\n",
              "69596        NaN\n",
              "69626    26100.0\n",
              "69639    21750.0\n",
              "Name: salary_min, Length: 6000, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 109
        }
      ],
      "source": [
        "df_stat[df_stat['experience_code'] == 0]['salary_min']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 110,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "PDk8hD1LjCED",
        "outputId": "3f64c97d-18c0-41b1-8433-d56bfee4d45b"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "boxplot = sns.boxplot(x='experience_code', y='salary_min', data=df_stat)\n",
        "boxplot.axes.set_title(\"Распределение зарплаты в зависимости от опыта работы\", fontsize=16)\n",
        "boxplot.set_xlabel(\"Опыт работы\", fontsize=14)\n",
        "boxplot.set_ylabel(\"Зарплата\", fontsize=14)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Rs-jFhrLx3UT"
      },
      "source": [
        "Обработаем выбросы"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 111,
      "metadata": {
        "id": "twk-aYh3_LSU"
      },
      "outputs": [],
      "source": [
        "per3_0 = np.percentile(df_stat[df_stat['experience_code'] == 0]['salary_min'].dropna(), 3)\n",
        "per97_0 = np.percentile(df_stat[df_stat['experience_code'] == 0]['salary_min'].dropna(), 97)\n",
        "\n",
        "per3_1 = np.percentile(df_stat[df_stat['experience_code'] == 1]['salary_min'].dropna(), 3)\n",
        "per97_1 = np.percentile(df_stat[df_stat['experience_code'] == 1]['salary_min'].dropna(), 97)\n",
        "\n",
        "per3_2 = np.percentile(df_stat[df_stat['experience_code'] == 2]['salary_min'].dropna(), 3)\n",
        "per97_2 = np.percentile(df_stat[df_stat['experience_code'] == 2]['salary_min'].dropna(), 97)\n",
        "\n",
        "per3_3 = np.percentile(df_stat[df_stat['experience_code'] == 3]['salary_min'].dropna(), 3)\n",
        "per97_3 = np.percentile(df_stat[df_stat['experience_code'] == 3]['salary_min'].dropna(), 97)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 112,
      "metadata": {
        "id": "zF9rrJ9Rt2qm"
      },
      "outputs": [],
      "source": [
        "df_stat_1 = df_stat[df_stat['salary_min'].notna()]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 113,
      "metadata": {
        "id": "DhJpfEh9jo7E"
      },
      "outputs": [],
      "source": [
        "df_stat_1 = df_stat_1.drop(df_stat.loc[(df_stat['experience_code'] == 0) & ((df_stat['salary_min'] < per3_0) | (df_stat['salary_min'] > per97_0))].index)\n",
        "df_stat_1 = df_stat_1.drop(df_stat_1.loc[(df_stat_1['experience_code'] == 1) & ((df_stat_1['salary_min'] < per3_1) | (df_stat['salary_min'] > per97_1))].index)\n",
        "df_stat_1 = df_stat_1.drop(df_stat_1.loc[(df_stat_1['experience_code'] == 2) & ((df_stat_1['salary_min'] < per3_2) | (df_stat['salary_min'] > per97_2))].index)\n",
        "df_stat_1 = df_stat_1.drop(df_stat_1.loc[(df_stat_1['experience_code'] == 3) & ((df_stat_1['salary_min'] < per3_3) | (df_stat['salary_min'] > per97_3))].index)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 114,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "L3dy21xzkJyp",
        "outputId": "c14bc62f-c54a-4e18-d289-932dc3299e37"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "boxplot = sns.boxplot(x='experience_code', y='salary_min', data=df_stat_1)\n",
        "boxplot.axes.set_title(\"Распределение зарплаты в зависимости от опыта работы\", fontsize=16)\n",
        "boxplot.set_xlabel(\"Опыт работы\", fontsize=14)\n",
        "boxplot.set_ylabel(\"Зарплата\", fontsize=14)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 115,
      "metadata": {
        "id": "MM9pWf27-YEm"
      },
      "outputs": [],
      "source": [
        "df_stat_1 = df_stat_1.drop(df_stat_1.loc[(df_stat['experience_code'] == 0) & (df_stat['salary_min'] > 65000)].index)\n",
        "df_stat_1 = df_stat_1.drop(df_stat_1.loc[(df_stat_1['experience_code'] == 1) & (df_stat_1['salary_min'] > 155000)].index)\n",
        "df_stat_1 = df_stat_1.drop(df_stat_1.loc[(df_stat_1['experience_code'] == 2) & (df_stat_1['salary_min'] > 260000)].index)\n",
        "df_stat_1 = df_stat_1.drop(df_stat_1.loc[(df_stat_1['experience_code'] == 3) & (df_stat_1['salary_min'] > 310000)].index)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 116,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "GDo5KwpEq5cF",
        "outputId": "8c4d62a7-8743-4841-8628-187e32001ebf"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "boxplot = sns.boxplot(x='experience_code', y='salary_min', data=df_stat_1)\n",
        "boxplot.axes.set_title(\"Распределение зарплаты в зависимости от опыта работы\", fontsize=16)\n",
        "boxplot.set_xlabel(\"Опыт работы\", fontsize=14)\n",
        "boxplot.set_ylabel(\"Зарплата\", fontsize=14)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Z9VATKU2ta_P"
      },
      "source": [
        "Проверим гипотезу с помощью критерия Краскала-Уоллиса для сравнения нескольких независимых групп категориальных переменных."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 117,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TLzSSaQera3u",
        "outputId": "143cf83c-84b8-46b6-feb7-de70682ef44c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KruskalResult(statistic=8994.026440082313, pvalue=0.0)"
            ]
          },
          "metadata": {},
          "execution_count": 117
        }
      ],
      "source": [
        "dfs1=np.array(df_stat_1[df_stat_1['experience_code']==0]['salary_min'])\n",
        "dfs2=np.array(df_stat_1[df_stat_1['experience_code']==1]['salary_min'])\n",
        "dfs3=np.array(df_stat_1[df_stat_1['experience_code']==2]['salary_min'])\n",
        "dfs4=np.array(df_stat_1[df_stat_1['experience_code']==3]['salary_min'])\n",
        "\n",
        "stats.mstats.kruskalwallis(dfs1,dfs2,dfs3,dfs4)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FT5d2smrx8UM"
      },
      "source": [
        "Так как pvalue стремится к нулю, гипотезу Н0 отвергаем.\n",
        "Уровень заработной платы зависит от опыта работы."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 118,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4aOAEUQ-3y5e",
        "outputId": "d505886a-1c51-4e71-c720-9641768d2ff8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 50344 entries, 0 to 69655\n",
            "Data columns (total 12 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   name             50344 non-null  object \n",
            " 1   region           50344 non-null  object \n",
            " 2   region_id        50344 non-null  object \n",
            " 3   region_name      50344 non-null  object \n",
            " 4   salary_min       20171 non-null  float64\n",
            " 5   key_skills_list  50344 non-null  object \n",
            " 6   profarea_id      50344 non-null  object \n",
            " 7   spec_name        50344 non-null  object \n",
            " 8   experience_name  50344 non-null  object \n",
            " 9   shedule_name     50344 non-null  object \n",
            " 10  it               50344 non-null  float64\n",
            " 11  experience_code  50344 non-null  int64  \n",
            "dtypes: float64(2), int64(1), object(9)\n",
            "memory usage: 6.0+ MB\n"
          ]
        }
      ],
      "source": [
        "df_stat.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 119,
      "metadata": {
        "id": "p1ejlVX55yUD"
      },
      "outputs": [],
      "source": [
        "df_stat_2 = df_stat[['experience_code', 'region_name']]\n",
        "df_stat_2 = df_stat_2[df_stat_2['region_name'].isin(million)]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 120,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "kwQdroJP-IgS",
        "outputId": "a5da5e6b-5c49-48d9-e2b6-f3d83520a5f8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       experience_code region_name\n",
              "4569                 0       Пермь\n",
              "4570                 1       Пермь\n",
              "4571                 1       Пермь\n",
              "4572                 1       Пермь\n",
              "4573                 1       Пермь\n",
              "...                ...         ...\n",
              "68589                1        Омск\n",
              "68590                0        Омск\n",
              "68594                1        Омск\n",
              "68601                0        Омск\n",
              "68604                1        Омск\n",
              "\n",
              "[20459 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b848adbc-e1e9-440d-9f60-a0dc4ee39e3c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>experience_code</th>\n",
              "      <th>region_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4569</th>\n",
              "      <td>0</td>\n",
              "      <td>Пермь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4570</th>\n",
              "      <td>1</td>\n",
              "      <td>Пермь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4571</th>\n",
              "      <td>1</td>\n",
              "      <td>Пермь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4572</th>\n",
              "      <td>1</td>\n",
              "      <td>Пермь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4573</th>\n",
              "      <td>1</td>\n",
              "      <td>Пермь</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68589</th>\n",
              "      <td>1</td>\n",
              "      <td>Омск</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68590</th>\n",
              "      <td>0</td>\n",
              "      <td>Омск</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68594</th>\n",
              "      <td>1</td>\n",
              "      <td>Омск</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68601</th>\n",
              "      <td>0</td>\n",
              "      <td>Омск</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68604</th>\n",
              "      <td>1</td>\n",
              "      <td>Омск</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20459 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b848adbc-e1e9-440d-9f60-a0dc4ee39e3c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b848adbc-e1e9-440d-9f60-a0dc4ee39e3c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b848adbc-e1e9-440d-9f60-a0dc4ee39e3c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 120
        }
      ],
      "source": [
        "df_stat_2 = df_stat_2.drop(df_stat_2.loc[(df_stat_2['experience_code'] == 2)|\n",
        "                                         (df_stat_2['experience_code'] == 3)].index)\n",
        "df_stat_2"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 121,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 225
        },
        "id": "56eOvdFX-zC-",
        "outputId": "042c5478-f36a-49d0-d753-c0dcd62916f6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "region_name      Волгоград  Воронеж  Екатеринбург  Казань  Краснодар  \\\n",
              "experience_code                                                        \n",
              "0                       69      141           190     137        135   \n",
              "1                      213      484          1042     810        619   \n",
              "\n",
              "region_name      Красноярск  Москва  Новосибирск  Омск  Пермь  Ростов-на-Дону  \\\n",
              "experience_code                                                                 \n",
              "0                        99     742          198    94     71             125   \n",
              "1                       367    7345         1092   268    351             555   \n",
              "\n",
              "region_name      Самара  Санкт-Петербург  Уфа  Челябинск  \n",
              "experience_code                                           \n",
              "0                   106              412   86         81  \n",
              "1                   521             3399  345        362  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f38a8648-93e8-4ab0-9262-306058c8de51\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>region_name</th>\n",
              "      <th>Волгоград</th>\n",
              "      <th>Воронеж</th>\n",
              "      <th>Екатеринбург</th>\n",
              "      <th>Казань</th>\n",
              "      <th>Краснодар</th>\n",
              "      <th>Красноярск</th>\n",
              "      <th>Москва</th>\n",
              "      <th>Новосибирск</th>\n",
              "      <th>Омск</th>\n",
              "      <th>Пермь</th>\n",
              "      <th>Ростов-на-Дону</th>\n",
              "      <th>Самара</th>\n",
              "      <th>Санкт-Петербург</th>\n",
              "      <th>Уфа</th>\n",
              "      <th>Челябинск</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>experience_code</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>69</td>\n",
              "      <td>141</td>\n",
              "      <td>190</td>\n",
              "      <td>137</td>\n",
              "      <td>135</td>\n",
              "      <td>99</td>\n",
              "      <td>742</td>\n",
              "      <td>198</td>\n",
              "      <td>94</td>\n",
              "      <td>71</td>\n",
              "      <td>125</td>\n",
              "      <td>106</td>\n",
              "      <td>412</td>\n",
              "      <td>86</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>213</td>\n",
              "      <td>484</td>\n",
              "      <td>1042</td>\n",
              "      <td>810</td>\n",
              "      <td>619</td>\n",
              "      <td>367</td>\n",
              "      <td>7345</td>\n",
              "      <td>1092</td>\n",
              "      <td>268</td>\n",
              "      <td>351</td>\n",
              "      <td>555</td>\n",
              "      <td>521</td>\n",
              "      <td>3399</td>\n",
              "      <td>345</td>\n",
              "      <td>362</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f38a8648-93e8-4ab0-9262-306058c8de51')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f38a8648-93e8-4ab0-9262-306058c8de51 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f38a8648-93e8-4ab0-9262-306058c8de51');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 121
        }
      ],
      "source": [
        "exp_reg=pd.crosstab(df_stat_2['experience_code'], df_stat_2['region_name'])\n",
        "exp_reg"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 122,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 561
        },
        "id": "1pFwEdxn_TRC",
        "outputId": "2016863d-bfb8-4358-9eaf-b9e437de32dd"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14]),\n",
              " <a list of 15 Text major ticklabel objects>)"
            ]
          },
          "metadata": {},
          "execution_count": 122
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "sns.countplot(x=df_stat_2['region_name'], hue=df_stat_2['experience_code'])\n",
        "plt.xticks(fontsize = 10, rotation = 90)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 123,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ITLWwMql_w_K",
        "outputId": "83d6d650-e8f3-49a0-9187-142797f796c2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "test Statistics: 373.64808233327625\n",
            "degrees of freedom: 14\n",
            "p-value: 4.45360514416302e-71\n",
            "\n"
          ]
        }
      ],
      "source": [
        "chi2, prob, df, expected = scipy.stats.chi2_contingency(exp_reg)\n",
        "output = \"test Statistics: {}\\ndegrees of freedom: {}\\np-value: {}\\n\"\n",
        " \n",
        "print(output.format( chi2, df, prob))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "F_oENaffBO2h"
      },
      "source": [
        " **Можно сделать вывод, что опыт работы, требуемый в вакансиях, корреллирован с регионом. Из графика видно, что в городах с большим числом вакансий в сфере ИТ требуются специалисты с опытом работы, middle-специалисты. \n",
        "Образовательному учреждению скорее всего нужно будет обеспечить для выпускника без опыта работы стажировку на реальных кейсах под руководством наставников, или нужно будет увеличивать шансы на трудоустройство с помощью выбора удаленного графика работы, чтобы вести поиск по всей стране.** "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vwLo6AsWuPZB"
      },
      "source": [
        "Выделим навыки, которые востребованы в вакансиях без опыта работы и с опытом работы от года до трех лет. "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 124,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Wl-TDVjYvQ2c",
        "outputId": "9ddbbcf2-cabf-4b9b-fb41-5c23582c432a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 50344 entries, 0 to 69655\n",
            "Data columns (total 12 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   name             50344 non-null  object \n",
            " 1   region           50344 non-null  object \n",
            " 2   region_id        50344 non-null  object \n",
            " 3   region_name      50344 non-null  object \n",
            " 4   salary_min       20171 non-null  float64\n",
            " 5   key_skills_list  50344 non-null  object \n",
            " 6   profarea_id      50344 non-null  object \n",
            " 7   spec_name        50344 non-null  object \n",
            " 8   experience_name  50344 non-null  object \n",
            " 9   shedule_name     50344 non-null  object \n",
            " 10  it               50344 non-null  float64\n",
            " 11  experience_code  50344 non-null  int64  \n",
            "dtypes: float64(2), int64(1), object(9)\n",
            "memory usage: 6.0+ MB\n"
          ]
        }
      ],
      "source": [
        "df_stat.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 125,
      "metadata": {
        "id": "jthj8cP8pp1e"
      },
      "outputs": [],
      "source": [
        "df_stat_3 = df_stat[['experience_code', 'key_skills_list']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 126,
      "metadata": {
        "id": "OHbbE1r_wL2-"
      },
      "outputs": [],
      "source": [
        "df_stat_3 = df_stat_3.drop(df_stat_3.loc[(df_stat_3['experience_code'] == 2)|\n",
        "                                         (df_stat_3['experience_code'] == 3)].index)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 127,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "7OZZxjMMwZIY",
        "outputId": "a61eb2cf-45c3-42da-82cc-01c2735304d1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       experience_code                                    key_skills_list\n",
              "0                    0                                                 []\n",
              "1                    1                  [Git, SQL, Тестирование, C#, API]\n",
              "3                    0  [Пользователь ПК, Работа в команде, 1С: Предпр...\n",
              "4                    0  [MS Dos, Диагностика ПК, Компьютер, Работа в у...\n",
              "5                    0                                                 []\n",
              "...                ...                                                ...\n",
              "69640                1  [MS SQL, Разработка технических заданий, Систе...\n",
              "69646                1  [PHP, HTML, JavaScript, MySQL, CSS, ООП, Git, ...\n",
              "69650                1  [1С программирование, Обновление конфигурации ...\n",
              "69652                1  [1С: Управление Торговлей, 1С: Предприятие 8, ...\n",
              "69653                1  [Организаторские навыки, Работа в команде, Упр...\n",
              "\n",
              "[32143 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-561019df-7eb2-4de9-8e92-cd130cd6ec81\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>experience_code</th>\n",
              "      <th>key_skills_list</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>[Git, SQL, Тестирование, C#, API]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>[Пользователь ПК, Работа в команде, 1С: Предпр...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>[MS Dos, Диагностика ПК, Компьютер, Работа в у...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69640</th>\n",
              "      <td>1</td>\n",
              "      <td>[MS SQL, Разработка технических заданий, Систе...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69646</th>\n",
              "      <td>1</td>\n",
              "      <td>[PHP, HTML, JavaScript, MySQL, CSS, ООП, Git, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69650</th>\n",
              "      <td>1</td>\n",
              "      <td>[1С программирование, Обновление конфигурации ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69652</th>\n",
              "      <td>1</td>\n",
              "      <td>[1С: Управление Торговлей, 1С: Предприятие 8, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69653</th>\n",
              "      <td>1</td>\n",
              "      <td>[Организаторские навыки, Работа в команде, Упр...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>32143 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-561019df-7eb2-4de9-8e92-cd130cd6ec81')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-561019df-7eb2-4de9-8e92-cd130cd6ec81 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-561019df-7eb2-4de9-8e92-cd130cd6ec81');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 127
        }
      ],
      "source": [
        "df_stat_3"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 128,
      "metadata": {
        "id": "LkwfYTVgw3xt"
      },
      "outputs": [],
      "source": [
        "df_stat_3 = df_stat_3.explode('key_skills_list')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 129,
      "metadata": {
        "id": "9civbQzfxPBk"
      },
      "outputs": [],
      "source": [
        "df_stat_3 = df_stat_3.dropna()\n",
        "df_stat_31 = df_stat_3[df_stat_3['experience_code']==0]\n",
        "df_stat_32 = df_stat_3[df_stat_3['experience_code']==1]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 130,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 833
        },
        "id": "Yo8cZDjkx6bm",
        "outputId": "fab6ffc9-99d3-490a-8e54-41fb80614475"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        key_skills_list  num  exp\n",
              "0                      Работа в команде  688    0\n",
              "1                        Грамотная речь  562    0\n",
              "2                       Пользователь ПК  548    0\n",
              "3                                   SQL  419    0\n",
              "4                       Английский язык  345    0\n",
              "5                                 Linux  324    0\n",
              "6   Работа с большим объемом информации  292    0\n",
              "7                       Деловое общение  273    0\n",
              "8                           Грамотность  247    0\n",
              "9                         MS PowerPoint  241    0\n",
              "10                         Настройка ПК  237    0\n",
              "11                                  Git  217    0\n",
              "12                Техническая поддержка  216    0\n",
              "13               Аналитическое мышление  216    0\n",
              "14        Настройка сетевых подключений  204    0\n",
              "15                                 HTML  197    0\n",
              "16                      Adobe Photoshop  194    0\n",
              "17                            Ремонт ПК  194    0\n",
              "18                            Windows 7  190    0\n",
              "19            Информационные технологии  187    0\n",
              "20                           JavaScript  184    0\n",
              "21                  Обучение и развитие  182    0\n",
              "22                    Деловая переписка  179    0\n",
              "23                               Python  179    0\n",
              "24                                  ООП  167    0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d9c54d02-bcfd-4a8e-a6de-129c4cf971af\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>key_skills_list</th>\n",
              "      <th>num</th>\n",
              "      <th>exp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Работа в команде</td>\n",
              "      <td>688</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Грамотная речь</td>\n",
              "      <td>562</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Пользователь ПК</td>\n",
              "      <td>548</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>SQL</td>\n",
              "      <td>419</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Английский язык</td>\n",
              "      <td>345</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Linux</td>\n",
              "      <td>324</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Работа с большим объемом информации</td>\n",
              "      <td>292</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Деловое общение</td>\n",
              "      <td>273</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Грамотность</td>\n",
              "      <td>247</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>MS PowerPoint</td>\n",
              "      <td>241</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Настройка ПК</td>\n",
              "      <td>237</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Git</td>\n",
              "      <td>217</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Техническая поддержка</td>\n",
              "      <td>216</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Аналитическое мышление</td>\n",
              "      <td>216</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Настройка сетевых подключений</td>\n",
              "      <td>204</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>HTML</td>\n",
              "      <td>197</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Adobe Photoshop</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Ремонт ПК</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Windows 7</td>\n",
              "      <td>190</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Информационные технологии</td>\n",
              "      <td>187</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>JavaScript</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Обучение и развитие</td>\n",
              "      <td>182</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Деловая переписка</td>\n",
              "      <td>179</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Python</td>\n",
              "      <td>179</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>ООП</td>\n",
              "      <td>167</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9c54d02-bcfd-4a8e-a6de-129c4cf971af')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d9c54d02-bcfd-4a8e-a6de-129c4cf971af button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d9c54d02-bcfd-4a8e-a6de-129c4cf971af');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 130
        }
      ],
      "source": [
        "dfs31 = df_stat_31['key_skills_list'].value_counts().head(25).to_frame().reset_index()\n",
        "dfs31 = dfs31.rename(columns={'index': 'key_skills_list', 'key_skills_list': 'num'})\n",
        "dfs31['exp'] = 0\n",
        "dfs31"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JslRbggsypcw"
      },
      "source": [
        "В вакансиях без опыта работы возглавляют список топ-навыков soft-скиллы такие, как работа в команде, грамотная речь, английский язык, деловое общение. Из hard-скиллов преобладают SQL, Linux, Git, JavaScript, Python, ООП, PHP. Так же присутствуют в начале списка Работа с большим объемом информации, аналитическое мышление. Все эти навыки характерны для анализа больших данных и работы с базами данных."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 131,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 833
        },
        "id": "CLvw53780pQh",
        "outputId": "28e485a6-b229-46cd-e2d6-83a3220e6f67"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  key_skills_list   num  exp\n",
              "0                             SQL  3607    1\n",
              "1                           Linux  2544    1\n",
              "2                             Git  2496    1\n",
              "3                 Английский язык  1882    1\n",
              "4                Работа в команде  1824    1\n",
              "5                          Python  1657    1\n",
              "6                      JavaScript  1578    1\n",
              "7            Управление проектами  1430    1\n",
              "8             1С программирование  1383    1\n",
              "9                      PostgreSQL  1209    1\n",
              "10              1С: Предприятие 8  1181    1\n",
              "11                 Грамотная речь  1178    1\n",
              "12                           Java  1138    1\n",
              "13                Adobe Photoshop  1103    1\n",
              "14                   Настройка ПК  1052    1\n",
              "15         Аналитическое мышление  1050    1\n",
              "16                           HTML  1028    1\n",
              "17                            ООП   999    1\n",
              "18                          MySQL   996    1\n",
              "19                            PHP   982    1\n",
              "20                  MS PowerPoint   978    1\n",
              "21                         MS SQL   946    1\n",
              "22                 Atlassian Jira   933    1\n",
              "23                   Настройка ПО   923    1\n",
              "24  Настройка сетевых подключений   901    1"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ed8debb4-a4be-4e5e-a556-15b1f41597f6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>key_skills_list</th>\n",
              "      <th>num</th>\n",
              "      <th>exp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>SQL</td>\n",
              "      <td>3607</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Linux</td>\n",
              "      <td>2544</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Git</td>\n",
              "      <td>2496</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Английский язык</td>\n",
              "      <td>1882</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Работа в команде</td>\n",
              "      <td>1824</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Python</td>\n",
              "      <td>1657</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>JavaScript</td>\n",
              "      <td>1578</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Управление проектами</td>\n",
              "      <td>1430</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>1С программирование</td>\n",
              "      <td>1383</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>PostgreSQL</td>\n",
              "      <td>1209</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>1С: Предприятие 8</td>\n",
              "      <td>1181</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Грамотная речь</td>\n",
              "      <td>1178</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Java</td>\n",
              "      <td>1138</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Adobe Photoshop</td>\n",
              "      <td>1103</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Настройка ПК</td>\n",
              "      <td>1052</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Аналитическое мышление</td>\n",
              "      <td>1050</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>HTML</td>\n",
              "      <td>1028</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>ООП</td>\n",
              "      <td>999</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>MySQL</td>\n",
              "      <td>996</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>PHP</td>\n",
              "      <td>982</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>MS PowerPoint</td>\n",
              "      <td>978</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>MS SQL</td>\n",
              "      <td>946</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Atlassian Jira</td>\n",
              "      <td>933</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Настройка ПО</td>\n",
              "      <td>923</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Настройка сетевых подключений</td>\n",
              "      <td>901</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed8debb4-a4be-4e5e-a556-15b1f41597f6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ed8debb4-a4be-4e5e-a556-15b1f41597f6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ed8debb4-a4be-4e5e-a556-15b1f41597f6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 131
        }
      ],
      "source": [
        "dfs32 = df_stat_32['key_skills_list'].value_counts().head(25).to_frame().reset_index()\n",
        "dfs32 = dfs32.rename(columns={'index': 'key_skills_list', 'key_skills_list': 'num'})\n",
        "dfs32['exp'] = 1\n",
        "dfs32"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E_eURIWV0yVv"
      },
      "source": [
        "При анализе списка топ-навыков видим, что на первое место выходят hard-скиллы SQL, Linux, Git, Python, JavaScript, PostgreSQL, HTML, ООП, MySQL, PHP. Из soft-скиллов - работа в команде, английский язык, грамотная речь, аналитическое мышление."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 132,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IjvOt2Ue8d9T",
        "outputId": "4be850ef-3388-4988-d7b0-82c975a27ef5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                        key_skills_list   num  exp\n",
              "0                      Работа в команде   688    0\n",
              "1                        Грамотная речь   562    0\n",
              "2                       Пользователь ПК   548    0\n",
              "3                                   SQL   419    0\n",
              "4                       Английский язык   345    0\n",
              "5                                 Linux   324    0\n",
              "6   Работа с большим объемом информации   292    0\n",
              "7                       Деловое общение   273    0\n",
              "8                           Грамотность   247    0\n",
              "9                         MS PowerPoint   241    0\n",
              "10                         Настройка ПК   237    0\n",
              "11                                  Git   217    0\n",
              "12                Техническая поддержка   216    0\n",
              "13               Аналитическое мышление   216    0\n",
              "14        Настройка сетевых подключений   204    0\n",
              "15                                 HTML   197    0\n",
              "16                      Adobe Photoshop   194    0\n",
              "17                            Ремонт ПК   194    0\n",
              "18                            Windows 7   190    0\n",
              "19            Информационные технологии   187    0\n",
              "20                           JavaScript   184    0\n",
              "21                  Обучение и развитие   182    0\n",
              "22                    Деловая переписка   179    0\n",
              "23                               Python   179    0\n",
              "24                                  ООП   167    0\n",
              "0                                   SQL  3607    1\n",
              "1                                 Linux  2544    1\n",
              "2                                   Git  2496    1\n",
              "3                       Английский язык  1882    1\n",
              "4                      Работа в команде  1824    1\n",
              "5                                Python  1657    1\n",
              "6                            JavaScript  1578    1\n",
              "7                  Управление проектами  1430    1\n",
              "8                   1С программирование  1383    1\n",
              "9                            PostgreSQL  1209    1\n",
              "10                    1С: Предприятие 8  1181    1\n",
              "11                       Грамотная речь  1178    1\n",
              "12                                 Java  1138    1\n",
              "13                      Adobe Photoshop  1103    1\n",
              "14                         Настройка ПК  1052    1\n",
              "15               Аналитическое мышление  1050    1\n",
              "16                                 HTML  1028    1\n",
              "17                                  ООП   999    1\n",
              "18                                MySQL   996    1\n",
              "19                                  PHP   982    1\n",
              "20                        MS PowerPoint   978    1\n",
              "21                               MS SQL   946    1\n",
              "22                       Atlassian Jira   933    1\n",
              "23                         Настройка ПО   923    1\n",
              "24        Настройка сетевых подключений   901    1"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-252a0f0a-e8d9-494a-be95-64f8555bd8a7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>key_skills_list</th>\n",
              "      <th>num</th>\n",
              "      <th>exp</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Работа в команде</td>\n",
              "      <td>688</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Грамотная речь</td>\n",
              "      <td>562</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Пользователь ПК</td>\n",
              "      <td>548</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>SQL</td>\n",
              "      <td>419</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Английский язык</td>\n",
              "      <td>345</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Linux</td>\n",
              "      <td>324</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Работа с большим объемом информации</td>\n",
              "      <td>292</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Деловое общение</td>\n",
              "      <td>273</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Грамотность</td>\n",
              "      <td>247</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>MS PowerPoint</td>\n",
              "      <td>241</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Настройка ПК</td>\n",
              "      <td>237</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Git</td>\n",
              "      <td>217</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Техническая поддержка</td>\n",
              "      <td>216</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Аналитическое мышление</td>\n",
              "      <td>216</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Настройка сетевых подключений</td>\n",
              "      <td>204</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>HTML</td>\n",
              "      <td>197</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Adobe Photoshop</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Ремонт ПК</td>\n",
              "      <td>194</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Windows 7</td>\n",
              "      <td>190</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Информационные технологии</td>\n",
              "      <td>187</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>JavaScript</td>\n",
              "      <td>184</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Обучение и развитие</td>\n",
              "      <td>182</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Деловая переписка</td>\n",
              "      <td>179</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Python</td>\n",
              "      <td>179</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>ООП</td>\n",
              "      <td>167</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>SQL</td>\n",
              "      <td>3607</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Linux</td>\n",
              "      <td>2544</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Git</td>\n",
              "      <td>2496</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Английский язык</td>\n",
              "      <td>1882</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Работа в команде</td>\n",
              "      <td>1824</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Python</td>\n",
              "      <td>1657</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>JavaScript</td>\n",
              "      <td>1578</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Управление проектами</td>\n",
              "      <td>1430</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>1С программирование</td>\n",
              "      <td>1383</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>PostgreSQL</td>\n",
              "      <td>1209</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>1С: Предприятие 8</td>\n",
              "      <td>1181</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Грамотная речь</td>\n",
              "      <td>1178</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Java</td>\n",
              "      <td>1138</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Adobe Photoshop</td>\n",
              "      <td>1103</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Настройка ПК</td>\n",
              "      <td>1052</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Аналитическое мышление</td>\n",
              "      <td>1050</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>HTML</td>\n",
              "      <td>1028</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>ООП</td>\n",
              "      <td>999</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>MySQL</td>\n",
              "      <td>996</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>PHP</td>\n",
              "      <td>982</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>MS PowerPoint</td>\n",
              "      <td>978</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>MS SQL</td>\n",
              "      <td>946</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Atlassian Jira</td>\n",
              "      <td>933</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Настройка ПО</td>\n",
              "      <td>923</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Настройка сетевых подключений</td>\n",
              "      <td>901</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-252a0f0a-e8d9-494a-be95-64f8555bd8a7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-252a0f0a-e8d9-494a-be95-64f8555bd8a7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-252a0f0a-e8d9-494a-be95-64f8555bd8a7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ],
      "source": [
        "dfs3 = pd.concat([dfs31, dfs32])\n",
        "dfs3"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jRo7VkaI9UNN"
      },
      "source": [
        "Проверим гипотезу Н0: нет статистически значимых отличий между навыками для вакансий без опыта работы и с опытом работы от 1 года до трех лет."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 133,
      "metadata": {
        "id": "8lDTK7_T8sEU"
      },
      "outputs": [],
      "source": [
        "exp_skills=pd.crosstab(dfs3['exp'], dfs3['key_skills_list'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 134,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9iHyvaY39RQv",
        "outputId": "ad1a291e-c76a-45a0-955b-1f3b35a969e7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "test Statistics: 373.64808233327625\n",
            "degrees of freedom: 14\n",
            "p-value: 4.45360514416302e-71\n",
            "\n"
          ]
        }
      ],
      "source": [
        "chi2, prob, df, expected = scipy.stats.chi2_contingency(exp_reg)\n",
        "output = \"test Statistics: {}\\ndegrees of freedom: {}\\np-value: {}\\n\"\n",
        " \n",
        "print(output.format( chi2, df, prob))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jefK1lwJ-C6S"
      },
      "source": [
        "p-value меньше 0,05, поэтому гипотезу Н0 отвергаем."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "S9-B5mRytyAZ"
      },
      "outputs": [],
      "source": [
        "df_proc = df[['name', 'region', 'region_id', 'region_name', 'salary_min', \n",
        "              'key_skills_list', 'profarea_id', \n",
        "              'spec_name', 'experience_name', 'shedule_name', \n",
        "              'it']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "WzJuclntiOsX"
      },
      "outputs": [],
      "source": [
        "df_proc.to_excel('dfprocessed.xlsx')\n",
        "from google.colab import files\n",
        "files.download('dfprocessed.xlsx')"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [
        "UlSqr7-_xJnK"
      ],
      "provenance": [],
      "authorship_tag": "ABX9TyMIA22YE3gw54e6cJ9hvUyB",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}